//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DGSRestServices.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DGSDATAEntities : DbContext
    {
        public DGSDATAEntities()
            : base("name=DGSDATAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<ActiveTill> ActiveTill { get; set; }
        public virtual DbSet<ActiveTillCurrency> ActiveTillCurrency { get; set; }
        public virtual DbSet<ActivityLock> ActivityLock { get; set; }
        public virtual DbSet<ADJUSTMENTTYPE> ADJUSTMENTTYPE { get; set; }
        public virtual DbSet<AFFILIATE> AFFILIATE { get; set; }

            public virtual DbSet<AGENT> AGENT { get; set; }
        public virtual DbSet<AGENTACCOUNTING> AGENTACCOUNTING { get; set; }
        public virtual DbSet<AGENTCOMMISSION> AGENTCOMMISSION { get; set; }
        public virtual DbSet<AGENTLINETYPE> AGENTLINETYPE { get; set; }
        public virtual DbSet<AGENTLINETYPELOG> AGENTLINETYPELOG { get; set; }
        public virtual DbSet<AGENTLOG> AGENTLOG { get; set; }
        public virtual DbSet<AGENTLOGONS> AGENTLOGONS { get; set; }
        public virtual DbSet<AGENTLOGONSLOG> AGENTLOGONSLOG { get; set; }
        public virtual DbSet<AGENTNOTES> AGENTNOTES { get; set; }
        public virtual DbSet<AGENTRIGHTS> AGENTRIGHTS { get; set; }
        public virtual DbSet<AGENTRIGHTSLOG> AGENTRIGHTSLOG { get; set; }
        public virtual DbSet<AGENTSTATISTIC> AGENTSTATISTIC { get; set; }
        public virtual DbSet<AGENTTRANSACTION> AGENTTRANSACTION { get; set; }
        public virtual DbSet<AGENTTYPE> AGENTTYPE { get; set; }
        public virtual DbSet<AGENTWEEKLYBALANCE> AGENTWEEKLYBALANCE { get; set; }
        public virtual DbSet<AggLimitWork> AggLimitWork { get; set; }
        public virtual DbSet<ASICustomer> ASICustomer { get; set; }
        public virtual DbSet<ASIProfile> ASIProfile { get; set; }
        public virtual DbSet<ASIUser> ASIUser { get; set; }
        public virtual DbSet<BANNERTYPE> BANNERTYPE { get; set; }
        public virtual DbSet<BANNERTYPELANG> BANNERTYPELANG { get; set; }
        public virtual DbSet<BetTickerRacingQueue> BetTickerRacingQueue { get; set; }
        public virtual DbSet<BOOK> BOOK { get; set; }
        public virtual DbSet<BOOKCLIENTPREFERENCES> BOOKCLIENTPREFERENCES { get; set; }
        public virtual DbSet<BOOKCLIENTPREFERENCESLOG> BOOKCLIENTPREFERENCESLOG { get; set; }
        public virtual DbSet<BOOKPREFIX> BOOKPREFIX { get; set; }
        public virtual DbSet<BOOKTAX> BOOKTAX { get; set; }
        public virtual DbSet<CARDDEF> CARDDEF { get; set; }
        public virtual DbSet<CARDDEFODDS> CARDDEFODDS { get; set; }
        public virtual DbSet<CARDDEFSPORTS> CARDDEFSPORTS { get; set; }
        public virtual DbSet<CARDDETAIL> CARDDETAIL { get; set; }
        public virtual DbSet<CARDHEADER> CARDHEADER { get; set; }
        public virtual DbSet<CARDLINES> CARDLINES { get; set; }
        public virtual DbSet<CashedTicketTemplate> CashedTicketTemplate { get; set; }
        public virtual DbSet<CHANGEDWAGERHEADER> CHANGEDWAGERHEADER { get; set; }
        public virtual DbSet<CHARTLOG> CHARTLOG { get; set; }
        public virtual DbSet<CLIENTCHANGEDLINES> CLIENTCHANGEDLINES { get; set; }
        public virtual DbSet<CURRENCY> CURRENCY { get; set; }
        public virtual DbSet<CW_AGENT> CW_AGENT { get; set; }
        public virtual DbSet<CW_PLAYER> CW_PLAYER { get; set; }
        public virtual DbSet<DEPARTMENT> DEPARTMENT { get; set; }
        public virtual DbSet<DgsToteConfig> DgsToteConfig { get; set; }
        public virtual DbSet<Entry> Entry { get; set; }
        public virtual DbSet<EntryOdds> EntryOdds { get; set; }
        public virtual DbSet<EntryOddsHist> EntryOddsHist { get; set; }
        public virtual DbSet<EntryPastPerf> EntryPastPerf { get; set; }
        public virtual DbSet<EposCurrency> EposCurrency { get; set; }
        public virtual DbSet<EposPlayer> EposPlayer { get; set; }
        public virtual DbSet<EposPlayerCardQ> EposPlayerCardQ { get; set; }
        public virtual DbSet<EposPlayerChangeLog> EposPlayerChangeLog { get; set; }
        public virtual DbSet<EposPlayerPhoto> EposPlayerPhoto { get; set; }
        public virtual DbSet<EposSportsbookTransfer> EposSportsbookTransfer { get; set; }
        public virtual DbSet<EposVoid> EposVoid { get; set; }
        public virtual DbSet<ETSRequestLog> ETSRequestLog { get; set; }
        public virtual DbSet<EVENT> EVENT { get; set; }
        public virtual DbSet<EVENTLANG> EVENTLANG { get; set; }
        public virtual DbSet<ExpiredTicketTransact> ExpiredTicketTransact { get; set; }
        public virtual DbSet<FLAGMESSAGETYPE> FLAGMESSAGETYPE { get; set; }
        public virtual DbSet<FORM> FORM { get; set; }
        public virtual DbSet<FREEPLAYOFFICEOPTIONS> FREEPLAYOFFICEOPTIONS { get; set; }
        public virtual DbSet<GAME> GAME { get; set; }
        public virtual DbSet<GAMEACTION> GAMEACTION { get; set; }
        public virtual DbSet<GAMEACTIONBYAGENT> GAMEACTIONBYAGENT { get; set; }
        public virtual DbSet<GAMEAUTOEVENT> GAMEAUTOEVENT { get; set; }
        public virtual DbSet<GAMEDELETED> GAMEDELETED { get; set; }
        public virtual DbSet<GAMEIMPORTEROPTIONS> GAMEIMPORTEROPTIONS { get; set; }
        public virtual DbSet<GameLang> GameLang { get; set; }
        public virtual DbSet<GamePidScore> GamePidScore { get; set; }
        public virtual DbSet<GAMERELATEDOPTIONS> GAMERELATEDOPTIONS { get; set; }
        public virtual DbSet<GAMERELATEDOPTIONSLOG> GAMERELATEDOPTIONSLOG { get; set; }
        public virtual DbSet<GAMESCORES> GAMESCORES { get; set; }
        public virtual DbSet<GAMESTATPUBQUEUE> GAMESTATPUBQUEUE { get; set; }
        public virtual DbSet<GAMETNT> GAMETNT { get; set; }
        public virtual DbSet<GameTNTLang> GameTNTLang { get; set; }
        public virtual DbSet<GAMETNTPROPACTION> GAMETNTPROPACTION { get; set; }
        public virtual DbSet<GAMETNTPROPBYAGENT> GAMETNTPROPBYAGENT { get; set; }
        public virtual DbSet<GAMETNTPROPBYAGENTLOG> GAMETNTPROPBYAGENTLOG { get; set; }
        public virtual DbSet<GAMETYPE> GAMETYPE { get; set; }
        public virtual DbSet<GAMEVALUES> GAMEVALUES { get; set; }
        public virtual DbSet<GAMEVALUESBYAGENT> GAMEVALUESBYAGENT { get; set; }
        public virtual DbSet<GAMEVALUESBYAGENTLOG> GAMEVALUESBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDGAME> GRADEDGAME { get; set; }
        public virtual DbSet<GRADEDGAMEACTION> GRADEDGAMEACTION { get; set; }
        public virtual DbSet<GRADEDGAMEACTIONBYAGENT> GRADEDGAMEACTIONBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMEDELETED> GRADEDGAMEDELETED { get; set; }
        public virtual DbSet<GRADEDGAMETNT> GRADEDGAMETNT { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPACTION> GRADEDGAMETNTPROPACTION { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPBYAGENT> GRADEDGAMETNTPROPBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPBYAGENTLOG> GRADEDGAMETNTPROPBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDGAMEVALUES> GRADEDGAMEVALUES { get; set; }
        public virtual DbSet<GRADEDGAMEVALUESBYAGENT> GRADEDGAMEVALUESBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMEVALUESBYAGENTLOG> GRADEDGAMEVALUESBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDPITCHERCHANGELOG> GRADEDPITCHERCHANGELOG { get; set; }
        public virtual DbSet<GRADEDWAGERDETAIL> GRADEDWAGERDETAIL { get; set; }
        public virtual DbSet<GRADEDWAGERHEADER> GRADEDWAGERHEADER { get; set; }
        public virtual DbSet<GROUPING> GROUPING { get; set; }
        public virtual DbSet<HOLDWAGERDETAIL> HOLDWAGERDETAIL { get; set; }
        public virtual DbSet<HOLDWAGERHEADER> HOLDWAGERHEADER { get; set; }
        public virtual DbSet<InactiveTill> InactiveTill { get; set; }
        public virtual DbSet<ITEvent> ITEvent { get; set; }
        public virtual DbSet<ITFeedState> ITFeedState { get; set; }
        public virtual DbSet<ITMeet> ITMeet { get; set; }
        public virtual DbSet<JUICEREBATE> JUICEREBATE { get; set; }
        public virtual DbSet<Language> Language { get; set; }
        public virtual DbSet<LEAGUE> LEAGUE { get; set; }
        public virtual DbSet<LEAGUELANG> LEAGUELANG { get; set; }
        public virtual DbSet<LEAGUEREGION> LEAGUEREGION { get; set; }
        public virtual DbSet<LEAGUEREGIONLANG> LEAGUEREGIONLANG { get; set; }
        public virtual DbSet<LimitSet> LimitSet { get; set; }
        public virtual DbSet<LimitSetBetType> LimitSetBetType { get; set; }
        public virtual DbSet<LimitSetTrack> LimitSetTrack { get; set; }
        public virtual DbSet<LinePubQueue> LinePubQueue { get; set; }
        public virtual DbSet<LineSubscriber> LineSubscriber { get; set; }
        public virtual DbSet<LineSubscriberType> LineSubscriberType { get; set; }
        public virtual DbSet<LINETYPE> LINETYPE { get; set; }
        public virtual DbSet<LINETYPEFLAG> LINETYPEFLAG { get; set; }
        public virtual DbSet<LINETYPELINKS> LINETYPELINKS { get; set; }
        public virtual DbSet<LIVEBET> LIVEBET { get; set; }
        public virtual DbSet<LiveDealer> LiveDealer { get; set; }
        public virtual DbSet<Location> Location { get; set; }
        public virtual DbSet<LocationCurrency> LocationCurrency { get; set; }
        public virtual DbSet<LOCATIONTAX> LOCATIONTAX { get; set; }
        public virtual DbSet<LOCK> LOCK { get; set; }
        public virtual DbSet<LSCONFIG> LSCONFIG { get; set; }
        public virtual DbSet<LSINFO> LSINFO { get; set; }
        public virtual DbSet<ManagerLocation> ManagerLocation { get; set; }
        public virtual DbSet<ManagerRights> ManagerRights { get; set; }
        public virtual DbSet<ManualScoreQ> ManualScoreQ { get; set; }
        public virtual DbSet<MaxPayoutWork> MaxPayoutWork { get; set; }
        public virtual DbSet<MENUREPORTFILES> MENUREPORTFILES { get; set; }
        public virtual DbSet<MENUREPORTITEMS> MENUREPORTITEMS { get; set; }
        public virtual DbSet<MENUREPORTLOG> MENUREPORTLOG { get; set; }
        public virtual DbSet<MENUREPORTMENU> MENUREPORTMENU { get; set; }
        public virtual DbSet<MENUREPORTPARAMS> MENUREPORTPARAMS { get; set; }
        public virtual DbSet<MLBEASTERNLINE> MLBEASTERNLINE { get; set; }
        public virtual DbSet<MLBWIDELINE> MLBWIDELINE { get; set; }
        public virtual DbSet<MONEYCHANGE> MONEYCHANGE { get; set; }
        public virtual DbSet<ODDSBYSPORT> ODDSBYSPORT { get; set; }
        public virtual DbSet<ODDSDEFAULT> ODDSDEFAULT { get; set; }
        public virtual DbSet<OFFICE> OFFICE { get; set; }
        public virtual DbSet<ONLINEWAGERTRACKER> ONLINEWAGERTRACKER { get; set; }
        public virtual DbSet<PAYMENTMETHOD> PAYMENTMETHOD { get; set; }
        public virtual DbSet<PAYMENTS> PAYMENTS { get; set; }
        public virtual DbSet<PAYMENTSCREDITCARD> PAYMENTSCREDITCARD { get; set; }
        public virtual DbSet<PERIOD> PERIOD { get; set; }
        public virtual DbSet<PERL_DBD_TEST> PERL_DBD_TEST { get; set; }
        public virtual DbSet<PITCHER> PITCHER { get; set; }
        public virtual DbSet<PITCHERCHANGELOG> PITCHERCHANGELOG { get; set; }
        public virtual DbSet<PITCHERLANG> PITCHERLANG { get; set; }
        public virtual DbSet<PLAYER> PLAYER { get; set; }
        public virtual DbSet<PLAYERACCOUNTING> PLAYERACCOUNTING { get; set; }
        public virtual DbSet<PLAYERAGENTLOG> PLAYERAGENTLOG { get; set; }
        public virtual DbSet<PLAYERBLACKBOOK> PLAYERBLACKBOOK { get; set; }
        public virtual DbSet<PLAYERBONUSTRANSACTIONS> PLAYERBONUSTRANSACTIONS { get; set; }
        public virtual DbSet<PlayerClaims> PlayerClaims { get; set; }
        public virtual DbSet<PLAYERCREDITCARD> PLAYERCREDITCARD { get; set; }
        public virtual DbSet<PLAYERHOLDSETTINGS> PLAYERHOLDSETTINGS { get; set; }
        public virtual DbSet<PLAYERLOG> PLAYERLOG { get; set; }
        public virtual DbSet<PLAYERLOGONS> PLAYERLOGONS { get; set; }
        public virtual DbSet<PLAYERMESSAGES> PLAYERMESSAGES { get; set; }
        public virtual DbSet<PLAYERNOTES> PLAYERNOTES { get; set; }
        public virtual DbSet<PLAYERPROFILE> PLAYERPROFILE { get; set; }
        public virtual DbSet<PLAYERPROFILEBOOK> PLAYERPROFILEBOOK { get; set; }
        public virtual DbSet<PLAYERPROFILECUSTOMTEASER> PLAYERPROFILECUSTOMTEASER { get; set; }
        public virtual DbSet<PLAYERPROFILECUSTOMTEASERLOG> PLAYERPROFILECUSTOMTEASERLOG { get; set; }
        public virtual DbSet<PLAYERPROFILEGAMETYPE> PLAYERPROFILEGAMETYPE { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITS> PLAYERPROFILELIMITS { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSBOOK> PLAYERPROFILELIMITSBOOK { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSDETAILS> PLAYERPROFILELIMITSDETAILS { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSDETAILSLOG> PLAYERPROFILELIMITSDETAILSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSLOG> PLAYERPROFILELIMITSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILELOG> PLAYERPROFILELOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYBASICSPORTS> PLAYERPROFILEPARLAYBASICSPORTS { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYBASICSPORTSLOG> PLAYERPROFILEPARLAYBASICSPORTSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMIT> PLAYERPROFILEPARLAYLIMIT { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITDETAIL> PLAYERPROFILEPARLAYLIMITDETAIL { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITDETAILLOG> PLAYERPROFILEPARLAYLIMITDETAILLOG { get; set; }
        public virtual DbSet<PLAYERPROFILESTRAIGHTLIMIT> PLAYERPROFILESTRAIGHTLIMIT { get; set; }
        public virtual DbSet<PLAYERPROFILESTRAIGHTLIMITLOG> PLAYERPROFILESTRAIGHTLIMITLOG { get; set; }
        public virtual DbSet<PLAYERRATE> PLAYERRATE { get; set; }
        public virtual DbSet<PLAYERSTATISTIC> PLAYERSTATISTIC { get; set; }
        public virtual DbSet<PLAYERTRANSACTION> PLAYERTRANSACTION { get; set; }
        public virtual DbSet<PLAYERWEEKLYBALANCE> PLAYERWEEKLYBALANCE { get; set; }
        public virtual DbSet<PoolPayout> PoolPayout { get; set; }
        public virtual DbSet<ProfileTrack> ProfileTrack { get; set; }
        public virtual DbSet<ProfileTrackEnable> ProfileTrackEnable { get; set; }
        public virtual DbSet<Race> Race { get; set; }
        public virtual DbSet<RaceChart> RaceChart { get; set; }
        public virtual DbSet<RaceChartQueue> RaceChartQueue { get; set; }
        public virtual DbSet<RaceControl> RaceControl { get; set; }
        public virtual DbSet<RaceTicketBatchDetail> RaceTicketBatchDetail { get; set; }
        public virtual DbSet<RaceTicketBatchHeader> RaceTicketBatchHeader { get; set; }
        public virtual DbSet<RaceTicketDetail> RaceTicketDetail { get; set; }
        public virtual DbSet<RaceTicketMain> RaceTicketMain { get; set; }
        public virtual DbSet<RaceTicketType> RaceTicketType { get; set; }
        public virtual DbSet<RebateDetail> RebateDetail { get; set; }
        public virtual DbSet<RebateHeader> RebateHeader { get; set; }
        public virtual DbSet<RefillTill> RefillTill { get; set; }
        public virtual DbSet<RIGHTS> RIGHTS { get; set; }
        public virtual DbSet<SOCONFIG> SOCONFIG { get; set; }
        public virtual DbSet<SOINFO> SOINFO { get; set; }
        public virtual DbSet<SOURCE> SOURCE { get; set; }
        public virtual DbSet<SOURCEBYBOOK> SOURCEBYBOOK { get; set; }
        public virtual DbSet<SPORT> SPORT { get; set; }
        public virtual DbSet<SportsOptionsGroup> SportsOptionsGroup { get; set; }
        public virtual DbSet<SportsOptionsLeague> SportsOptionsLeague { get; set; }
        public virtual DbSet<SportsOptionsSchedule> SportsOptionsSchedule { get; set; }
        public virtual DbSet<SportsOptionsSport> SportsOptionsSport { get; set; }
        public virtual DbSet<SWFeedState> SWFeedState { get; set; }
        public virtual DbSet<SYSTEMBETRADAR> SYSTEMBETRADAR { get; set; }
        public virtual DbSet<SYSTEMBETRADARSPORT> SYSTEMBETRADARSPORT { get; set; }
        public virtual DbSet<SYSTEMBETRADARTNT> SYSTEMBETRADARTNT { get; set; }
        public virtual DbSet<SYSTEMBONUSOPTIONS> SYSTEMBONUSOPTIONS { get; set; }
        public virtual DbSet<SYSTEMBONUSSETTINGDETAIL> SYSTEMBONUSSETTINGDETAIL { get; set; }
        public virtual DbSet<SYSTEMCALLS> SYSTEMCALLS { get; set; }
        public virtual DbSet<SYSTEMCHANGEDLINES> SYSTEMCHANGEDLINES { get; set; }
        public virtual DbSet<SYSTEMCHANGEDLINESLOG> SYSTEMCHANGEDLINESLOG { get; set; }
        public virtual DbSet<SYSTEMCOLORS> SYSTEMCOLORS { get; set; }
        public virtual DbSet<SYSTEMDBSINFO> SYSTEMDBSINFO { get; set; }
        public virtual DbSet<SYSTEMDICTIONARY> SYSTEMDICTIONARY { get; set; }
        public virtual DbSet<SYSTEMDISTRIBUTIONLOG> SYSTEMDISTRIBUTIONLOG { get; set; }
        public virtual DbSet<SYSTEMLANGUAGE> SYSTEMLANGUAGE { get; set; }
        public virtual DbSet<SYSTEMMONITORSETTINGS> SYSTEMMONITORSETTINGS { get; set; }
        public virtual DbSet<SYSTEMMOVERRANGE> SYSTEMMOVERRANGE { get; set; }
        public virtual DbSet<SYSTEMODDSCONVERSION> SYSTEMODDSCONVERSION { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESCLIENTLOG> SYSTEMPREFERENCESCLIENTLOG { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESDEFAULT> SYSTEMPREFERENCESDEFAULT { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESDEFAULTLOG> SYSTEMPREFERENCESDEFAULTLOG { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESMANAGERLOG> SYSTEMPREFERENCESMANAGERLOG { get; set; }
        public virtual DbSet<SYSTEMPROCESSFLAG> SYSTEMPROCESSFLAG { get; set; }
        public virtual DbSet<SYSTEMPROCESSLOG> SYSTEMPROCESSLOG { get; set; }
        public virtual DbSet<SYSTEMPROCESSLOGDETAIL> SYSTEMPROCESSLOGDETAIL { get; set; }
        public virtual DbSet<TaceoAgentLineRule> TaceoAgentLineRule { get; set; }
        public virtual DbSet<TaceoAgentLineTypeRights> TaceoAgentLineTypeRights { get; set; }
        public virtual DbSet<TaceoAgentLogin> TaceoAgentLogin { get; set; }
        public virtual DbSet<TaceoAgentSportRights> TaceoAgentSportRights { get; set; }
        public virtual DbSet<TaceoAgentWebLog> TaceoAgentWebLog { get; set; }
        public virtual DbSet<TaceoAgentYubico> TaceoAgentYubico { get; set; }
        public virtual DbSet<TaceoApiGetCustomerInfoLog> TaceoApiGetCustomerInfoLog { get; set; }
        public virtual DbSet<TaceoApiPostTransActionLog> TaceoApiPostTransActionLog { get; set; }
        public virtual DbSet<TaceoASLGAME> TaceoASLGAME { get; set; }
        public virtual DbSet<TaceoASLLEAGUE> TaceoASLLEAGUE { get; set; }
        public virtual DbSet<TaceoASLSPORT> TaceoASLSPORT { get; set; }
        public virtual DbSet<TaceoASLUser> TaceoASLUser { get; set; }
        public virtual DbSet<TaceoBCGameInfo> TaceoBCGameInfo { get; set; }
        public virtual DbSet<TaceoBetTicker> TaceoBetTicker { get; set; }
        public virtual DbSet<TaceoBookMessage> TaceoBookMessage { get; set; }
        public virtual DbSet<TaceoCheckBetAlg> TaceoCheckBetAlg { get; set; }
        public virtual DbSet<TaceoCopyCat> TaceoCopyCat { get; set; }
        public virtual DbSet<TaceoCopyCatHist> TaceoCopyCatHist { get; set; }
        public virtual DbSet<TaceoDomainCustomUrls> TaceoDomainCustomUrls { get; set; }
        public virtual DbSet<TaceoDomainMessage> TaceoDomainMessage { get; set; }
        public virtual DbSet<TaceoDomainNames> TaceoDomainNames { get; set; }
        public virtual DbSet<TaceoEPOSEcsaLocations> TaceoEPOSEcsaLocations { get; set; }
        public virtual DbSet<TaceoEPOSECSALog> TaceoEPOSECSALog { get; set; }
        public virtual DbSet<TaceoEPOSIpAccess> TaceoEPOSIpAccess { get; set; }
        public virtual DbSet<TaceoEPOSReportLog> TaceoEPOSReportLog { get; set; }
        public virtual DbSet<TaceoEPOSUser> TaceoEPOSUser { get; set; }
        public virtual DbSet<TaceoEPOSUserLocations> TaceoEPOSUserLocations { get; set; }
        public virtual DbSet<TaceoErrorLog> TaceoErrorLog { get; set; }
        public virtual DbSet<TaceoGroupingMessage> TaceoGroupingMessage { get; set; }
        public virtual DbSet<TaceoHeartBeat> TaceoHeartBeat { get; set; }
        public virtual DbSet<TaceoHideGame> TaceoHideGame { get; set; }
        public virtual DbSet<TaceoImportedLeague> TaceoImportedLeague { get; set; }
        public virtual DbSet<TaceoImportedLine> TaceoImportedLine { get; set; }
        public virtual DbSet<TaceoImportedML> TaceoImportedML { get; set; }
        public virtual DbSet<TaceoImportedSpread> TaceoImportedSpread { get; set; }
        public virtual DbSet<TaceoImportedTeam> TaceoImportedTeam { get; set; }
        public virtual DbSet<TaceoImportedTotals> TaceoImportedTotals { get; set; }
        public virtual DbSet<TaceoInternalReportsLog> TaceoInternalReportsLog { get; set; }
        public virtual DbSet<TaceoIpAccess> TaceoIpAccess { get; set; }
        public virtual DbSet<TaceoLineboardNotification> TaceoLineboardNotification { get; set; }
        public virtual DbSet<TaceoLineConverterLog> TaceoLineConverterLog { get; set; }
        public virtual DbSet<TaceoLineConverterSportConfig> TaceoLineConverterSportConfig { get; set; }
        public virtual DbSet<TaceoLineNotification> TaceoLineNotification { get; set; }
        public virtual DbSet<TaceoMatchPinnGame> TaceoMatchPinnGame { get; set; }
        public virtual DbSet<TaceoMonitorSetting> TaceoMonitorSetting { get; set; }
        public virtual DbSet<TaceoNitroGameInfo> TaceoNitroGameInfo { get; set; }
        public virtual DbSet<TaceoNitroUser> TaceoNitroUser { get; set; }
        public virtual DbSet<TaceoPasswordRecovery> TaceoPasswordRecovery { get; set; }
        public virtual DbSet<TaceoPinnBalance> TaceoPinnBalance { get; set; }
        public virtual DbSet<TaceoPinnBet> TaceoPinnBet { get; set; }
        public virtual DbSet<TaceoPinnClientBalance> TaceoPinnClientBalance { get; set; }
        public virtual DbSet<TaceoPinnEvent> TaceoPinnEvent { get; set; }
        public virtual DbSet<TaceoPinnLast> TaceoPinnLast { get; set; }
        public virtual DbSet<TaceoPinnLeague> TaceoPinnLeague { get; set; }
        public virtual DbSet<TaceoPinnLine> TaceoPinnLine { get; set; }
        public virtual DbSet<TaceoPinnMatchLeague> TaceoPinnMatchLeague { get; set; }
        public virtual DbSet<TaceoPinnMatchLeagueASL> TaceoPinnMatchLeagueASL { get; set; }
        public virtual DbSet<TaceoPinnMatchSport> TaceoPinnMatchSport { get; set; }
        public virtual DbSet<TaceoPinnMatchSportASL> TaceoPinnMatchSportASL { get; set; }
        public virtual DbSet<TaceoPinnMatchTeams> TaceoPinnMatchTeams { get; set; }
        public virtual DbSet<TaceoPinnMoneyLine> TaceoPinnMoneyLine { get; set; }
        public virtual DbSet<TaceoPinnPeriod> TaceoPinnPeriod { get; set; }
        public virtual DbSet<TaceoPinnPlaceBetReply> TaceoPinnPlaceBetReply { get; set; }
        public virtual DbSet<TaceoPinnPlaceBetRequest> TaceoPinnPlaceBetRequest { get; set; }
        public virtual DbSet<TaceoPinnSport> TaceoPinnSport { get; set; }
        public virtual DbSet<TaceoPinnSpread> TaceoPinnSpread { get; set; }
        public virtual DbSet<TaceoPinnTeamTotalPoints> TaceoPinnTeamTotalPoints { get; set; }
        public virtual DbSet<TaceoPinnTotalPoints> TaceoPinnTotalPoints { get; set; }
        public virtual DbSet<TaceoPinnXmlFeed> TaceoPinnXmlFeed { get; set; }
        public virtual DbSet<TaceoPlaceBetAlg> TaceoPlaceBetAlg { get; set; }
        public virtual DbSet<TaceoPlaceBetAlg2> TaceoPlaceBetAlg2 { get; set; }
        public virtual DbSet<TaceoPlayerInfo> TaceoPlayerInfo { get; set; }
        public virtual DbSet<TaceoPlayerLoginLog> TaceoPlayerLoginLog { get; set; }
        public virtual DbSet<TaceoPlayerRights> TaceoPlayerRights { get; set; }
        public virtual DbSet<TaceoRasPicks> TaceoRasPicks { get; set; }
        public virtual DbSet<TaceoRegionToAgent> TaceoRegionToAgent { get; set; }
        public virtual DbSet<TaceoRssfeed> TaceoRssfeed { get; set; }
        public virtual DbSet<TaceoSEEventsNew> TaceoSEEventsNew { get; set; }
        public virtual DbSet<TaceoSELeague> TaceoSELeague { get; set; }
        public virtual DbSet<TaceoSELeagueFK> TaceoSELeagueFK { get; set; }
        public virtual DbSet<TaceoSELeagueNew> TaceoSELeagueNew { get; set; }
        public virtual DbSet<TaceoSESport> TaceoSESport { get; set; }
        public virtual DbSet<TaceoSESportFK> TaceoSESportFK { get; set; }
        public virtual DbSet<TaceoSESportNew> TaceoSESportNew { get; set; }
        public virtual DbSet<TaceoSignUp> TaceoSignUp { get; set; }
        public virtual DbSet<TaceoSoccerTNTPROPMex> TaceoSoccerTNTPROPMex { get; set; }
        public virtual DbSet<TaceoSoEvent> TaceoSoEvent { get; set; }
        public virtual DbSet<TaceoSoEvent_Line> TaceoSoEvent_Line { get; set; }
        public virtual DbSet<TaceoSoEvent_Score> TaceoSoEvent_Score { get; set; }
        public virtual DbSet<TaceoSoEvent_Team_Line> TaceoSoEvent_Team_Line { get; set; }
        public virtual DbSet<TaceoSoEvent_Team_Score> TaceoSoEvent_Team_Score { get; set; }
        public virtual DbSet<TaceoSoGroup> TaceoSoGroup { get; set; }
        public virtual DbSet<TaceoSoGroup_Header> TaceoSoGroup_Header { get; set; }
        public virtual DbSet<TaceoSoLeague> TaceoSoLeague { get; set; }
        public virtual DbSet<TaceoSoProp_Item_Line> TaceoSoProp_Item_Line { get; set; }
        public virtual DbSet<TaceoSoSport> TaceoSoSport { get; set; }
        public virtual DbSet<TaceoSoTeam> TaceoSoTeam { get; set; }
        public virtual DbSet<TaceoSOXmlFeed> TaceoSOXmlFeed { get; set; }
        public virtual DbSet<TaceoSyncDGSdbTestingDB> TaceoSyncDGSdbTestingDB { get; set; }
        public virtual DbSet<TaceoTeamMatchBC> TaceoTeamMatchBC { get; set; }
        public virtual DbSet<TaceoUserLineTypeRights> TaceoUserLineTypeRights { get; set; }
        public virtual DbSet<TaceoUserSportRights> TaceoUserSportRights { get; set; }
        public virtual DbSet<TaceoUserYubico> TaceoUserYubico { get; set; }
        public virtual DbSet<TaceoUTEvent> TaceoUTEvent { get; set; }
        public virtual DbSet<TaceoUTOdds> TaceoUTOdds { get; set; }
        public virtual DbSet<TaceoUTPool> TaceoUTPool { get; set; }
        public virtual DbSet<TaceoUTRace> TaceoUTRace { get; set; }
        public virtual DbSet<TaceoUTRunners> TaceoUTRunners { get; set; }
        public virtual DbSet<TaceoUTStatusChange> TaceoUTStatusChange { get; set; }
        public virtual DbSet<TaceoUTUpdate> TaceoUTUpdate { get; set; }
        public virtual DbSet<TaceoWagerLog> TaceoWagerLog { get; set; }
        public virtual DbSet<TaceoXmlFeed> TaceoXmlFeed { get; set; }
        public virtual DbSet<TaceoYubicoDateRestriction> TaceoYubicoDateRestriction { get; set; }
        public virtual DbSet<TaceoYubicoOption> TaceoYubicoOption { get; set; }
        public virtual DbSet<TaceoYubicoRestrictedRights> TaceoYubicoRestrictedRights { get; set; }
        public virtual DbSet<TAX> TAX { get; set; }
        public virtual DbSet<TAXTRANSACT> TAXTRANSACT { get; set; }
        public virtual DbSet<TEAM> TEAM { get; set; }
        public virtual DbSet<TEAMLANG> TEAMLANG { get; set; }
        public virtual DbSet<TeaserBtnDetail> TeaserBtnDetail { get; set; }
        public virtual DbSet<TeaserBtnMain> TeaserBtnMain { get; set; }
        public virtual DbSet<Terminal> Terminal { get; set; }
        public virtual DbSet<TerminalManager> TerminalManager { get; set; }
        public virtual DbSet<TerminalSessionActive> TerminalSessionActive { get; set; }
        public virtual DbSet<TerminalSessionClosed> TerminalSessionClosed { get; set; }
        public virtual DbSet<TICKERCONFIGURATION> TICKERCONFIGURATION { get; set; }
        public virtual DbSet<TICKERCONFIGURATIONDETAIL> TICKERCONFIGURATIONDETAIL { get; set; }
        public virtual DbSet<TICKERUSERLINETYPE> TICKERUSERLINETYPE { get; set; }
        public virtual DbSet<TicketDetail> TicketDetail { get; set; }
        public virtual DbSet<TicketHold> TicketHold { get; set; }
        public virtual DbSet<TicketHoldRelease> TicketHoldRelease { get; set; }
        public virtual DbSet<TicketMain> TicketMain { get; set; }
        public virtual DbSet<TICKETTEMPLATE> TICKETTEMPLATE { get; set; }
        public virtual DbSet<TILL> TILL { get; set; }
        public virtual DbSet<TillTransact> TillTransact { get; set; }
        public virtual DbSet<TIMEZONE> TIMEZONE { get; set; }
        public virtual DbSet<TIPEXBOOKMAKERS> TIPEXBOOKMAKERS { get; set; }
        public virtual DbSet<TIPEXSPORT> TIPEXSPORT { get; set; }
        public virtual DbSet<TIPEXSPORTMASTERID> TIPEXSPORTMASTERID { get; set; }
        public virtual DbSet<Track> Track { get; set; }
        public virtual DbSet<TrackAmtote> TrackAmtote { get; set; }
        public virtual DbSet<TrackUTote> TrackUTote { get; set; }
        public virtual DbSet<USERCHARTCONFIGURATION> USERCHARTCONFIGURATION { get; set; }
        public virtual DbSet<USERLINETYPE> USERLINETYPE { get; set; }
        public virtual DbSet<USERLOGONS> USERLOGONS { get; set; }
        public virtual DbSet<USERMESSAGE> USERMESSAGE { get; set; }
        public virtual DbSet<USERPROFILE> USERPROFILE { get; set; }
        public virtual DbSet<USERPROFILEMSG> USERPROFILEMSG { get; set; }
        public virtual DbSet<USERPROFILERIGHTS> USERPROFILERIGHTS { get; set; }
        public virtual DbSet<USERPROFILERIGHTSLOG> USERPROFILERIGHTSLOG { get; set; }
        public virtual DbSet<USERRIGHTS> USERRIGHTS { get; set; }
        public virtual DbSet<USERRIGHTSLOG> USERRIGHTSLOG { get; set; }
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<USERSACTIONLOG> USERSACTIONLOG { get; set; }
        public virtual DbSet<USERSBOOK> USERSBOOK { get; set; }
        public virtual DbSet<USERSLANGUAGE> USERSLANGUAGE { get; set; }
        public virtual DbSet<USERSLOG> USERSLOG { get; set; }
        public virtual DbSet<VIPAccount> VIPAccount { get; set; }
        public virtual DbSet<VIPUserSession> VIPUserSession { get; set; }
        public virtual DbSet<Voucher> Voucher { get; set; }
        public virtual DbSet<VoucherTemplate> VoucherTemplate { get; set; }
        public virtual DbSet<VoucherTrans> VoucherTrans { get; set; }
        public virtual DbSet<WAGERDETAIL> WAGERDETAIL { get; set; }
        public virtual DbSet<WAGERHEADER> WAGERHEADER { get; set; }
        public virtual DbSet<WAGERTRACKER> WAGERTRACKER { get; set; }
        public virtual DbSet<WAGERTYPE> WAGERTYPE { get; set; }
        public virtual DbSet<WAGERTYPEGROUPLANG> WAGERTYPEGROUPLANG { get; set; }
        public virtual DbSet<WAGERTYPELANG> WAGERTYPELANG { get; set; }
        public virtual DbSet<WAGERTYPESPORT> WAGERTYPESPORT { get; set; }
        public virtual DbSet<WEBCOLUMN> WEBCOLUMN { get; set; }
        public virtual DbSet<WEBCOLUMNDETAIL> WEBCOLUMNDETAIL { get; set; }
        public virtual DbSet<WEBROW> WEBROW { get; set; }
        public virtual DbSet<WEBROWDETAIL> WEBROWDETAIL { get; set; }
        public virtual DbSet<WEBROWLANG> WEBROWLANG { get; set; }
        public virtual DbSet<WebSession> WebSession { get; set; }
        public virtual DbSet<WebSessionDetail> WebSessionDetail { get; set; }
        public virtual DbSet<ATRISKLOG> ATRISKLOG { get; set; }
        public virtual DbSet<backupPA> backupPA { get; set; }
        public virtual DbSet<backupPW> backupPW { get; set; }
        public virtual DbSet<CasinoSolutions_PlayerAccounting> CasinoSolutions_PlayerAccounting { get; set; }
        public virtual DbSet<CASINOTRANSACTIONS> CASINOTRANSACTIONS { get; set; }
        public virtual DbSet<CHANGEDWAGERDETAIL> CHANGEDWAGERDETAIL { get; set; }
        public virtual DbSet<DISBTEMP> DISBTEMP { get; set; }
        public virtual DbSet<FREEPLAYOFFICEOPTIONS_BKP> FREEPLAYOFFICEOPTIONS_BKP { get; set; }
        public virtual DbSet<GAMECHANGE> GAMECHANGE { get; set; }
        public virtual DbSet<GAMEIMPORTERSOURCES> GAMEIMPORTERSOURCES { get; set; }
        public virtual DbSet<GAMESYNCGAMES> GAMESYNCGAMES { get; set; }
        public virtual DbSet<GRADEDGAMECHANGE> GRADEDGAMECHANGE { get; set; }
        public virtual DbSet<LINESUBSCRIBERDGSINFO> LINESUBSCRIBERDGSINFO { get; set; }
        public virtual DbSet<LINETYPELINKSLOG> LINETYPELINKSLOG { get; set; }
        public virtual DbSet<LINETYPELOG> LINETYPELOG { get; set; }
        public virtual DbSet<Migration_Agents_Balances> Migration_Agents_Balances { get; set; }
        public virtual DbSet<Migration_Balances> Migration_Balances { get; set; }
        public virtual DbSet<Migration_CreditLimit> Migration_CreditLimit { get; set; }
        public virtual DbSet<Migration_Players> Migration_Players { get; set; }
        public virtual DbSet<Migration_Settle> Migration_Settle { get; set; }
        public virtual DbSet<oldamount> oldamount { get; set; }
        public virtual DbSet<OperationDate> OperationDate { get; set; }
        public virtual DbSet<PLAYERCALLSLOG> PLAYERCALLSLOG { get; set; }
        public virtual DbSet<PLAYERDELETED> PLAYERDELETED { get; set; }
        public virtual DbSet<PLAYERID> PLAYERID { get; set; }
        public virtual DbSet<PLAYERPROFILEGAMETYPELOG> PLAYERPROFILEGAMETYPELOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITLOG> PLAYERPROFILEPARLAYLIMITLOG { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<SYSTEMBANNEDIPS> SYSTEMBANNEDIPS { get; set; }
        public virtual DbSet<SYSTEMBETRADARCONFIG> SYSTEMBETRADARCONFIG { get; set; }
        public virtual DbSet<SYSTEMBONUSSETTING> SYSTEMBONUSSETTING { get; set; }
        public virtual DbSet<SYSTEMDBSLINES> SYSTEMDBSLINES { get; set; }
        public virtual DbSet<SYSTEMDISTRIBUTIONINFO> SYSTEMDISTRIBUTIONINFO { get; set; }
        public virtual DbSet<SYSTEMERRORLOG> SYSTEMERRORLOG { get; set; }
        public virtual DbSet<SYSTEMMOVERSETTINGS> SYSTEMMOVERSETTINGS { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESCLIENT> SYSTEMPREFERENCESCLIENT { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESMANAGER> SYSTEMPREFERENCESMANAGER { get; set; }
        public virtual DbSet<SYSTEMRECORDINGLOG> SYSTEMRECORDINGLOG { get; set; }
        public virtual DbSet<SYSTEMVERSIONINFO> SYSTEMVERSIONINFO { get; set; }
        public virtual DbSet<TaceoAgentCommInfo> TaceoAgentCommInfo { get; set; }
        public virtual DbSet<TaceoSignUpIpRestriction> TaceoSignUpIpRestriction { get; set; }
        public virtual DbSet<tempbackup> tempbackup { get; set; }
        public virtual DbSet<TIPEXCONFIG> TIPEXCONFIG { get; set; }
        public virtual DbSet<Tmp_USERS> Tmp_USERS { get; set; }
        public virtual DbSet<UNGRADEDWAGERDETAIL> UNGRADEDWAGERDETAIL { get; set; }
        public virtual DbSet<UNGRADEDWAGERHEADER> UNGRADEDWAGERHEADER { get; set; }
        public virtual DbSet<USERLOGONSLOG> USERLOGONSLOG { get; set; }
        public virtual DbSet<USERSDELETED> USERSDELETED { get; set; }
        public virtual DbSet<UToteTemp> UToteTemp { get; set; }
    
        public virtual int Agent_Delete(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Delete", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_FindList_Result> Agent_FindList(string prmAgent, string prmName, Nullable<short> prmIdUser)
        {
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_FindList_Result>("Agent_FindList", prmAgentParameter, prmNameParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetAgentsList_Result> Agent_GetAgentsList(Nullable<int> prmIdAgent, Nullable<byte> prmDecimals, Nullable<byte> prmTrunc)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmDecimalsParameter = prmDecimals.HasValue ?
                new ObjectParameter("prmDecimals", prmDecimals) :
                new ObjectParameter("prmDecimals", typeof(byte));
    
            var prmTruncParameter = prmTrunc.HasValue ?
                new ObjectParameter("prmTrunc", prmTrunc) :
                new ObjectParameter("prmTrunc", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetAgentsList_Result>("Agent_GetAgentsList", prmIdAgentParameter, prmDecimalsParameter, prmTruncParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Agent_GetChildren(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Agent_GetChildren", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetDistributor_Result> Agent_GetDistributor(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetDistributor_Result>("Agent_GetDistributor", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetInfo_Result> Agent_GetInfo(string prmAgent, Nullable<short> prmIdUser)
        {
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetInfo_Result>("Agent_GetInfo", prmAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetInfoDistributor_Result> Agent_GetInfoDistributor(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetInfoDistributor_Result>("Agent_GetInfoDistributor", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetList_Result> Agent_GetList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetList_Result>("Agent_GetList", prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetListByBook_Result> Agent_GetListByBook(Nullable<short> prmIdBook)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetListByBook_Result>("Agent_GetListByBook", prmIdBookParameter);
        }
    
        public virtual ObjectResult<Agent_GetNotes_Result> Agent_GetNotes(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetNotes_Result>("Agent_GetNotes", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetPlayers_Result> Agent_GetPlayers(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetPlayers_Result>("Agent_GetPlayers", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Agent_GetPlayersID(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Agent_GetPlayersID", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetPlayersList_Result> Agent_GetPlayersList(Nullable<int> prmIdAgent, Nullable<byte> prmDecimals, Nullable<byte> prmTrunc, Nullable<short> prmIdCurrency)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmDecimalsParameter = prmDecimals.HasValue ?
                new ObjectParameter("prmDecimals", prmDecimals) :
                new ObjectParameter("prmDecimals", typeof(byte));
    
            var prmTruncParameter = prmTrunc.HasValue ?
                new ObjectParameter("prmTrunc", prmTrunc) :
                new ObjectParameter("prmTrunc", typeof(byte));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetPlayersList_Result>("Agent_GetPlayersList", prmIdAgentParameter, prmDecimalsParameter, prmTruncParameter, prmIdCurrencyParameter);
        }
    
        public virtual ObjectResult<Agent_GetStatistics_Result> Agent_GetStatistics(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetStatistics_Result>("Agent_GetStatistics", prmIdAgentParameter);
        }
    
        public virtual int Agent_Insert(Nullable<bool> prmEnable, Nullable<bool> prmDontXfer, Nullable<bool> prmIsDistributor, Nullable<int> prmIdUser, Nullable<int> prmDistributor, Nullable<decimal> prmMakeup, Nullable<byte> prmCommSports, Nullable<byte> prmCommCasino, Nullable<byte> prmCommHorses, Nullable<decimal> prmPerHeadSports, Nullable<decimal> prmPerHeadCasino, Nullable<decimal> prmPerHeadHorses, Nullable<short> prmIdAgentType, Nullable<short> prmIdCurrency, Nullable<short> prmIdBook, Nullable<short> prmIdGrouping, string prmAgent, string prmName, string prmPassword, string prmCity, string prmState, string prmCountry, string prmAddress1, string prmAddress2, string prmEmail, string prmPhone, string prmFax, string prmZip, Nullable<bool> prmOnlineAccess, string prmOnlineMessage, Nullable<short> prmIdLineType, ObjectParameter prmOutIdAgent, ObjectParameter prmOutResult)
        {
            var prmEnableParameter = prmEnable.HasValue ?
                new ObjectParameter("prmEnable", prmEnable) :
                new ObjectParameter("prmEnable", typeof(bool));
    
            var prmDontXferParameter = prmDontXfer.HasValue ?
                new ObjectParameter("prmDontXfer", prmDontXfer) :
                new ObjectParameter("prmDontXfer", typeof(bool));
    
            var prmIsDistributorParameter = prmIsDistributor.HasValue ?
                new ObjectParameter("prmIsDistributor", prmIsDistributor) :
                new ObjectParameter("prmIsDistributor", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(int));
    
            var prmDistributorParameter = prmDistributor.HasValue ?
                new ObjectParameter("prmDistributor", prmDistributor) :
                new ObjectParameter("prmDistributor", typeof(int));
    
            var prmMakeupParameter = prmMakeup.HasValue ?
                new ObjectParameter("prmMakeup", prmMakeup) :
                new ObjectParameter("prmMakeup", typeof(decimal));
    
            var prmCommSportsParameter = prmCommSports.HasValue ?
                new ObjectParameter("prmCommSports", prmCommSports) :
                new ObjectParameter("prmCommSports", typeof(byte));
    
            var prmCommCasinoParameter = prmCommCasino.HasValue ?
                new ObjectParameter("prmCommCasino", prmCommCasino) :
                new ObjectParameter("prmCommCasino", typeof(byte));
    
            var prmCommHorsesParameter = prmCommHorses.HasValue ?
                new ObjectParameter("prmCommHorses", prmCommHorses) :
                new ObjectParameter("prmCommHorses", typeof(byte));
    
            var prmPerHeadSportsParameter = prmPerHeadSports.HasValue ?
                new ObjectParameter("prmPerHeadSports", prmPerHeadSports) :
                new ObjectParameter("prmPerHeadSports", typeof(decimal));
    
            var prmPerHeadCasinoParameter = prmPerHeadCasino.HasValue ?
                new ObjectParameter("prmPerHeadCasino", prmPerHeadCasino) :
                new ObjectParameter("prmPerHeadCasino", typeof(decimal));
    
            var prmPerHeadHorsesParameter = prmPerHeadHorses.HasValue ?
                new ObjectParameter("prmPerHeadHorses", prmPerHeadHorses) :
                new ObjectParameter("prmPerHeadHorses", typeof(decimal));
    
            var prmIdAgentTypeParameter = prmIdAgentType.HasValue ?
                new ObjectParameter("prmIdAgentType", prmIdAgentType) :
                new ObjectParameter("prmIdAgentType", typeof(short));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Insert", prmEnableParameter, prmDontXferParameter, prmIsDistributorParameter, prmIdUserParameter, prmDistributorParameter, prmMakeupParameter, prmCommSportsParameter, prmCommCasinoParameter, prmCommHorsesParameter, prmPerHeadSportsParameter, prmPerHeadCasinoParameter, prmPerHeadHorsesParameter, prmIdAgentTypeParameter, prmIdCurrencyParameter, prmIdBookParameter, prmIdGroupingParameter, prmAgentParameter, prmNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmAddress1Parameter, prmAddress2Parameter, prmEmailParameter, prmPhoneParameter, prmFaxParameter, prmZipParameter, prmOnlineAccessParameter, prmOnlineMessageParameter, prmIdLineTypeParameter, prmOutIdAgent, prmOutResult);
        }
    
        public virtual int Agent_Update(Nullable<int> prmIdAgent, Nullable<bool> prmEnable, Nullable<bool> prmDontXfer, Nullable<bool> prmIsDistributor, Nullable<int> prmIdUser, Nullable<int> prmDistributor, Nullable<decimal> prmMakeup, Nullable<byte> prmCommSports, Nullable<byte> prmCommCasino, Nullable<byte> prmCommHorses, Nullable<decimal> prmPerHeadSports, Nullable<decimal> prmPerHeadCasino, Nullable<decimal> prmPerHeadHorses, Nullable<short> prmIdAgentType, Nullable<short> prmIdCurrency, Nullable<short> prmIdBook, Nullable<short> prmIdGrouping, string prmAgent, string prmName, string prmPassword, string prmCity, string prmState, string prmCountry, string prmAddress1, string prmAddress2, string prmEmail, string prmPhone, string prmFax, string prmZip, Nullable<bool> prmOnlineAccess, string prmOnlineMessage, Nullable<short> prmIdLineType)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmEnableParameter = prmEnable.HasValue ?
                new ObjectParameter("prmEnable", prmEnable) :
                new ObjectParameter("prmEnable", typeof(bool));
    
            var prmDontXferParameter = prmDontXfer.HasValue ?
                new ObjectParameter("prmDontXfer", prmDontXfer) :
                new ObjectParameter("prmDontXfer", typeof(bool));
    
            var prmIsDistributorParameter = prmIsDistributor.HasValue ?
                new ObjectParameter("prmIsDistributor", prmIsDistributor) :
                new ObjectParameter("prmIsDistributor", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(int));
    
            var prmDistributorParameter = prmDistributor.HasValue ?
                new ObjectParameter("prmDistributor", prmDistributor) :
                new ObjectParameter("prmDistributor", typeof(int));
    
            var prmMakeupParameter = prmMakeup.HasValue ?
                new ObjectParameter("prmMakeup", prmMakeup) :
                new ObjectParameter("prmMakeup", typeof(decimal));
    
            var prmCommSportsParameter = prmCommSports.HasValue ?
                new ObjectParameter("prmCommSports", prmCommSports) :
                new ObjectParameter("prmCommSports", typeof(byte));
    
            var prmCommCasinoParameter = prmCommCasino.HasValue ?
                new ObjectParameter("prmCommCasino", prmCommCasino) :
                new ObjectParameter("prmCommCasino", typeof(byte));
    
            var prmCommHorsesParameter = prmCommHorses.HasValue ?
                new ObjectParameter("prmCommHorses", prmCommHorses) :
                new ObjectParameter("prmCommHorses", typeof(byte));
    
            var prmPerHeadSportsParameter = prmPerHeadSports.HasValue ?
                new ObjectParameter("prmPerHeadSports", prmPerHeadSports) :
                new ObjectParameter("prmPerHeadSports", typeof(decimal));
    
            var prmPerHeadCasinoParameter = prmPerHeadCasino.HasValue ?
                new ObjectParameter("prmPerHeadCasino", prmPerHeadCasino) :
                new ObjectParameter("prmPerHeadCasino", typeof(decimal));
    
            var prmPerHeadHorsesParameter = prmPerHeadHorses.HasValue ?
                new ObjectParameter("prmPerHeadHorses", prmPerHeadHorses) :
                new ObjectParameter("prmPerHeadHorses", typeof(decimal));
    
            var prmIdAgentTypeParameter = prmIdAgentType.HasValue ?
                new ObjectParameter("prmIdAgentType", prmIdAgentType) :
                new ObjectParameter("prmIdAgentType", typeof(short));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Update", prmIdAgentParameter, prmEnableParameter, prmDontXferParameter, prmIsDistributorParameter, prmIdUserParameter, prmDistributorParameter, prmMakeupParameter, prmCommSportsParameter, prmCommCasinoParameter, prmCommHorsesParameter, prmPerHeadSportsParameter, prmPerHeadCasinoParameter, prmPerHeadHorsesParameter, prmIdAgentTypeParameter, prmIdCurrencyParameter, prmIdBookParameter, prmIdGroupingParameter, prmAgentParameter, prmNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmAddress1Parameter, prmAddress2Parameter, prmEmailParameter, prmPhoneParameter, prmFaxParameter, prmZipParameter, prmOnlineAccessParameter, prmOnlineMessageParameter, prmIdLineTypeParameter);
        }
    
        public virtual int AgentLineTypes_Add(Nullable<int> prmIdAgent, Nullable<short> prmIdLineType, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_Add", prmIdAgentParameter, prmIdLineTypeParameter, prmIdUserParameter);
        }
    
        public virtual int AgentLineTypes_AddAll(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_AddAll", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<AgentLineTypes_GetList_Result> AgentLineTypes_GetList(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentLineTypes_GetList_Result>("AgentLineTypes_GetList", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<AgentLineTypes_GetListAdded_Result> AgentLineTypes_GetListAdded(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentLineTypes_GetListAdded_Result>("AgentLineTypes_GetListAdded", prmIdAgentParameter);
        }
    
        public virtual int AgentLineTypes_Remove(Nullable<int> prmIdAgent, Nullable<short> prmIdLineType, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_Remove", prmIdAgentParameter, prmIdLineTypeParameter, prmIdUserParameter);
        }
    
        public virtual int AgentLineTypes_RemoveAll(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_RemoveAll", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual int AgentRights_AddRight(Nullable<int> prmIdAgent, Nullable<short> prmIdForm, Nullable<short> prmIdRight, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdFormParameter = prmIdForm.HasValue ?
                new ObjectParameter("prmIdForm", prmIdForm) :
                new ObjectParameter("prmIdForm", typeof(short));
    
            var prmIdRightParameter = prmIdRight.HasValue ?
                new ObjectParameter("prmIdRight", prmIdRight) :
                new ObjectParameter("prmIdRight", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentRights_AddRight", prmIdAgentParameter, prmIdFormParameter, prmIdRightParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<AgentRights_GetList_Result> AgentRights_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentRights_GetList_Result>("AgentRights_GetList");
        }
    
        public virtual ObjectResult<Nullable<short>> AgentRights_GetRights(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("AgentRights_GetRights", prmIdAgentParameter);
        }
    
        public virtual int AgentRights_RemoveRight(Nullable<int> prmIdAgent, Nullable<short> prmIdForm, Nullable<short> prmIdRight, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdFormParameter = prmIdForm.HasValue ?
                new ObjectParameter("prmIdForm", prmIdForm) :
                new ObjectParameter("prmIdForm", typeof(short));
    
            var prmIdRightParameter = prmIdRight.HasValue ?
                new ObjectParameter("prmIdRight", prmIdRight) :
                new ObjectParameter("prmIdRight", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentRights_RemoveRight", prmIdAgentParameter, prmIdFormParameter, prmIdRightParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfileBook_Insert(Nullable<short> prmIdProfile, Nullable<short> prmIdBook)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfileBook_Insert", prmIdProfileParameter, prmIdBookParameter);
        }
    }
}
