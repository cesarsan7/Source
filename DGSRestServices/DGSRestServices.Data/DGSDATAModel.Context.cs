//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DGSRestServices.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DGSDATAEntities : DbContext
    {
        public DGSDATAEntities()
            : base("name=DGSDATAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<ActiveTill> ActiveTill { get; set; }
        public virtual DbSet<ActiveTillCurrency> ActiveTillCurrency { get; set; }
        public virtual DbSet<ActivityLock> ActivityLock { get; set; }
        public virtual DbSet<ADJUSTMENTTYPE> ADJUSTMENTTYPE { get; set; }
        public virtual DbSet<AFFILIATE> AFFILIATE { get; set; }
        public virtual DbSet<AGENT> AGENT { get; set; }
        public virtual DbSet<AGENTACCOUNTING> AGENTACCOUNTING { get; set; }
        public virtual DbSet<AGENTCOMMISSION> AGENTCOMMISSION { get; set; }
        public virtual DbSet<AGENTLINETYPE> AGENTLINETYPE { get; set; }
        public virtual DbSet<AGENTLINETYPELOG> AGENTLINETYPELOG { get; set; }
        public virtual DbSet<AGENTLOG> AGENTLOG { get; set; }
        public virtual DbSet<AGENTLOGONS> AGENTLOGONS { get; set; }
        public virtual DbSet<AGENTLOGONSLOG> AGENTLOGONSLOG { get; set; }
        public virtual DbSet<AGENTNOTES> AGENTNOTES { get; set; }
        public virtual DbSet<AGENTRIGHTS> AGENTRIGHTS { get; set; }
        public virtual DbSet<AGENTRIGHTSLOG> AGENTRIGHTSLOG { get; set; }
        public virtual DbSet<AGENTSTATISTIC> AGENTSTATISTIC { get; set; }
        public virtual DbSet<AGENTTRANSACTION> AGENTTRANSACTION { get; set; }
        public virtual DbSet<AGENTTYPE> AGENTTYPE { get; set; }
        public virtual DbSet<AGENTWEEKLYBALANCE> AGENTWEEKLYBALANCE { get; set; }
        public virtual DbSet<AggLimitWork> AggLimitWork { get; set; }
        public virtual DbSet<ASICustomer> ASICustomer { get; set; }
        public virtual DbSet<ASIProfile> ASIProfile { get; set; }
        public virtual DbSet<ASIUser> ASIUser { get; set; }
        public virtual DbSet<BANNERTYPE> BANNERTYPE { get; set; }
        public virtual DbSet<BANNERTYPELANG> BANNERTYPELANG { get; set; }
        public virtual DbSet<BetTickerRacingQueue> BetTickerRacingQueue { get; set; }
        public virtual DbSet<BOOK> BOOK { get; set; }
        public virtual DbSet<BOOKCLIENTPREFERENCES> BOOKCLIENTPREFERENCES { get; set; }
        public virtual DbSet<BOOKCLIENTPREFERENCESLOG> BOOKCLIENTPREFERENCESLOG { get; set; }
        public virtual DbSet<BOOKPREFIX> BOOKPREFIX { get; set; }
        public virtual DbSet<BOOKTAX> BOOKTAX { get; set; }
        public virtual DbSet<CARDDEF> CARDDEF { get; set; }
        public virtual DbSet<CARDDEFODDS> CARDDEFODDS { get; set; }
        public virtual DbSet<CARDDEFSPORTS> CARDDEFSPORTS { get; set; }
        public virtual DbSet<CARDDETAIL> CARDDETAIL { get; set; }
        public virtual DbSet<CARDHEADER> CARDHEADER { get; set; }
        public virtual DbSet<CARDLINES> CARDLINES { get; set; }
        public virtual DbSet<CashedTicketTemplate> CashedTicketTemplate { get; set; }
        public virtual DbSet<CHANGEDWAGERHEADER> CHANGEDWAGERHEADER { get; set; }
        public virtual DbSet<CHARTLOG> CHARTLOG { get; set; }
        public virtual DbSet<CLIENTCHANGEDLINES> CLIENTCHANGEDLINES { get; set; }
        public virtual DbSet<CURRENCY> CURRENCY { get; set; }
        public virtual DbSet<CW_AGENT> CW_AGENT { get; set; }
        public virtual DbSet<CW_PLAYER> CW_PLAYER { get; set; }
        public virtual DbSet<DEPARTMENT> DEPARTMENT { get; set; }
        public virtual DbSet<DgsToteConfig> DgsToteConfig { get; set; }
        public virtual DbSet<Entry> Entry { get; set; }
        public virtual DbSet<EntryOdds> EntryOdds { get; set; }
        public virtual DbSet<EntryOddsHist> EntryOddsHist { get; set; }
        public virtual DbSet<EntryPastPerf> EntryPastPerf { get; set; }
        public virtual DbSet<EposCurrency> EposCurrency { get; set; }
        public virtual DbSet<EposPlayer> EposPlayer { get; set; }
        public virtual DbSet<EposPlayerCardQ> EposPlayerCardQ { get; set; }
        public virtual DbSet<EposPlayerChangeLog> EposPlayerChangeLog { get; set; }
        public virtual DbSet<EposPlayerPhoto> EposPlayerPhoto { get; set; }
        public virtual DbSet<EposSportsbookTransfer> EposSportsbookTransfer { get; set; }
        public virtual DbSet<EposVoid> EposVoid { get; set; }
        public virtual DbSet<ETSRequestLog> ETSRequestLog { get; set; }
        public virtual DbSet<EVENT> EVENT { get; set; }
        public virtual DbSet<EVENTLANG> EVENTLANG { get; set; }
        public virtual DbSet<ExpiredTicketTransact> ExpiredTicketTransact { get; set; }
        public virtual DbSet<FLAGMESSAGETYPE> FLAGMESSAGETYPE { get; set; }
        public virtual DbSet<FORM> FORM { get; set; }
        public virtual DbSet<FREEPLAYOFFICEOPTIONS> FREEPLAYOFFICEOPTIONS { get; set; }
        public virtual DbSet<GAME> GAME { get; set; }
        public virtual DbSet<GAMEACTION> GAMEACTION { get; set; }
        public virtual DbSet<GAMEACTIONBYAGENT> GAMEACTIONBYAGENT { get; set; }
        public virtual DbSet<GAMEAUTOEVENT> GAMEAUTOEVENT { get; set; }
        public virtual DbSet<GAMEDELETED> GAMEDELETED { get; set; }
        public virtual DbSet<GAMEIMPORTEROPTIONS> GAMEIMPORTEROPTIONS { get; set; }
        public virtual DbSet<GameLang> GameLang { get; set; }
        public virtual DbSet<GamePidScore> GamePidScore { get; set; }
        public virtual DbSet<GAMERELATEDOPTIONS> GAMERELATEDOPTIONS { get; set; }
        public virtual DbSet<GAMERELATEDOPTIONSLOG> GAMERELATEDOPTIONSLOG { get; set; }
        public virtual DbSet<GAMESCORES> GAMESCORES { get; set; }
        public virtual DbSet<GAMESTATPUBQUEUE> GAMESTATPUBQUEUE { get; set; }
        public virtual DbSet<GAMETNT> GAMETNT { get; set; }
        public virtual DbSet<GameTNTLang> GameTNTLang { get; set; }
        public virtual DbSet<GAMETNTPROPACTION> GAMETNTPROPACTION { get; set; }
        public virtual DbSet<GAMETNTPROPBYAGENT> GAMETNTPROPBYAGENT { get; set; }
        public virtual DbSet<GAMETNTPROPBYAGENTLOG> GAMETNTPROPBYAGENTLOG { get; set; }
        public virtual DbSet<GAMETYPE> GAMETYPE { get; set; }
        public virtual DbSet<GAMEVALUES> GAMEVALUES { get; set; }
        public virtual DbSet<GAMEVALUESBYAGENT> GAMEVALUESBYAGENT { get; set; }
        public virtual DbSet<GAMEVALUESBYAGENTLOG> GAMEVALUESBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDGAME> GRADEDGAME { get; set; }
        public virtual DbSet<GRADEDGAMEACTION> GRADEDGAMEACTION { get; set; }
        public virtual DbSet<GRADEDGAMEACTIONBYAGENT> GRADEDGAMEACTIONBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMEDELETED> GRADEDGAMEDELETED { get; set; }
        public virtual DbSet<GRADEDGAMETNT> GRADEDGAMETNT { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPACTION> GRADEDGAMETNTPROPACTION { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPBYAGENT> GRADEDGAMETNTPROPBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMETNTPROPBYAGENTLOG> GRADEDGAMETNTPROPBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDGAMEVALUES> GRADEDGAMEVALUES { get; set; }
        public virtual DbSet<GRADEDGAMEVALUESBYAGENT> GRADEDGAMEVALUESBYAGENT { get; set; }
        public virtual DbSet<GRADEDGAMEVALUESBYAGENTLOG> GRADEDGAMEVALUESBYAGENTLOG { get; set; }
        public virtual DbSet<GRADEDPITCHERCHANGELOG> GRADEDPITCHERCHANGELOG { get; set; }
        public virtual DbSet<GRADEDWAGERDETAIL> GRADEDWAGERDETAIL { get; set; }
        public virtual DbSet<GRADEDWAGERHEADER> GRADEDWAGERHEADER { get; set; }
        public virtual DbSet<GROUPING> GROUPING { get; set; }
        public virtual DbSet<HOLDWAGERDETAIL> HOLDWAGERDETAIL { get; set; }
        public virtual DbSet<HOLDWAGERHEADER> HOLDWAGERHEADER { get; set; }
        public virtual DbSet<InactiveTill> InactiveTill { get; set; }
        public virtual DbSet<ITEvent> ITEvent { get; set; }
        public virtual DbSet<ITFeedState> ITFeedState { get; set; }
        public virtual DbSet<ITMeet> ITMeet { get; set; }
        public virtual DbSet<JUICEREBATE> JUICEREBATE { get; set; }
        public virtual DbSet<Language> Language { get; set; }
        public virtual DbSet<LEAGUE> LEAGUE { get; set; }
        public virtual DbSet<LEAGUELANG> LEAGUELANG { get; set; }
        public virtual DbSet<LEAGUEREGION> LEAGUEREGION { get; set; }
        public virtual DbSet<LEAGUEREGIONLANG> LEAGUEREGIONLANG { get; set; }
        public virtual DbSet<LimitSet> LimitSet { get; set; }
        public virtual DbSet<LimitSetBetType> LimitSetBetType { get; set; }
        public virtual DbSet<LimitSetTrack> LimitSetTrack { get; set; }
        public virtual DbSet<LinePubQueue> LinePubQueue { get; set; }
        public virtual DbSet<LineSubscriber> LineSubscriber { get; set; }
        public virtual DbSet<LineSubscriberType> LineSubscriberType { get; set; }
        public virtual DbSet<LINETYPE> LINETYPE { get; set; }
        public virtual DbSet<LINETYPEFLAG> LINETYPEFLAG { get; set; }
        public virtual DbSet<LINETYPELINKS> LINETYPELINKS { get; set; }
        public virtual DbSet<LIVEBET> LIVEBET { get; set; }
        public virtual DbSet<LiveDealer> LiveDealer { get; set; }
        public virtual DbSet<Location> Location { get; set; }
        public virtual DbSet<LocationCurrency> LocationCurrency { get; set; }
        public virtual DbSet<LOCATIONTAX> LOCATIONTAX { get; set; }
        public virtual DbSet<LOCK> LOCK { get; set; }
        public virtual DbSet<LSCONFIG> LSCONFIG { get; set; }
        public virtual DbSet<LSINFO> LSINFO { get; set; }
        public virtual DbSet<ManagerLocation> ManagerLocation { get; set; }
        public virtual DbSet<ManagerRights> ManagerRights { get; set; }
        public virtual DbSet<ManualScoreQ> ManualScoreQ { get; set; }
        public virtual DbSet<MaxPayoutWork> MaxPayoutWork { get; set; }
        public virtual DbSet<MENUREPORTFILES> MENUREPORTFILES { get; set; }
        public virtual DbSet<MENUREPORTITEMS> MENUREPORTITEMS { get; set; }
        public virtual DbSet<MENUREPORTLOG> MENUREPORTLOG { get; set; }
        public virtual DbSet<MENUREPORTMENU> MENUREPORTMENU { get; set; }
        public virtual DbSet<MENUREPORTPARAMS> MENUREPORTPARAMS { get; set; }
        public virtual DbSet<MLBEASTERNLINE> MLBEASTERNLINE { get; set; }
        public virtual DbSet<MLBWIDELINE> MLBWIDELINE { get; set; }
        public virtual DbSet<MONEYCHANGE> MONEYCHANGE { get; set; }
        public virtual DbSet<ODDSBYSPORT> ODDSBYSPORT { get; set; }
        public virtual DbSet<ODDSDEFAULT> ODDSDEFAULT { get; set; }
        public virtual DbSet<OFFICE> OFFICE { get; set; }
        public virtual DbSet<ONLINEWAGERTRACKER> ONLINEWAGERTRACKER { get; set; }
        public virtual DbSet<PAYMENTMETHOD> PAYMENTMETHOD { get; set; }
        public virtual DbSet<PAYMENTS> PAYMENTS { get; set; }
        public virtual DbSet<PAYMENTSCREDITCARD> PAYMENTSCREDITCARD { get; set; }
        public virtual DbSet<PERIOD> PERIOD { get; set; }
        public virtual DbSet<PERL_DBD_TEST> PERL_DBD_TEST { get; set; }
        public virtual DbSet<PITCHER> PITCHER { get; set; }
        public virtual DbSet<PITCHERCHANGELOG> PITCHERCHANGELOG { get; set; }
        public virtual DbSet<PITCHERLANG> PITCHERLANG { get; set; }
        public virtual DbSet<PLAYER> PLAYER { get; set; }
        public virtual DbSet<PLAYERACCOUNTING> PLAYERACCOUNTING { get; set; }
        public virtual DbSet<PLAYERAGENTLOG> PLAYERAGENTLOG { get; set; }
        public virtual DbSet<PLAYERBLACKBOOK> PLAYERBLACKBOOK { get; set; }
        public virtual DbSet<PLAYERBONUSTRANSACTIONS> PLAYERBONUSTRANSACTIONS { get; set; }
        public virtual DbSet<PlayerClaims> PlayerClaims { get; set; }
        public virtual DbSet<PLAYERCREDITCARD> PLAYERCREDITCARD { get; set; }
        public virtual DbSet<PLAYERHOLDSETTINGS> PLAYERHOLDSETTINGS { get; set; }
        public virtual DbSet<PLAYERLOG> PLAYERLOG { get; set; }
        public virtual DbSet<PLAYERLOGONS> PLAYERLOGONS { get; set; }
        public virtual DbSet<PLAYERMESSAGES> PLAYERMESSAGES { get; set; }
        public virtual DbSet<PLAYERNOTES> PLAYERNOTES { get; set; }
        public virtual DbSet<PLAYERPROFILE> PLAYERPROFILE { get; set; }
        public virtual DbSet<PLAYERPROFILEBOOK> PLAYERPROFILEBOOK { get; set; }
        public virtual DbSet<PLAYERPROFILECUSTOMTEASER> PLAYERPROFILECUSTOMTEASER { get; set; }
        public virtual DbSet<PLAYERPROFILECUSTOMTEASERLOG> PLAYERPROFILECUSTOMTEASERLOG { get; set; }
        public virtual DbSet<PLAYERPROFILEGAMETYPE> PLAYERPROFILEGAMETYPE { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITS> PLAYERPROFILELIMITS { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSBOOK> PLAYERPROFILELIMITSBOOK { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSDETAILS> PLAYERPROFILELIMITSDETAILS { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSDETAILSLOG> PLAYERPROFILELIMITSDETAILSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILELIMITSLOG> PLAYERPROFILELIMITSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILELOG> PLAYERPROFILELOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYBASICSPORTS> PLAYERPROFILEPARLAYBASICSPORTS { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYBASICSPORTSLOG> PLAYERPROFILEPARLAYBASICSPORTSLOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMIT> PLAYERPROFILEPARLAYLIMIT { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITDETAIL> PLAYERPROFILEPARLAYLIMITDETAIL { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITDETAILLOG> PLAYERPROFILEPARLAYLIMITDETAILLOG { get; set; }
        public virtual DbSet<PLAYERPROFILESTRAIGHTLIMIT> PLAYERPROFILESTRAIGHTLIMIT { get; set; }
        public virtual DbSet<PLAYERPROFILESTRAIGHTLIMITLOG> PLAYERPROFILESTRAIGHTLIMITLOG { get; set; }
        public virtual DbSet<PLAYERRATE> PLAYERRATE { get; set; }
        public virtual DbSet<PLAYERSTATISTIC> PLAYERSTATISTIC { get; set; }
        public virtual DbSet<PLAYERTRANSACTION> PLAYERTRANSACTION { get; set; }
        public virtual DbSet<PLAYERWEEKLYBALANCE> PLAYERWEEKLYBALANCE { get; set; }
        public virtual DbSet<PoolPayout> PoolPayout { get; set; }
        public virtual DbSet<ProfileTrack> ProfileTrack { get; set; }
        public virtual DbSet<ProfileTrackEnable> ProfileTrackEnable { get; set; }
        public virtual DbSet<Race> Race { get; set; }
        public virtual DbSet<RaceChart> RaceChart { get; set; }
        public virtual DbSet<RaceChartQueue> RaceChartQueue { get; set; }
        public virtual DbSet<RaceControl> RaceControl { get; set; }
        public virtual DbSet<RaceTicketBatchDetail> RaceTicketBatchDetail { get; set; }
        public virtual DbSet<RaceTicketBatchHeader> RaceTicketBatchHeader { get; set; }
        public virtual DbSet<RaceTicketDetail> RaceTicketDetail { get; set; }
        public virtual DbSet<RaceTicketMain> RaceTicketMain { get; set; }
        public virtual DbSet<RaceTicketType> RaceTicketType { get; set; }
        public virtual DbSet<RebateDetail> RebateDetail { get; set; }
        public virtual DbSet<RebateHeader> RebateHeader { get; set; }
        public virtual DbSet<RefillTill> RefillTill { get; set; }
        public virtual DbSet<RIGHTS> RIGHTS { get; set; }
        public virtual DbSet<SOCONFIG> SOCONFIG { get; set; }
        public virtual DbSet<SOINFO> SOINFO { get; set; }
        public virtual DbSet<SOURCE> SOURCE { get; set; }
        public virtual DbSet<SOURCEBYBOOK> SOURCEBYBOOK { get; set; }
        public virtual DbSet<SPORT> SPORT { get; set; }
        public virtual DbSet<SportsOptionsGroup> SportsOptionsGroup { get; set; }
        public virtual DbSet<SportsOptionsLeague> SportsOptionsLeague { get; set; }
        public virtual DbSet<SportsOptionsSchedule> SportsOptionsSchedule { get; set; }
        public virtual DbSet<SportsOptionsSport> SportsOptionsSport { get; set; }
        public virtual DbSet<SWFeedState> SWFeedState { get; set; }
        public virtual DbSet<SYSTEMBETRADAR> SYSTEMBETRADAR { get; set; }
        public virtual DbSet<SYSTEMBETRADARSPORT> SYSTEMBETRADARSPORT { get; set; }
        public virtual DbSet<SYSTEMBETRADARTNT> SYSTEMBETRADARTNT { get; set; }
        public virtual DbSet<SYSTEMBONUSOPTIONS> SYSTEMBONUSOPTIONS { get; set; }
        public virtual DbSet<SYSTEMBONUSSETTINGDETAIL> SYSTEMBONUSSETTINGDETAIL { get; set; }
        public virtual DbSet<SYSTEMCALLS> SYSTEMCALLS { get; set; }
        public virtual DbSet<SYSTEMCHANGEDLINES> SYSTEMCHANGEDLINES { get; set; }
        public virtual DbSet<SYSTEMCHANGEDLINESLOG> SYSTEMCHANGEDLINESLOG { get; set; }
        public virtual DbSet<SYSTEMCOLORS> SYSTEMCOLORS { get; set; }
        public virtual DbSet<SYSTEMDBSINFO> SYSTEMDBSINFO { get; set; }
        public virtual DbSet<SYSTEMDICTIONARY> SYSTEMDICTIONARY { get; set; }
        public virtual DbSet<SYSTEMDISTRIBUTIONLOG> SYSTEMDISTRIBUTIONLOG { get; set; }
        public virtual DbSet<SYSTEMLANGUAGE> SYSTEMLANGUAGE { get; set; }
        public virtual DbSet<SYSTEMMONITORSETTINGS> SYSTEMMONITORSETTINGS { get; set; }
        public virtual DbSet<SYSTEMMOVERRANGE> SYSTEMMOVERRANGE { get; set; }
        public virtual DbSet<SYSTEMODDSCONVERSION> SYSTEMODDSCONVERSION { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESCLIENTLOG> SYSTEMPREFERENCESCLIENTLOG { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESDEFAULT> SYSTEMPREFERENCESDEFAULT { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESDEFAULTLOG> SYSTEMPREFERENCESDEFAULTLOG { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESMANAGERLOG> SYSTEMPREFERENCESMANAGERLOG { get; set; }
        public virtual DbSet<SYSTEMPROCESSFLAG> SYSTEMPROCESSFLAG { get; set; }
        public virtual DbSet<SYSTEMPROCESSLOG> SYSTEMPROCESSLOG { get; set; }
        public virtual DbSet<SYSTEMPROCESSLOGDETAIL> SYSTEMPROCESSLOGDETAIL { get; set; }
        public virtual DbSet<TaceoAgentLineRule> TaceoAgentLineRule { get; set; }
        public virtual DbSet<TaceoAgentLineTypeRights> TaceoAgentLineTypeRights { get; set; }
        public virtual DbSet<TaceoAgentLogin> TaceoAgentLogin { get; set; }
        public virtual DbSet<TaceoAgentSportRights> TaceoAgentSportRights { get; set; }
        public virtual DbSet<TaceoAgentWebLog> TaceoAgentWebLog { get; set; }
        public virtual DbSet<TaceoAgentYubico> TaceoAgentYubico { get; set; }
        public virtual DbSet<TaceoApiGetCustomerInfoLog> TaceoApiGetCustomerInfoLog { get; set; }
        public virtual DbSet<TaceoApiPostTransActionLog> TaceoApiPostTransActionLog { get; set; }
        public virtual DbSet<TaceoASLGAME> TaceoASLGAME { get; set; }
        public virtual DbSet<TaceoASLLEAGUE> TaceoASLLEAGUE { get; set; }
        public virtual DbSet<TaceoASLSPORT> TaceoASLSPORT { get; set; }
        public virtual DbSet<TaceoASLUser> TaceoASLUser { get; set; }
        public virtual DbSet<TaceoBCGameInfo> TaceoBCGameInfo { get; set; }
        public virtual DbSet<TaceoBetTicker> TaceoBetTicker { get; set; }
        public virtual DbSet<TaceoBookMessage> TaceoBookMessage { get; set; }
        public virtual DbSet<TaceoCheckBetAlg> TaceoCheckBetAlg { get; set; }
        public virtual DbSet<TaceoCopyCat> TaceoCopyCat { get; set; }
        public virtual DbSet<TaceoCopyCatHist> TaceoCopyCatHist { get; set; }
        public virtual DbSet<TaceoDomainCustomUrls> TaceoDomainCustomUrls { get; set; }
        public virtual DbSet<TaceoDomainMessage> TaceoDomainMessage { get; set; }
        public virtual DbSet<TaceoDomainNames> TaceoDomainNames { get; set; }
        public virtual DbSet<TaceoEPOSEcsaLocations> TaceoEPOSEcsaLocations { get; set; }
        public virtual DbSet<TaceoEPOSECSALog> TaceoEPOSECSALog { get; set; }
        public virtual DbSet<TaceoEPOSIpAccess> TaceoEPOSIpAccess { get; set; }
        public virtual DbSet<TaceoEPOSReportLog> TaceoEPOSReportLog { get; set; }
        public virtual DbSet<TaceoEPOSUser> TaceoEPOSUser { get; set; }
        public virtual DbSet<TaceoEPOSUserLocations> TaceoEPOSUserLocations { get; set; }
        public virtual DbSet<TaceoErrorLog> TaceoErrorLog { get; set; }
        public virtual DbSet<TaceoGroupingMessage> TaceoGroupingMessage { get; set; }
        public virtual DbSet<TaceoHeartBeat> TaceoHeartBeat { get; set; }
        public virtual DbSet<TaceoHideGame> TaceoHideGame { get; set; }
        public virtual DbSet<TaceoImportedLeague> TaceoImportedLeague { get; set; }
        public virtual DbSet<TaceoImportedLine> TaceoImportedLine { get; set; }
        public virtual DbSet<TaceoImportedML> TaceoImportedML { get; set; }
        public virtual DbSet<TaceoImportedSpread> TaceoImportedSpread { get; set; }
        public virtual DbSet<TaceoImportedTeam> TaceoImportedTeam { get; set; }
        public virtual DbSet<TaceoImportedTotals> TaceoImportedTotals { get; set; }
        public virtual DbSet<TaceoInternalReportsLog> TaceoInternalReportsLog { get; set; }
        public virtual DbSet<TaceoIpAccess> TaceoIpAccess { get; set; }
        public virtual DbSet<TaceoLineboardNotification> TaceoLineboardNotification { get; set; }
        public virtual DbSet<TaceoLineConverterLog> TaceoLineConverterLog { get; set; }
        public virtual DbSet<TaceoLineConverterSportConfig> TaceoLineConverterSportConfig { get; set; }
        public virtual DbSet<TaceoLineNotification> TaceoLineNotification { get; set; }
        public virtual DbSet<TaceoMatchPinnGame> TaceoMatchPinnGame { get; set; }
        public virtual DbSet<TaceoMonitorSetting> TaceoMonitorSetting { get; set; }
        public virtual DbSet<TaceoNitroGameInfo> TaceoNitroGameInfo { get; set; }
        public virtual DbSet<TaceoNitroUser> TaceoNitroUser { get; set; }
        public virtual DbSet<TaceoPasswordRecovery> TaceoPasswordRecovery { get; set; }
        public virtual DbSet<TaceoPinnBalance> TaceoPinnBalance { get; set; }
        public virtual DbSet<TaceoPinnBet> TaceoPinnBet { get; set; }
        public virtual DbSet<TaceoPinnClientBalance> TaceoPinnClientBalance { get; set; }
        public virtual DbSet<TaceoPinnEvent> TaceoPinnEvent { get; set; }
        public virtual DbSet<TaceoPinnLast> TaceoPinnLast { get; set; }
        public virtual DbSet<TaceoPinnLeague> TaceoPinnLeague { get; set; }
        public virtual DbSet<TaceoPinnLine> TaceoPinnLine { get; set; }
        public virtual DbSet<TaceoPinnMatchLeague> TaceoPinnMatchLeague { get; set; }
        public virtual DbSet<TaceoPinnMatchLeagueASL> TaceoPinnMatchLeagueASL { get; set; }
        public virtual DbSet<TaceoPinnMatchSport> TaceoPinnMatchSport { get; set; }
        public virtual DbSet<TaceoPinnMatchSportASL> TaceoPinnMatchSportASL { get; set; }
        public virtual DbSet<TaceoPinnMatchTeams> TaceoPinnMatchTeams { get; set; }
        public virtual DbSet<TaceoPinnMoneyLine> TaceoPinnMoneyLine { get; set; }
        public virtual DbSet<TaceoPinnPeriod> TaceoPinnPeriod { get; set; }
        public virtual DbSet<TaceoPinnPlaceBetReply> TaceoPinnPlaceBetReply { get; set; }
        public virtual DbSet<TaceoPinnPlaceBetRequest> TaceoPinnPlaceBetRequest { get; set; }
        public virtual DbSet<TaceoPinnSport> TaceoPinnSport { get; set; }
        public virtual DbSet<TaceoPinnSpread> TaceoPinnSpread { get; set; }
        public virtual DbSet<TaceoPinnTeamTotalPoints> TaceoPinnTeamTotalPoints { get; set; }
        public virtual DbSet<TaceoPinnTotalPoints> TaceoPinnTotalPoints { get; set; }
        public virtual DbSet<TaceoPinnXmlFeed> TaceoPinnXmlFeed { get; set; }
        public virtual DbSet<TaceoPlaceBetAlg> TaceoPlaceBetAlg { get; set; }
        public virtual DbSet<TaceoPlaceBetAlg2> TaceoPlaceBetAlg2 { get; set; }
        public virtual DbSet<TaceoPlayerInfo> TaceoPlayerInfo { get; set; }
        public virtual DbSet<TaceoPlayerLoginLog> TaceoPlayerLoginLog { get; set; }
        public virtual DbSet<TaceoPlayerRights> TaceoPlayerRights { get; set; }
        public virtual DbSet<TaceoRasPicks> TaceoRasPicks { get; set; }
        public virtual DbSet<TaceoRegionToAgent> TaceoRegionToAgent { get; set; }
        public virtual DbSet<TaceoRssfeed> TaceoRssfeed { get; set; }
        public virtual DbSet<TaceoSEEventsNew> TaceoSEEventsNew { get; set; }
        public virtual DbSet<TaceoSELeague> TaceoSELeague { get; set; }
        public virtual DbSet<TaceoSELeagueFK> TaceoSELeagueFK { get; set; }
        public virtual DbSet<TaceoSELeagueNew> TaceoSELeagueNew { get; set; }
        public virtual DbSet<TaceoSESport> TaceoSESport { get; set; }
        public virtual DbSet<TaceoSESportFK> TaceoSESportFK { get; set; }
        public virtual DbSet<TaceoSESportNew> TaceoSESportNew { get; set; }
        public virtual DbSet<TaceoSignUp> TaceoSignUp { get; set; }
        public virtual DbSet<TaceoSoccerTNTPROPMex> TaceoSoccerTNTPROPMex { get; set; }
        public virtual DbSet<TaceoSoEvent> TaceoSoEvent { get; set; }
        public virtual DbSet<TaceoSoEvent_Line> TaceoSoEvent_Line { get; set; }
        public virtual DbSet<TaceoSoEvent_Score> TaceoSoEvent_Score { get; set; }
        public virtual DbSet<TaceoSoEvent_Team_Line> TaceoSoEvent_Team_Line { get; set; }
        public virtual DbSet<TaceoSoEvent_Team_Score> TaceoSoEvent_Team_Score { get; set; }
        public virtual DbSet<TaceoSoGroup> TaceoSoGroup { get; set; }
        public virtual DbSet<TaceoSoGroup_Header> TaceoSoGroup_Header { get; set; }
        public virtual DbSet<TaceoSoLeague> TaceoSoLeague { get; set; }
        public virtual DbSet<TaceoSoProp_Item_Line> TaceoSoProp_Item_Line { get; set; }
        public virtual DbSet<TaceoSoSport> TaceoSoSport { get; set; }
        public virtual DbSet<TaceoSoTeam> TaceoSoTeam { get; set; }
        public virtual DbSet<TaceoSOXmlFeed> TaceoSOXmlFeed { get; set; }
        public virtual DbSet<TaceoSyncDGSdbTestingDB> TaceoSyncDGSdbTestingDB { get; set; }
        public virtual DbSet<TaceoTeamMatchBC> TaceoTeamMatchBC { get; set; }
        public virtual DbSet<TaceoUserLineTypeRights> TaceoUserLineTypeRights { get; set; }
        public virtual DbSet<TaceoUserSportRights> TaceoUserSportRights { get; set; }
        public virtual DbSet<TaceoUserYubico> TaceoUserYubico { get; set; }
        public virtual DbSet<TaceoUTEvent> TaceoUTEvent { get; set; }
        public virtual DbSet<TaceoUTOdds> TaceoUTOdds { get; set; }
        public virtual DbSet<TaceoUTPool> TaceoUTPool { get; set; }
        public virtual DbSet<TaceoUTRace> TaceoUTRace { get; set; }
        public virtual DbSet<TaceoUTRunners> TaceoUTRunners { get; set; }
        public virtual DbSet<TaceoUTStatusChange> TaceoUTStatusChange { get; set; }
        public virtual DbSet<TaceoUTUpdate> TaceoUTUpdate { get; set; }
        public virtual DbSet<TaceoWagerLog> TaceoWagerLog { get; set; }
        public virtual DbSet<TaceoXmlFeed> TaceoXmlFeed { get; set; }
        public virtual DbSet<TaceoYubicoDateRestriction> TaceoYubicoDateRestriction { get; set; }
        public virtual DbSet<TaceoYubicoOption> TaceoYubicoOption { get; set; }
        public virtual DbSet<TaceoYubicoRestrictedRights> TaceoYubicoRestrictedRights { get; set; }
        public virtual DbSet<TAX> TAX { get; set; }
        public virtual DbSet<TAXTRANSACT> TAXTRANSACT { get; set; }
        public virtual DbSet<TEAM> TEAM { get; set; }
        public virtual DbSet<TEAMLANG> TEAMLANG { get; set; }
        public virtual DbSet<TeaserBtnDetail> TeaserBtnDetail { get; set; }
        public virtual DbSet<TeaserBtnMain> TeaserBtnMain { get; set; }
        public virtual DbSet<Terminal> Terminal { get; set; }
        public virtual DbSet<TerminalManager> TerminalManager { get; set; }
        public virtual DbSet<TerminalSessionActive> TerminalSessionActive { get; set; }
        public virtual DbSet<TerminalSessionClosed> TerminalSessionClosed { get; set; }
        public virtual DbSet<TICKERCONFIGURATION> TICKERCONFIGURATION { get; set; }
        public virtual DbSet<TICKERCONFIGURATIONDETAIL> TICKERCONFIGURATIONDETAIL { get; set; }
        public virtual DbSet<TICKERUSERLINETYPE> TICKERUSERLINETYPE { get; set; }
        public virtual DbSet<TicketDetail> TicketDetail { get; set; }
        public virtual DbSet<TicketHold> TicketHold { get; set; }
        public virtual DbSet<TicketHoldRelease> TicketHoldRelease { get; set; }
        public virtual DbSet<TicketMain> TicketMain { get; set; }
        public virtual DbSet<TICKETTEMPLATE> TICKETTEMPLATE { get; set; }
        public virtual DbSet<TILL> TILL { get; set; }
        public virtual DbSet<TillTransact> TillTransact { get; set; }
        public virtual DbSet<TIMEZONE> TIMEZONE { get; set; }
        public virtual DbSet<TIPEXBOOKMAKERS> TIPEXBOOKMAKERS { get; set; }
        public virtual DbSet<TIPEXSPORT> TIPEXSPORT { get; set; }
        public virtual DbSet<TIPEXSPORTMASTERID> TIPEXSPORTMASTERID { get; set; }
        public virtual DbSet<Track> Track { get; set; }
        public virtual DbSet<TrackAmtote> TrackAmtote { get; set; }
        public virtual DbSet<TrackUTote> TrackUTote { get; set; }
        public virtual DbSet<USERCHARTCONFIGURATION> USERCHARTCONFIGURATION { get; set; }
        public virtual DbSet<USERLINETYPE> USERLINETYPE { get; set; }
        public virtual DbSet<USERLOGONS> USERLOGONS { get; set; }
        public virtual DbSet<USERMESSAGE> USERMESSAGE { get; set; }
        public virtual DbSet<USERPROFILE> USERPROFILE { get; set; }
        public virtual DbSet<USERPROFILEMSG> USERPROFILEMSG { get; set; }
        public virtual DbSet<USERPROFILERIGHTS> USERPROFILERIGHTS { get; set; }
        public virtual DbSet<USERPROFILERIGHTSLOG> USERPROFILERIGHTSLOG { get; set; }
        public virtual DbSet<USERRIGHTS> USERRIGHTS { get; set; }
        public virtual DbSet<USERRIGHTSLOG> USERRIGHTSLOG { get; set; }
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<USERSACTIONLOG> USERSACTIONLOG { get; set; }
        public virtual DbSet<USERSBOOK> USERSBOOK { get; set; }
        public virtual DbSet<USERSLANGUAGE> USERSLANGUAGE { get; set; }
        public virtual DbSet<USERSLOG> USERSLOG { get; set; }
        public virtual DbSet<VIPAccount> VIPAccount { get; set; }
        public virtual DbSet<VIPUserSession> VIPUserSession { get; set; }
        public virtual DbSet<Voucher> Voucher { get; set; }
        public virtual DbSet<VoucherTemplate> VoucherTemplate { get; set; }
        public virtual DbSet<VoucherTrans> VoucherTrans { get; set; }
        public virtual DbSet<WAGERDETAIL> WAGERDETAIL { get; set; }
        public virtual DbSet<WAGERHEADER> WAGERHEADER { get; set; }
        public virtual DbSet<WAGERTRACKER> WAGERTRACKER { get; set; }
        public virtual DbSet<WAGERTYPE> WAGERTYPE { get; set; }
        public virtual DbSet<WAGERTYPEGROUPLANG> WAGERTYPEGROUPLANG { get; set; }
        public virtual DbSet<WAGERTYPELANG> WAGERTYPELANG { get; set; }
        public virtual DbSet<WAGERTYPESPORT> WAGERTYPESPORT { get; set; }
        public virtual DbSet<WEBCOLUMN> WEBCOLUMN { get; set; }
        public virtual DbSet<WEBCOLUMNDETAIL> WEBCOLUMNDETAIL { get; set; }
        public virtual DbSet<WEBROW> WEBROW { get; set; }
        public virtual DbSet<WEBROWDETAIL> WEBROWDETAIL { get; set; }
        public virtual DbSet<WEBROWLANG> WEBROWLANG { get; set; }
        public virtual DbSet<WebSession> WebSession { get; set; }
        public virtual DbSet<WebSessionDetail> WebSessionDetail { get; set; }
        public virtual DbSet<ATRISKLOG> ATRISKLOG { get; set; }
        public virtual DbSet<backupPA> backupPA { get; set; }
        public virtual DbSet<backupPW> backupPW { get; set; }
        public virtual DbSet<CasinoSolutions_PlayerAccounting> CasinoSolutions_PlayerAccounting { get; set; }
        public virtual DbSet<CASINOTRANSACTIONS> CASINOTRANSACTIONS { get; set; }
        public virtual DbSet<CHANGEDWAGERDETAIL> CHANGEDWAGERDETAIL { get; set; }
        public virtual DbSet<DISBTEMP> DISBTEMP { get; set; }
        public virtual DbSet<FREEPLAYOFFICEOPTIONS_BKP> FREEPLAYOFFICEOPTIONS_BKP { get; set; }
        public virtual DbSet<GAMECHANGE> GAMECHANGE { get; set; }
        public virtual DbSet<GAMEIMPORTERSOURCES> GAMEIMPORTERSOURCES { get; set; }
        public virtual DbSet<GAMESYNCGAMES> GAMESYNCGAMES { get; set; }
        public virtual DbSet<GRADEDGAMECHANGE> GRADEDGAMECHANGE { get; set; }
        public virtual DbSet<LINESUBSCRIBERDGSINFO> LINESUBSCRIBERDGSINFO { get; set; }
        public virtual DbSet<LINETYPELINKSLOG> LINETYPELINKSLOG { get; set; }
        public virtual DbSet<LINETYPELOG> LINETYPELOG { get; set; }
        public virtual DbSet<Migration_Agents_Balances> Migration_Agents_Balances { get; set; }
        public virtual DbSet<Migration_Balances> Migration_Balances { get; set; }
        public virtual DbSet<Migration_CreditLimit> Migration_CreditLimit { get; set; }
        public virtual DbSet<Migration_Players> Migration_Players { get; set; }
        public virtual DbSet<Migration_Settle> Migration_Settle { get; set; }
        public virtual DbSet<oldamount> oldamount { get; set; }
        public virtual DbSet<OperationDate> OperationDate { get; set; }
        public virtual DbSet<PLAYERCALLSLOG> PLAYERCALLSLOG { get; set; }
        public virtual DbSet<PLAYERDELETED> PLAYERDELETED { get; set; }
        public virtual DbSet<PLAYERID> PLAYERID { get; set; }
        public virtual DbSet<PLAYERPROFILEGAMETYPELOG> PLAYERPROFILEGAMETYPELOG { get; set; }
        public virtual DbSet<PLAYERPROFILEPARLAYLIMITLOG> PLAYERPROFILEPARLAYLIMITLOG { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<SYSTEMBANNEDIPS> SYSTEMBANNEDIPS { get; set; }
        public virtual DbSet<SYSTEMBETRADARCONFIG> SYSTEMBETRADARCONFIG { get; set; }
        public virtual DbSet<SYSTEMBONUSSETTING> SYSTEMBONUSSETTING { get; set; }
        public virtual DbSet<SYSTEMDBSLINES> SYSTEMDBSLINES { get; set; }
        public virtual DbSet<SYSTEMDISTRIBUTIONINFO> SYSTEMDISTRIBUTIONINFO { get; set; }
        public virtual DbSet<SYSTEMERRORLOG> SYSTEMERRORLOG { get; set; }
        public virtual DbSet<SYSTEMMOVERSETTINGS> SYSTEMMOVERSETTINGS { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESCLIENT> SYSTEMPREFERENCESCLIENT { get; set; }
        public virtual DbSet<SYSTEMPREFERENCESMANAGER> SYSTEMPREFERENCESMANAGER { get; set; }
        public virtual DbSet<SYSTEMRECORDINGLOG> SYSTEMRECORDINGLOG { get; set; }
        public virtual DbSet<SYSTEMVERSIONINFO> SYSTEMVERSIONINFO { get; set; }
        public virtual DbSet<TaceoAgentCommInfo> TaceoAgentCommInfo { get; set; }
        public virtual DbSet<TaceoSignUpIpRestriction> TaceoSignUpIpRestriction { get; set; }
        public virtual DbSet<tempbackup> tempbackup { get; set; }
        public virtual DbSet<TIPEXCONFIG> TIPEXCONFIG { get; set; }
        public virtual DbSet<Tmp_USERS> Tmp_USERS { get; set; }
        public virtual DbSet<UNGRADEDWAGERDETAIL> UNGRADEDWAGERDETAIL { get; set; }
        public virtual DbSet<UNGRADEDWAGERHEADER> UNGRADEDWAGERHEADER { get; set; }
        public virtual DbSet<USERLOGONSLOG> USERLOGONSLOG { get; set; }
        public virtual DbSet<USERSDELETED> USERSDELETED { get; set; }
        public virtual DbSet<UToteTemp> UToteTemp { get; set; }
    
        public virtual int Agent_Delete(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Delete", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_FindList_Result> Agent_FindList(string prmAgent, string prmName, Nullable<short> prmIdUser)
        {
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_FindList_Result>("Agent_FindList", prmAgentParameter, prmNameParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetAgentsList_Result> Agent_GetAgentsList(Nullable<int> prmIdAgent, Nullable<byte> prmDecimals, Nullable<byte> prmTrunc)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmDecimalsParameter = prmDecimals.HasValue ?
                new ObjectParameter("prmDecimals", prmDecimals) :
                new ObjectParameter("prmDecimals", typeof(byte));
    
            var prmTruncParameter = prmTrunc.HasValue ?
                new ObjectParameter("prmTrunc", prmTrunc) :
                new ObjectParameter("prmTrunc", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetAgentsList_Result>("Agent_GetAgentsList", prmIdAgentParameter, prmDecimalsParameter, prmTruncParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Agent_GetChildren(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Agent_GetChildren", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetDistributor_Result> Agent_GetDistributor(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetDistributor_Result>("Agent_GetDistributor", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetInfo_Result> Agent_GetInfo(string prmAgent, Nullable<short> prmIdUser)
        {
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetInfo_Result>("Agent_GetInfo", prmAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetInfoDistributor_Result> Agent_GetInfoDistributor(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetInfoDistributor_Result>("Agent_GetInfoDistributor", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetList_Result> Agent_GetList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetList_Result>("Agent_GetList", prmIdUserParameter);
        }
    
        public virtual ObjectResult<Agent_GetListByBook_Result> Agent_GetListByBook(Nullable<short> prmIdBook)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetListByBook_Result>("Agent_GetListByBook", prmIdBookParameter);
        }
    
        public virtual ObjectResult<Agent_GetNotes_Result> Agent_GetNotes(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetNotes_Result>("Agent_GetNotes", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetPlayers_Result> Agent_GetPlayers(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetPlayers_Result>("Agent_GetPlayers", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Agent_GetPlayersID(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Agent_GetPlayersID", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<Agent_GetPlayersList_Result> Agent_GetPlayersList(Nullable<int> prmIdAgent, Nullable<byte> prmDecimals, Nullable<byte> prmTrunc, Nullable<short> prmIdCurrency)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmDecimalsParameter = prmDecimals.HasValue ?
                new ObjectParameter("prmDecimals", prmDecimals) :
                new ObjectParameter("prmDecimals", typeof(byte));
    
            var prmTruncParameter = prmTrunc.HasValue ?
                new ObjectParameter("prmTrunc", prmTrunc) :
                new ObjectParameter("prmTrunc", typeof(byte));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetPlayersList_Result>("Agent_GetPlayersList", prmIdAgentParameter, prmDecimalsParameter, prmTruncParameter, prmIdCurrencyParameter);
        }
    
        public virtual ObjectResult<Agent_GetStatistics_Result> Agent_GetStatistics(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Agent_GetStatistics_Result>("Agent_GetStatistics", prmIdAgentParameter);
        }
    
        public virtual int Agent_Insert(Nullable<bool> prmEnable, Nullable<bool> prmDontXfer, Nullable<bool> prmIsDistributor, Nullable<int> prmIdUser, Nullable<int> prmDistributor, Nullable<decimal> prmMakeup, Nullable<byte> prmCommSports, Nullable<byte> prmCommCasino, Nullable<byte> prmCommHorses, Nullable<decimal> prmPerHeadSports, Nullable<decimal> prmPerHeadCasino, Nullable<decimal> prmPerHeadHorses, Nullable<short> prmIdAgentType, Nullable<short> prmIdCurrency, Nullable<short> prmIdBook, Nullable<short> prmIdGrouping, string prmAgent, string prmName, string prmPassword, string prmCity, string prmState, string prmCountry, string prmAddress1, string prmAddress2, string prmEmail, string prmPhone, string prmFax, string prmZip, Nullable<bool> prmOnlineAccess, string prmOnlineMessage, Nullable<short> prmIdLineType, ObjectParameter prmOutIdAgent, ObjectParameter prmOutResult)
        {
            var prmEnableParameter = prmEnable.HasValue ?
                new ObjectParameter("prmEnable", prmEnable) :
                new ObjectParameter("prmEnable", typeof(bool));
    
            var prmDontXferParameter = prmDontXfer.HasValue ?
                new ObjectParameter("prmDontXfer", prmDontXfer) :
                new ObjectParameter("prmDontXfer", typeof(bool));
    
            var prmIsDistributorParameter = prmIsDistributor.HasValue ?
                new ObjectParameter("prmIsDistributor", prmIsDistributor) :
                new ObjectParameter("prmIsDistributor", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(int));
    
            var prmDistributorParameter = prmDistributor.HasValue ?
                new ObjectParameter("prmDistributor", prmDistributor) :
                new ObjectParameter("prmDistributor", typeof(int));
    
            var prmMakeupParameter = prmMakeup.HasValue ?
                new ObjectParameter("prmMakeup", prmMakeup) :
                new ObjectParameter("prmMakeup", typeof(decimal));
    
            var prmCommSportsParameter = prmCommSports.HasValue ?
                new ObjectParameter("prmCommSports", prmCommSports) :
                new ObjectParameter("prmCommSports", typeof(byte));
    
            var prmCommCasinoParameter = prmCommCasino.HasValue ?
                new ObjectParameter("prmCommCasino", prmCommCasino) :
                new ObjectParameter("prmCommCasino", typeof(byte));
    
            var prmCommHorsesParameter = prmCommHorses.HasValue ?
                new ObjectParameter("prmCommHorses", prmCommHorses) :
                new ObjectParameter("prmCommHorses", typeof(byte));
    
            var prmPerHeadSportsParameter = prmPerHeadSports.HasValue ?
                new ObjectParameter("prmPerHeadSports", prmPerHeadSports) :
                new ObjectParameter("prmPerHeadSports", typeof(decimal));
    
            var prmPerHeadCasinoParameter = prmPerHeadCasino.HasValue ?
                new ObjectParameter("prmPerHeadCasino", prmPerHeadCasino) :
                new ObjectParameter("prmPerHeadCasino", typeof(decimal));
    
            var prmPerHeadHorsesParameter = prmPerHeadHorses.HasValue ?
                new ObjectParameter("prmPerHeadHorses", prmPerHeadHorses) :
                new ObjectParameter("prmPerHeadHorses", typeof(decimal));
    
            var prmIdAgentTypeParameter = prmIdAgentType.HasValue ?
                new ObjectParameter("prmIdAgentType", prmIdAgentType) :
                new ObjectParameter("prmIdAgentType", typeof(short));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Insert", prmEnableParameter, prmDontXferParameter, prmIsDistributorParameter, prmIdUserParameter, prmDistributorParameter, prmMakeupParameter, prmCommSportsParameter, prmCommCasinoParameter, prmCommHorsesParameter, prmPerHeadSportsParameter, prmPerHeadCasinoParameter, prmPerHeadHorsesParameter, prmIdAgentTypeParameter, prmIdCurrencyParameter, prmIdBookParameter, prmIdGroupingParameter, prmAgentParameter, prmNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmAddress1Parameter, prmAddress2Parameter, prmEmailParameter, prmPhoneParameter, prmFaxParameter, prmZipParameter, prmOnlineAccessParameter, prmOnlineMessageParameter, prmIdLineTypeParameter, prmOutIdAgent, prmOutResult);
        }
    
        public virtual int Agent_Update(Nullable<int> prmIdAgent, Nullable<bool> prmEnable, Nullable<bool> prmDontXfer, Nullable<bool> prmIsDistributor, Nullable<int> prmIdUser, Nullable<int> prmDistributor, Nullable<decimal> prmMakeup, Nullable<byte> prmCommSports, Nullable<byte> prmCommCasino, Nullable<byte> prmCommHorses, Nullable<decimal> prmPerHeadSports, Nullable<decimal> prmPerHeadCasino, Nullable<decimal> prmPerHeadHorses, Nullable<short> prmIdAgentType, Nullable<short> prmIdCurrency, Nullable<short> prmIdBook, Nullable<short> prmIdGrouping, string prmAgent, string prmName, string prmPassword, string prmCity, string prmState, string prmCountry, string prmAddress1, string prmAddress2, string prmEmail, string prmPhone, string prmFax, string prmZip, Nullable<bool> prmOnlineAccess, string prmOnlineMessage, Nullable<short> prmIdLineType)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmEnableParameter = prmEnable.HasValue ?
                new ObjectParameter("prmEnable", prmEnable) :
                new ObjectParameter("prmEnable", typeof(bool));
    
            var prmDontXferParameter = prmDontXfer.HasValue ?
                new ObjectParameter("prmDontXfer", prmDontXfer) :
                new ObjectParameter("prmDontXfer", typeof(bool));
    
            var prmIsDistributorParameter = prmIsDistributor.HasValue ?
                new ObjectParameter("prmIsDistributor", prmIsDistributor) :
                new ObjectParameter("prmIsDistributor", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(int));
    
            var prmDistributorParameter = prmDistributor.HasValue ?
                new ObjectParameter("prmDistributor", prmDistributor) :
                new ObjectParameter("prmDistributor", typeof(int));
    
            var prmMakeupParameter = prmMakeup.HasValue ?
                new ObjectParameter("prmMakeup", prmMakeup) :
                new ObjectParameter("prmMakeup", typeof(decimal));
    
            var prmCommSportsParameter = prmCommSports.HasValue ?
                new ObjectParameter("prmCommSports", prmCommSports) :
                new ObjectParameter("prmCommSports", typeof(byte));
    
            var prmCommCasinoParameter = prmCommCasino.HasValue ?
                new ObjectParameter("prmCommCasino", prmCommCasino) :
                new ObjectParameter("prmCommCasino", typeof(byte));
    
            var prmCommHorsesParameter = prmCommHorses.HasValue ?
                new ObjectParameter("prmCommHorses", prmCommHorses) :
                new ObjectParameter("prmCommHorses", typeof(byte));
    
            var prmPerHeadSportsParameter = prmPerHeadSports.HasValue ?
                new ObjectParameter("prmPerHeadSports", prmPerHeadSports) :
                new ObjectParameter("prmPerHeadSports", typeof(decimal));
    
            var prmPerHeadCasinoParameter = prmPerHeadCasino.HasValue ?
                new ObjectParameter("prmPerHeadCasino", prmPerHeadCasino) :
                new ObjectParameter("prmPerHeadCasino", typeof(decimal));
    
            var prmPerHeadHorsesParameter = prmPerHeadHorses.HasValue ?
                new ObjectParameter("prmPerHeadHorses", prmPerHeadHorses) :
                new ObjectParameter("prmPerHeadHorses", typeof(decimal));
    
            var prmIdAgentTypeParameter = prmIdAgentType.HasValue ?
                new ObjectParameter("prmIdAgentType", prmIdAgentType) :
                new ObjectParameter("prmIdAgentType", typeof(short));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmAgentParameter = prmAgent != null ?
                new ObjectParameter("prmAgent", prmAgent) :
                new ObjectParameter("prmAgent", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Agent_Update", prmIdAgentParameter, prmEnableParameter, prmDontXferParameter, prmIsDistributorParameter, prmIdUserParameter, prmDistributorParameter, prmMakeupParameter, prmCommSportsParameter, prmCommCasinoParameter, prmCommHorsesParameter, prmPerHeadSportsParameter, prmPerHeadCasinoParameter, prmPerHeadHorsesParameter, prmIdAgentTypeParameter, prmIdCurrencyParameter, prmIdBookParameter, prmIdGroupingParameter, prmAgentParameter, prmNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmAddress1Parameter, prmAddress2Parameter, prmEmailParameter, prmPhoneParameter, prmFaxParameter, prmZipParameter, prmOnlineAccessParameter, prmOnlineMessageParameter, prmIdLineTypeParameter);
        }
    
        public virtual int AgentLineTypes_Add(Nullable<int> prmIdAgent, Nullable<short> prmIdLineType, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_Add", prmIdAgentParameter, prmIdLineTypeParameter, prmIdUserParameter);
        }
    
        public virtual int AgentLineTypes_AddAll(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_AddAll", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<AgentLineTypes_GetList_Result> AgentLineTypes_GetList(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentLineTypes_GetList_Result>("AgentLineTypes_GetList", prmIdAgentParameter);
        }
    
        public virtual ObjectResult<AgentLineTypes_GetListAdded_Result> AgentLineTypes_GetListAdded(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentLineTypes_GetListAdded_Result>("AgentLineTypes_GetListAdded", prmIdAgentParameter);
        }
    
        public virtual int AgentLineTypes_Remove(Nullable<int> prmIdAgent, Nullable<short> prmIdLineType, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_Remove", prmIdAgentParameter, prmIdLineTypeParameter, prmIdUserParameter);
        }
    
        public virtual int AgentLineTypes_RemoveAll(Nullable<int> prmIdAgent, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentLineTypes_RemoveAll", prmIdAgentParameter, prmIdUserParameter);
        }
    
        public virtual int AgentRights_AddRight(Nullable<int> prmIdAgent, Nullable<short> prmIdForm, Nullable<short> prmIdRight, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdFormParameter = prmIdForm.HasValue ?
                new ObjectParameter("prmIdForm", prmIdForm) :
                new ObjectParameter("prmIdForm", typeof(short));
    
            var prmIdRightParameter = prmIdRight.HasValue ?
                new ObjectParameter("prmIdRight", prmIdRight) :
                new ObjectParameter("prmIdRight", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentRights_AddRight", prmIdAgentParameter, prmIdFormParameter, prmIdRightParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<AgentRights_GetList_Result> AgentRights_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentRights_GetList_Result>("AgentRights_GetList");
        }
    
        public virtual ObjectResult<Nullable<short>> AgentRights_GetRights(Nullable<int> prmIdAgent)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("AgentRights_GetRights", prmIdAgentParameter);
        }
    
        public virtual int AgentRights_RemoveRight(Nullable<int> prmIdAgent, Nullable<short> prmIdForm, Nullable<short> prmIdRight, Nullable<short> prmIdUser)
        {
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdFormParameter = prmIdForm.HasValue ?
                new ObjectParameter("prmIdForm", prmIdForm) :
                new ObjectParameter("prmIdForm", typeof(short));
    
            var prmIdRightParameter = prmIdRight.HasValue ?
                new ObjectParameter("prmIdRight", prmIdRight) :
                new ObjectParameter("prmIdRight", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgentRights_RemoveRight", prmIdAgentParameter, prmIdFormParameter, prmIdRightParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfileBook_Insert(Nullable<short> prmIdProfile, Nullable<short> prmIdBook)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfileBook_Insert", prmIdProfileParameter, prmIdBookParameter);
        }
    
        public virtual int Book_Clone(Nullable<short> prmIdBook, string prmName, Nullable<short> prmIdUser)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Book_Clone", prmIdBookParameter, prmNameParameter, prmIdUserParameter);
        }
    
        public virtual int Book_Delete(Nullable<short> prmIdBook, Nullable<short> prmIdUser)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Book_Delete", prmIdBookParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Book_GetAllList_Result> Book_GetAllList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Book_GetAllList_Result>("Book_GetAllList");
        }
    
        public virtual ObjectResult<Book_GetList_Result> Book_GetList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Book_GetList_Result>("Book_GetList", prmIdUserParameter);
        }
    
        public virtual ObjectResult<Book_GetListInfo_Result> Book_GetListInfo(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Book_GetListInfo_Result>("Book_GetListInfo", prmIdUserParameter);
        }
    
        public virtual ObjectResult<Book_GetPlayerProfilesList_Result> Book_GetPlayerProfilesList(Nullable<short> prmIdProfile)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Book_GetPlayerProfilesList_Result>("Book_GetPlayerProfilesList", prmIdProfileParameter);
        }
    
        public virtual ObjectResult<Book_GetUsersList_Result> Book_GetUsersList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Book_GetUsersList_Result>("Book_GetUsersList", prmIdUserParameter);
        }
    
        public virtual int Book_Insert(string prmName, Nullable<int> prmIdWebColumn, Nullable<short> prmIdUser)
        {
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdWebColumnParameter = prmIdWebColumn.HasValue ?
                new ObjectParameter("prmIdWebColumn", prmIdWebColumn) :
                new ObjectParameter("prmIdWebColumn", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Book_Insert", prmNameParameter, prmIdWebColumnParameter, prmIdUserParameter);
        }
    
        public virtual int Book_Update(Nullable<short> prmIdBook, string prmName, Nullable<int> prmIdWebColumn, Nullable<short> prmIdUser)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdWebColumnParameter = prmIdWebColumn.HasValue ?
                new ObjectParameter("prmIdWebColumn", prmIdWebColumn) :
                new ObjectParameter("prmIdWebColumn", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Book_Update", prmIdBookParameter, prmNameParameter, prmIdWebColumnParameter, prmIdUserParameter);
        }
    
        public virtual int Player_DeleteBlackBook(Nullable<int> prmIdPlayer, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_DeleteBlackBook", prmIdPlayerParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Player_FindList_Result> Player_FindList(string prmPlayer, string prmName, string prmLastName, string prmPassword, string prmCity, string prmState, string prmZip, string prmEmail, string prmPhone, string prmSignUpIP, Nullable<byte> prmCurrentBalance, Nullable<short> prmIdUser)
        {
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmSignUpIPParameter = prmSignUpIP != null ?
                new ObjectParameter("prmSignUpIP", prmSignUpIP) :
                new ObjectParameter("prmSignUpIP", typeof(string));
    
            var prmCurrentBalanceParameter = prmCurrentBalance.HasValue ?
                new ObjectParameter("prmCurrentBalance", prmCurrentBalance) :
                new ObjectParameter("prmCurrentBalance", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_FindList_Result>("Player_FindList", prmPlayerParameter, prmNameParameter, prmLastNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmZipParameter, prmEmailParameter, prmPhoneParameter, prmSignUpIPParameter, prmCurrentBalanceParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Player_GetBlackBook(Nullable<int> prmIdPlayer)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Player_GetBlackBook", prmIdPlayerParameter);
        }
    
        public virtual ObjectResult<Player_GetBlackBookList_Result> Player_GetBlackBookList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetBlackBookList_Result>("Player_GetBlackBookList", prmIdUserParameter);
        }
    
        public virtual ObjectResult<Player_GetInfo_Result> Player_GetInfo(string prmPlayer, Nullable<short> prmIdUser)
        {
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetInfo_Result>("Player_GetInfo", prmPlayerParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Player_GetLastTransaction(Nullable<int> prmIdPlayer, string prmTransactionType)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmTransactionTypeParameter = prmTransactionType != null ?
                new ObjectParameter("prmTransactionType", prmTransactionType) :
                new ObjectParameter("prmTransactionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Player_GetLastTransaction", prmIdPlayerParameter, prmTransactionTypeParameter);
        }
    
        public virtual ObjectResult<Player_GetListByFilter_Result> Player_GetListByFilter(Nullable<bool> prmAdvance, Nullable<byte> prmDigits, string prmFirstPlayer, string prmLastPlayer, string prmPlayer, string prmName, string prmLastName, string prmPassword, string prmCity, string prmState, string prmZip, string prmEmail, string prmPhone, string prmSignUpIP, Nullable<byte> prmCurrentBalance, Nullable<short> prmIdUser)
        {
            var prmAdvanceParameter = prmAdvance.HasValue ?
                new ObjectParameter("prmAdvance", prmAdvance) :
                new ObjectParameter("prmAdvance", typeof(bool));
    
            var prmDigitsParameter = prmDigits.HasValue ?
                new ObjectParameter("prmDigits", prmDigits) :
                new ObjectParameter("prmDigits", typeof(byte));
    
            var prmFirstPlayerParameter = prmFirstPlayer != null ?
                new ObjectParameter("prmFirstPlayer", prmFirstPlayer) :
                new ObjectParameter("prmFirstPlayer", typeof(string));
    
            var prmLastPlayerParameter = prmLastPlayer != null ?
                new ObjectParameter("prmLastPlayer", prmLastPlayer) :
                new ObjectParameter("prmLastPlayer", typeof(string));
    
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmSignUpIPParameter = prmSignUpIP != null ?
                new ObjectParameter("prmSignUpIP", prmSignUpIP) :
                new ObjectParameter("prmSignUpIP", typeof(string));
    
            var prmCurrentBalanceParameter = prmCurrentBalance.HasValue ?
                new ObjectParameter("prmCurrentBalance", prmCurrentBalance) :
                new ObjectParameter("prmCurrentBalance", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetListByFilter_Result>("Player_GetListByFilter", prmAdvanceParameter, prmDigitsParameter, prmFirstPlayerParameter, prmLastPlayerParameter, prmPlayerParameter, prmNameParameter, prmLastNameParameter, prmPasswordParameter, prmCityParameter, prmStateParameter, prmZipParameter, prmEmailParameter, prmPhoneParameter, prmSignUpIPParameter, prmCurrentBalanceParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<Player_GetNotes_Result> Player_GetNotes(Nullable<int> prmIdPlayer)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetNotes_Result>("Player_GetNotes", prmIdPlayerParameter);
        }
    
        public virtual ObjectResult<Player_GetStatistics_Result> Player_GetStatistics(Nullable<int> prmIdPlayer)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetStatistics_Result>("Player_GetStatistics", prmIdPlayerParameter);
        }
    
        public virtual ObjectResult<Player_GetStep_Result> Player_GetStep(string prmPlayer, Nullable<bool> prmNext, Nullable<short> prmIdUser)
        {
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmNextParameter = prmNext.HasValue ?
                new ObjectParameter("prmNext", prmNext) :
                new ObjectParameter("prmNext", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Player_GetStep_Result>("Player_GetStep", prmPlayerParameter, prmNextParameter, prmIdUserParameter);
        }
    
        public virtual int Player_GetTransactionsCnt(Nullable<int> prmIdPlayer, ObjectParameter prmOutCount)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_GetTransactionsCnt", prmIdPlayerParameter, prmOutCount);
        }
    
        public virtual int Player_Insert(Nullable<short> prmIdLineType, Nullable<byte> prmIdOffice, Nullable<int> prmIdAgent, Nullable<short> prmIdCurrency, Nullable<short> prmIdGrouping, Nullable<short> prmIdSource, Nullable<short> prmIdProfile, Nullable<short> prmIdProfileLimits, Nullable<short> prmIdPlayerRate, Nullable<short> prmIdBook, Nullable<byte> prmIdTimeZone, Nullable<byte> prmIdLanguage, string prmScheduleStyle, string prmPlayer, string prmPassword, string prmName, string prmLastName, string prmLastName2, string prmTitle, string prmAddress1, string prmAddress2, string prmCity, string prmState, string prmCountry, string prmZip, string prmPhone, string prmFax, string prmEmail, string prmStatus, Nullable<bool> prmAutoPay, Nullable<bool> prmBalanceChecked, Nullable<decimal> prmCreditLimit, Nullable<bool> prmNoLimit, Nullable<decimal> prmTempCredit, Nullable<byte> prmSoftLimitPercent, Nullable<System.DateTime> prmTempCreditExpire, Nullable<bool> prmOnlineAccess, string prmOnlinePassword, string prmOnlineMessage, Nullable<decimal> prmOnlineMaxWager, Nullable<decimal> prmOnlineMinWager, Nullable<decimal> prmMaxWager, Nullable<decimal> prmMinWager, Nullable<short> prmChartPercent, Nullable<short> prmMasterChart, Nullable<bool> prmMaster, Nullable<byte> prmIdFlagMessageType, Nullable<byte> prmMaxActionPoints, string prmBonusPointsStatus, Nullable<System.DateTime> prmBonusPointsExpire, Nullable<System.DateTime> prmBonusPointsStart, string prmLineStyle, string prmNHLLine, string prmMLBLine, Nullable<byte> prmPitcherDefault, Nullable<bool> prmDuplicatedBets, Nullable<bool> prmDuplicatedBetsOnline, Nullable<bool> prmScheduleFB, Nullable<bool> prmScheduleBB, Nullable<bool> prmScheduleHK, Nullable<bool> prmScheduleBS, Nullable<decimal> prmSettledFigure, Nullable<bool> prmShowInTicker, Nullable<bool> prmEPOSPlayer, Nullable<bool> prmEnableSports, Nullable<bool> prmEnableCasino, Nullable<bool> prmEnableHorses, Nullable<bool> prmEnableCards, Nullable<System.DateTime> prmDateOfBirth, string prmSignUpIP, string prmSecQuestion, string prmSecAnswer, Nullable<bool> prmHoldBets, Nullable<byte> prmHoldDelay, Nullable<short> prmIdUser, ObjectParameter prmOutIdPlayer, ObjectParameter prmOutResult)
        {
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmIdSourceParameter = prmIdSource.HasValue ?
                new ObjectParameter("prmIdSource", prmIdSource) :
                new ObjectParameter("prmIdSource", typeof(short));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdProfileLimitsParameter = prmIdProfileLimits.HasValue ?
                new ObjectParameter("prmIdProfileLimits", prmIdProfileLimits) :
                new ObjectParameter("prmIdProfileLimits", typeof(short));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdTimeZoneParameter = prmIdTimeZone.HasValue ?
                new ObjectParameter("prmIdTimeZone", prmIdTimeZone) :
                new ObjectParameter("prmIdTimeZone", typeof(byte));
    
            var prmIdLanguageParameter = prmIdLanguage.HasValue ?
                new ObjectParameter("prmIdLanguage", prmIdLanguage) :
                new ObjectParameter("prmIdLanguage", typeof(byte));
    
            var prmScheduleStyleParameter = prmScheduleStyle != null ?
                new ObjectParameter("prmScheduleStyle", prmScheduleStyle) :
                new ObjectParameter("prmScheduleStyle", typeof(string));
    
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmLastName2Parameter = prmLastName2 != null ?
                new ObjectParameter("prmLastName2", prmLastName2) :
                new ObjectParameter("prmLastName2", typeof(string));
    
            var prmTitleParameter = prmTitle != null ?
                new ObjectParameter("prmTitle", prmTitle) :
                new ObjectParameter("prmTitle", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmStatusParameter = prmStatus != null ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(string));
    
            var prmAutoPayParameter = prmAutoPay.HasValue ?
                new ObjectParameter("prmAutoPay", prmAutoPay) :
                new ObjectParameter("prmAutoPay", typeof(bool));
    
            var prmBalanceCheckedParameter = prmBalanceChecked.HasValue ?
                new ObjectParameter("prmBalanceChecked", prmBalanceChecked) :
                new ObjectParameter("prmBalanceChecked", typeof(bool));
    
            var prmCreditLimitParameter = prmCreditLimit.HasValue ?
                new ObjectParameter("prmCreditLimit", prmCreditLimit) :
                new ObjectParameter("prmCreditLimit", typeof(decimal));
    
            var prmNoLimitParameter = prmNoLimit.HasValue ?
                new ObjectParameter("prmNoLimit", prmNoLimit) :
                new ObjectParameter("prmNoLimit", typeof(bool));
    
            var prmTempCreditParameter = prmTempCredit.HasValue ?
                new ObjectParameter("prmTempCredit", prmTempCredit) :
                new ObjectParameter("prmTempCredit", typeof(decimal));
    
            var prmSoftLimitPercentParameter = prmSoftLimitPercent.HasValue ?
                new ObjectParameter("prmSoftLimitPercent", prmSoftLimitPercent) :
                new ObjectParameter("prmSoftLimitPercent", typeof(byte));
    
            var prmTempCreditExpireParameter = prmTempCreditExpire.HasValue ?
                new ObjectParameter("prmTempCreditExpire", prmTempCreditExpire) :
                new ObjectParameter("prmTempCreditExpire", typeof(System.DateTime));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlinePasswordParameter = prmOnlinePassword != null ?
                new ObjectParameter("prmOnlinePassword", prmOnlinePassword) :
                new ObjectParameter("prmOnlinePassword", typeof(string));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmOnlineMaxWagerParameter = prmOnlineMaxWager.HasValue ?
                new ObjectParameter("prmOnlineMaxWager", prmOnlineMaxWager) :
                new ObjectParameter("prmOnlineMaxWager", typeof(decimal));
    
            var prmOnlineMinWagerParameter = prmOnlineMinWager.HasValue ?
                new ObjectParameter("prmOnlineMinWager", prmOnlineMinWager) :
                new ObjectParameter("prmOnlineMinWager", typeof(decimal));
    
            var prmMaxWagerParameter = prmMaxWager.HasValue ?
                new ObjectParameter("prmMaxWager", prmMaxWager) :
                new ObjectParameter("prmMaxWager", typeof(decimal));
    
            var prmMinWagerParameter = prmMinWager.HasValue ?
                new ObjectParameter("prmMinWager", prmMinWager) :
                new ObjectParameter("prmMinWager", typeof(decimal));
    
            var prmChartPercentParameter = prmChartPercent.HasValue ?
                new ObjectParameter("prmChartPercent", prmChartPercent) :
                new ObjectParameter("prmChartPercent", typeof(short));
    
            var prmMasterChartParameter = prmMasterChart.HasValue ?
                new ObjectParameter("prmMasterChart", prmMasterChart) :
                new ObjectParameter("prmMasterChart", typeof(short));
    
            var prmMasterParameter = prmMaster.HasValue ?
                new ObjectParameter("prmMaster", prmMaster) :
                new ObjectParameter("prmMaster", typeof(bool));
    
            var prmIdFlagMessageTypeParameter = prmIdFlagMessageType.HasValue ?
                new ObjectParameter("prmIdFlagMessageType", prmIdFlagMessageType) :
                new ObjectParameter("prmIdFlagMessageType", typeof(byte));
    
            var prmMaxActionPointsParameter = prmMaxActionPoints.HasValue ?
                new ObjectParameter("prmMaxActionPoints", prmMaxActionPoints) :
                new ObjectParameter("prmMaxActionPoints", typeof(byte));
    
            var prmBonusPointsStatusParameter = prmBonusPointsStatus != null ?
                new ObjectParameter("prmBonusPointsStatus", prmBonusPointsStatus) :
                new ObjectParameter("prmBonusPointsStatus", typeof(string));
    
            var prmBonusPointsExpireParameter = prmBonusPointsExpire.HasValue ?
                new ObjectParameter("prmBonusPointsExpire", prmBonusPointsExpire) :
                new ObjectParameter("prmBonusPointsExpire", typeof(System.DateTime));
    
            var prmBonusPointsStartParameter = prmBonusPointsStart.HasValue ?
                new ObjectParameter("prmBonusPointsStart", prmBonusPointsStart) :
                new ObjectParameter("prmBonusPointsStart", typeof(System.DateTime));
    
            var prmLineStyleParameter = prmLineStyle != null ?
                new ObjectParameter("prmLineStyle", prmLineStyle) :
                new ObjectParameter("prmLineStyle", typeof(string));
    
            var prmNHLLineParameter = prmNHLLine != null ?
                new ObjectParameter("prmNHLLine", prmNHLLine) :
                new ObjectParameter("prmNHLLine", typeof(string));
    
            var prmMLBLineParameter = prmMLBLine != null ?
                new ObjectParameter("prmMLBLine", prmMLBLine) :
                new ObjectParameter("prmMLBLine", typeof(string));
    
            var prmPitcherDefaultParameter = prmPitcherDefault.HasValue ?
                new ObjectParameter("prmPitcherDefault", prmPitcherDefault) :
                new ObjectParameter("prmPitcherDefault", typeof(byte));
    
            var prmDuplicatedBetsParameter = prmDuplicatedBets.HasValue ?
                new ObjectParameter("prmDuplicatedBets", prmDuplicatedBets) :
                new ObjectParameter("prmDuplicatedBets", typeof(bool));
    
            var prmDuplicatedBetsOnlineParameter = prmDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmDuplicatedBetsOnline", prmDuplicatedBetsOnline) :
                new ObjectParameter("prmDuplicatedBetsOnline", typeof(bool));
    
            var prmScheduleFBParameter = prmScheduleFB.HasValue ?
                new ObjectParameter("prmScheduleFB", prmScheduleFB) :
                new ObjectParameter("prmScheduleFB", typeof(bool));
    
            var prmScheduleBBParameter = prmScheduleBB.HasValue ?
                new ObjectParameter("prmScheduleBB", prmScheduleBB) :
                new ObjectParameter("prmScheduleBB", typeof(bool));
    
            var prmScheduleHKParameter = prmScheduleHK.HasValue ?
                new ObjectParameter("prmScheduleHK", prmScheduleHK) :
                new ObjectParameter("prmScheduleHK", typeof(bool));
    
            var prmScheduleBSParameter = prmScheduleBS.HasValue ?
                new ObjectParameter("prmScheduleBS", prmScheduleBS) :
                new ObjectParameter("prmScheduleBS", typeof(bool));
    
            var prmSettledFigureParameter = prmSettledFigure.HasValue ?
                new ObjectParameter("prmSettledFigure", prmSettledFigure) :
                new ObjectParameter("prmSettledFigure", typeof(decimal));
    
            var prmShowInTickerParameter = prmShowInTicker.HasValue ?
                new ObjectParameter("prmShowInTicker", prmShowInTicker) :
                new ObjectParameter("prmShowInTicker", typeof(bool));
    
            var prmEPOSPlayerParameter = prmEPOSPlayer.HasValue ?
                new ObjectParameter("prmEPOSPlayer", prmEPOSPlayer) :
                new ObjectParameter("prmEPOSPlayer", typeof(bool));
    
            var prmEnableSportsParameter = prmEnableSports.HasValue ?
                new ObjectParameter("prmEnableSports", prmEnableSports) :
                new ObjectParameter("prmEnableSports", typeof(bool));
    
            var prmEnableCasinoParameter = prmEnableCasino.HasValue ?
                new ObjectParameter("prmEnableCasino", prmEnableCasino) :
                new ObjectParameter("prmEnableCasino", typeof(bool));
    
            var prmEnableHorsesParameter = prmEnableHorses.HasValue ?
                new ObjectParameter("prmEnableHorses", prmEnableHorses) :
                new ObjectParameter("prmEnableHorses", typeof(bool));
    
            var prmEnableCardsParameter = prmEnableCards.HasValue ?
                new ObjectParameter("prmEnableCards", prmEnableCards) :
                new ObjectParameter("prmEnableCards", typeof(bool));
    
            var prmDateOfBirthParameter = prmDateOfBirth.HasValue ?
                new ObjectParameter("prmDateOfBirth", prmDateOfBirth) :
                new ObjectParameter("prmDateOfBirth", typeof(System.DateTime));
    
            var prmSignUpIPParameter = prmSignUpIP != null ?
                new ObjectParameter("prmSignUpIP", prmSignUpIP) :
                new ObjectParameter("prmSignUpIP", typeof(string));
    
            var prmSecQuestionParameter = prmSecQuestion != null ?
                new ObjectParameter("prmSecQuestion", prmSecQuestion) :
                new ObjectParameter("prmSecQuestion", typeof(string));
    
            var prmSecAnswerParameter = prmSecAnswer != null ?
                new ObjectParameter("prmSecAnswer", prmSecAnswer) :
                new ObjectParameter("prmSecAnswer", typeof(string));
    
            var prmHoldBetsParameter = prmHoldBets.HasValue ?
                new ObjectParameter("prmHoldBets", prmHoldBets) :
                new ObjectParameter("prmHoldBets", typeof(bool));
    
            var prmHoldDelayParameter = prmHoldDelay.HasValue ?
                new ObjectParameter("prmHoldDelay", prmHoldDelay) :
                new ObjectParameter("prmHoldDelay", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Insert", prmIdLineTypeParameter, prmIdOfficeParameter, prmIdAgentParameter, prmIdCurrencyParameter, prmIdGroupingParameter, prmIdSourceParameter, prmIdProfileParameter, prmIdProfileLimitsParameter, prmIdPlayerRateParameter, prmIdBookParameter, prmIdTimeZoneParameter, prmIdLanguageParameter, prmScheduleStyleParameter, prmPlayerParameter, prmPasswordParameter, prmNameParameter, prmLastNameParameter, prmLastName2Parameter, prmTitleParameter, prmAddress1Parameter, prmAddress2Parameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmZipParameter, prmPhoneParameter, prmFaxParameter, prmEmailParameter, prmStatusParameter, prmAutoPayParameter, prmBalanceCheckedParameter, prmCreditLimitParameter, prmNoLimitParameter, prmTempCreditParameter, prmSoftLimitPercentParameter, prmTempCreditExpireParameter, prmOnlineAccessParameter, prmOnlinePasswordParameter, prmOnlineMessageParameter, prmOnlineMaxWagerParameter, prmOnlineMinWagerParameter, prmMaxWagerParameter, prmMinWagerParameter, prmChartPercentParameter, prmMasterChartParameter, prmMasterParameter, prmIdFlagMessageTypeParameter, prmMaxActionPointsParameter, prmBonusPointsStatusParameter, prmBonusPointsExpireParameter, prmBonusPointsStartParameter, prmLineStyleParameter, prmNHLLineParameter, prmMLBLineParameter, prmPitcherDefaultParameter, prmDuplicatedBetsParameter, prmDuplicatedBetsOnlineParameter, prmScheduleFBParameter, prmScheduleBBParameter, prmScheduleHKParameter, prmScheduleBSParameter, prmSettledFigureParameter, prmShowInTickerParameter, prmEPOSPlayerParameter, prmEnableSportsParameter, prmEnableCasinoParameter, prmEnableHorsesParameter, prmEnableCardsParameter, prmDateOfBirthParameter, prmSignUpIPParameter, prmSecQuestionParameter, prmSecAnswerParameter, prmHoldBetsParameter, prmHoldDelayParameter, prmIdUserParameter, prmOutIdPlayer, prmOutResult);
        }
    
        public virtual int Player_InsertBlackBook(Nullable<int> prmIdPlayer, Nullable<System.DateTime> prmSettleDate, string prmDescription, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmSettleDateParameter = prmSettleDate.HasValue ?
                new ObjectParameter("prmSettleDate", prmSettleDate) :
                new ObjectParameter("prmSettleDate", typeof(System.DateTime));
    
            var prmDescriptionParameter = prmDescription != null ?
                new ObjectParameter("prmDescription", prmDescription) :
                new ObjectParameter("prmDescription", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_InsertBlackBook", prmIdPlayerParameter, prmSettleDateParameter, prmDescriptionParameter, prmIdUserParameter);
        }
    
        public virtual int Player_InsertBonusTransaction(Nullable<int> prmIdWager, Nullable<int> prmIdPlayer, string prmDescription, Nullable<byte> prmType, Nullable<float> prmBonusPoints, Nullable<int> prmIdWagerType, Nullable<decimal> prmPrevBalance, Nullable<decimal> prmCurrBalance, Nullable<short> prmIdUser)
        {
            var prmIdWagerParameter = prmIdWager.HasValue ?
                new ObjectParameter("prmIdWager", prmIdWager) :
                new ObjectParameter("prmIdWager", typeof(int));
    
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmDescriptionParameter = prmDescription != null ?
                new ObjectParameter("prmDescription", prmDescription) :
                new ObjectParameter("prmDescription", typeof(string));
    
            var prmTypeParameter = prmType.HasValue ?
                new ObjectParameter("prmType", prmType) :
                new ObjectParameter("prmType", typeof(byte));
    
            var prmBonusPointsParameter = prmBonusPoints.HasValue ?
                new ObjectParameter("prmBonusPoints", prmBonusPoints) :
                new ObjectParameter("prmBonusPoints", typeof(float));
    
            var prmIdWagerTypeParameter = prmIdWagerType.HasValue ?
                new ObjectParameter("prmIdWagerType", prmIdWagerType) :
                new ObjectParameter("prmIdWagerType", typeof(int));
    
            var prmPrevBalanceParameter = prmPrevBalance.HasValue ?
                new ObjectParameter("prmPrevBalance", prmPrevBalance) :
                new ObjectParameter("prmPrevBalance", typeof(decimal));
    
            var prmCurrBalanceParameter = prmCurrBalance.HasValue ?
                new ObjectParameter("prmCurrBalance", prmCurrBalance) :
                new ObjectParameter("prmCurrBalance", typeof(decimal));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_InsertBonusTransaction", prmIdWagerParameter, prmIdPlayerParameter, prmDescriptionParameter, prmTypeParameter, prmBonusPointsParameter, prmIdWagerTypeParameter, prmPrevBalanceParameter, prmCurrBalanceParameter, prmIdUserParameter);
        }
    
        public virtual int Player_PeriodicProcessing(Nullable<System.DateTime> prmDate, Nullable<short> prmIdUser)
        {
            var prmDateParameter = prmDate.HasValue ?
                new ObjectParameter("prmDate", prmDate) :
                new ObjectParameter("prmDate", typeof(System.DateTime));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_PeriodicProcessing", prmDateParameter, prmIdUserParameter);
        }
    
        public virtual int Player_Update(Nullable<int> prmIdPlayer, Nullable<short> prmIdLineType, Nullable<byte> prmIdOffice, Nullable<int> prmIdAgent, Nullable<short> prmIdCurrency, Nullable<short> prmIdGrouping, Nullable<short> prmIdSource, Nullable<short> prmIdProfile, Nullable<short> prmIdProfileLimits, Nullable<short> prmIdPlayerRate, Nullable<short> prmIdBook, Nullable<byte> prmIdTimeZone, Nullable<byte> prmIdLanguage, string prmScheduleStyle, string prmPlayer, string prmPassword, string prmName, string prmLastName, string prmLastName2, string prmTitle, string prmAddress1, string prmAddress2, string prmCity, string prmState, string prmCountry, string prmZip, string prmPhone, string prmFax, string prmEmail, string prmStatus, Nullable<bool> prmAutoPay, Nullable<bool> prmBalanceChecked, Nullable<decimal> prmCreditLimit, Nullable<bool> prmNoLimit, Nullable<decimal> prmTempCredit, Nullable<byte> prmSoftLimitPercent, Nullable<System.DateTime> prmTempCreditExpire, Nullable<bool> prmOnlineAccess, string prmOnlinePassword, string prmOnlineMessage, Nullable<decimal> prmOnlineMaxWager, Nullable<decimal> prmOnlineMinWager, Nullable<decimal> prmMaxWager, Nullable<decimal> prmMinWager, Nullable<short> prmChartPercent, Nullable<short> prmMasterChart, Nullable<bool> prmMaster, Nullable<byte> prmIdFlagMessageType, Nullable<byte> prmMaxActionPoints, string prmBonusPointsStatus, Nullable<System.DateTime> prmBonusPointsExpire, Nullable<System.DateTime> prmBonusPointsStart, string prmLineStyle, string prmNHLLine, string prmMLBLine, Nullable<byte> prmPitcherDefault, Nullable<bool> prmDuplicatedBets, Nullable<bool> prmDuplicatedBetsOnline, Nullable<bool> prmScheduleFB, Nullable<bool> prmScheduleBB, Nullable<bool> prmScheduleHK, Nullable<bool> prmScheduleBS, Nullable<decimal> prmSettledFigure, Nullable<bool> prmShowInTicker, Nullable<bool> prmEPOSPlayer, Nullable<bool> prmEnableSports, Nullable<bool> prmEnableCasino, Nullable<bool> prmEnableHorses, Nullable<bool> prmEnableCards, Nullable<System.DateTime> prmDateOfBirth, string prmSignUpIP, string prmSecQuestion, string prmSecAnswer, Nullable<bool> prmHoldBets, Nullable<byte> prmHoldDelay, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmIdSourceParameter = prmIdSource.HasValue ?
                new ObjectParameter("prmIdSource", prmIdSource) :
                new ObjectParameter("prmIdSource", typeof(short));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdProfileLimitsParameter = prmIdProfileLimits.HasValue ?
                new ObjectParameter("prmIdProfileLimits", prmIdProfileLimits) :
                new ObjectParameter("prmIdProfileLimits", typeof(short));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdTimeZoneParameter = prmIdTimeZone.HasValue ?
                new ObjectParameter("prmIdTimeZone", prmIdTimeZone) :
                new ObjectParameter("prmIdTimeZone", typeof(byte));
    
            var prmIdLanguageParameter = prmIdLanguage.HasValue ?
                new ObjectParameter("prmIdLanguage", prmIdLanguage) :
                new ObjectParameter("prmIdLanguage", typeof(byte));
    
            var prmScheduleStyleParameter = prmScheduleStyle != null ?
                new ObjectParameter("prmScheduleStyle", prmScheduleStyle) :
                new ObjectParameter("prmScheduleStyle", typeof(string));
    
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmLastName2Parameter = prmLastName2 != null ?
                new ObjectParameter("prmLastName2", prmLastName2) :
                new ObjectParameter("prmLastName2", typeof(string));
    
            var prmTitleParameter = prmTitle != null ?
                new ObjectParameter("prmTitle", prmTitle) :
                new ObjectParameter("prmTitle", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmStatusParameter = prmStatus != null ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(string));
    
            var prmAutoPayParameter = prmAutoPay.HasValue ?
                new ObjectParameter("prmAutoPay", prmAutoPay) :
                new ObjectParameter("prmAutoPay", typeof(bool));
    
            var prmBalanceCheckedParameter = prmBalanceChecked.HasValue ?
                new ObjectParameter("prmBalanceChecked", prmBalanceChecked) :
                new ObjectParameter("prmBalanceChecked", typeof(bool));
    
            var prmCreditLimitParameter = prmCreditLimit.HasValue ?
                new ObjectParameter("prmCreditLimit", prmCreditLimit) :
                new ObjectParameter("prmCreditLimit", typeof(decimal));
    
            var prmNoLimitParameter = prmNoLimit.HasValue ?
                new ObjectParameter("prmNoLimit", prmNoLimit) :
                new ObjectParameter("prmNoLimit", typeof(bool));
    
            var prmTempCreditParameter = prmTempCredit.HasValue ?
                new ObjectParameter("prmTempCredit", prmTempCredit) :
                new ObjectParameter("prmTempCredit", typeof(decimal));
    
            var prmSoftLimitPercentParameter = prmSoftLimitPercent.HasValue ?
                new ObjectParameter("prmSoftLimitPercent", prmSoftLimitPercent) :
                new ObjectParameter("prmSoftLimitPercent", typeof(byte));
    
            var prmTempCreditExpireParameter = prmTempCreditExpire.HasValue ?
                new ObjectParameter("prmTempCreditExpire", prmTempCreditExpire) :
                new ObjectParameter("prmTempCreditExpire", typeof(System.DateTime));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlinePasswordParameter = prmOnlinePassword != null ?
                new ObjectParameter("prmOnlinePassword", prmOnlinePassword) :
                new ObjectParameter("prmOnlinePassword", typeof(string));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmOnlineMaxWagerParameter = prmOnlineMaxWager.HasValue ?
                new ObjectParameter("prmOnlineMaxWager", prmOnlineMaxWager) :
                new ObjectParameter("prmOnlineMaxWager", typeof(decimal));
    
            var prmOnlineMinWagerParameter = prmOnlineMinWager.HasValue ?
                new ObjectParameter("prmOnlineMinWager", prmOnlineMinWager) :
                new ObjectParameter("prmOnlineMinWager", typeof(decimal));
    
            var prmMaxWagerParameter = prmMaxWager.HasValue ?
                new ObjectParameter("prmMaxWager", prmMaxWager) :
                new ObjectParameter("prmMaxWager", typeof(decimal));
    
            var prmMinWagerParameter = prmMinWager.HasValue ?
                new ObjectParameter("prmMinWager", prmMinWager) :
                new ObjectParameter("prmMinWager", typeof(decimal));
    
            var prmChartPercentParameter = prmChartPercent.HasValue ?
                new ObjectParameter("prmChartPercent", prmChartPercent) :
                new ObjectParameter("prmChartPercent", typeof(short));
    
            var prmMasterChartParameter = prmMasterChart.HasValue ?
                new ObjectParameter("prmMasterChart", prmMasterChart) :
                new ObjectParameter("prmMasterChart", typeof(short));
    
            var prmMasterParameter = prmMaster.HasValue ?
                new ObjectParameter("prmMaster", prmMaster) :
                new ObjectParameter("prmMaster", typeof(bool));
    
            var prmIdFlagMessageTypeParameter = prmIdFlagMessageType.HasValue ?
                new ObjectParameter("prmIdFlagMessageType", prmIdFlagMessageType) :
                new ObjectParameter("prmIdFlagMessageType", typeof(byte));
    
            var prmMaxActionPointsParameter = prmMaxActionPoints.HasValue ?
                new ObjectParameter("prmMaxActionPoints", prmMaxActionPoints) :
                new ObjectParameter("prmMaxActionPoints", typeof(byte));
    
            var prmBonusPointsStatusParameter = prmBonusPointsStatus != null ?
                new ObjectParameter("prmBonusPointsStatus", prmBonusPointsStatus) :
                new ObjectParameter("prmBonusPointsStatus", typeof(string));
    
            var prmBonusPointsExpireParameter = prmBonusPointsExpire.HasValue ?
                new ObjectParameter("prmBonusPointsExpire", prmBonusPointsExpire) :
                new ObjectParameter("prmBonusPointsExpire", typeof(System.DateTime));
    
            var prmBonusPointsStartParameter = prmBonusPointsStart.HasValue ?
                new ObjectParameter("prmBonusPointsStart", prmBonusPointsStart) :
                new ObjectParameter("prmBonusPointsStart", typeof(System.DateTime));
    
            var prmLineStyleParameter = prmLineStyle != null ?
                new ObjectParameter("prmLineStyle", prmLineStyle) :
                new ObjectParameter("prmLineStyle", typeof(string));
    
            var prmNHLLineParameter = prmNHLLine != null ?
                new ObjectParameter("prmNHLLine", prmNHLLine) :
                new ObjectParameter("prmNHLLine", typeof(string));
    
            var prmMLBLineParameter = prmMLBLine != null ?
                new ObjectParameter("prmMLBLine", prmMLBLine) :
                new ObjectParameter("prmMLBLine", typeof(string));
    
            var prmPitcherDefaultParameter = prmPitcherDefault.HasValue ?
                new ObjectParameter("prmPitcherDefault", prmPitcherDefault) :
                new ObjectParameter("prmPitcherDefault", typeof(byte));
    
            var prmDuplicatedBetsParameter = prmDuplicatedBets.HasValue ?
                new ObjectParameter("prmDuplicatedBets", prmDuplicatedBets) :
                new ObjectParameter("prmDuplicatedBets", typeof(bool));
    
            var prmDuplicatedBetsOnlineParameter = prmDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmDuplicatedBetsOnline", prmDuplicatedBetsOnline) :
                new ObjectParameter("prmDuplicatedBetsOnline", typeof(bool));
    
            var prmScheduleFBParameter = prmScheduleFB.HasValue ?
                new ObjectParameter("prmScheduleFB", prmScheduleFB) :
                new ObjectParameter("prmScheduleFB", typeof(bool));
    
            var prmScheduleBBParameter = prmScheduleBB.HasValue ?
                new ObjectParameter("prmScheduleBB", prmScheduleBB) :
                new ObjectParameter("prmScheduleBB", typeof(bool));
    
            var prmScheduleHKParameter = prmScheduleHK.HasValue ?
                new ObjectParameter("prmScheduleHK", prmScheduleHK) :
                new ObjectParameter("prmScheduleHK", typeof(bool));
    
            var prmScheduleBSParameter = prmScheduleBS.HasValue ?
                new ObjectParameter("prmScheduleBS", prmScheduleBS) :
                new ObjectParameter("prmScheduleBS", typeof(bool));
    
            var prmSettledFigureParameter = prmSettledFigure.HasValue ?
                new ObjectParameter("prmSettledFigure", prmSettledFigure) :
                new ObjectParameter("prmSettledFigure", typeof(decimal));
    
            var prmShowInTickerParameter = prmShowInTicker.HasValue ?
                new ObjectParameter("prmShowInTicker", prmShowInTicker) :
                new ObjectParameter("prmShowInTicker", typeof(bool));
    
            var prmEPOSPlayerParameter = prmEPOSPlayer.HasValue ?
                new ObjectParameter("prmEPOSPlayer", prmEPOSPlayer) :
                new ObjectParameter("prmEPOSPlayer", typeof(bool));
    
            var prmEnableSportsParameter = prmEnableSports.HasValue ?
                new ObjectParameter("prmEnableSports", prmEnableSports) :
                new ObjectParameter("prmEnableSports", typeof(bool));
    
            var prmEnableCasinoParameter = prmEnableCasino.HasValue ?
                new ObjectParameter("prmEnableCasino", prmEnableCasino) :
                new ObjectParameter("prmEnableCasino", typeof(bool));
    
            var prmEnableHorsesParameter = prmEnableHorses.HasValue ?
                new ObjectParameter("prmEnableHorses", prmEnableHorses) :
                new ObjectParameter("prmEnableHorses", typeof(bool));
    
            var prmEnableCardsParameter = prmEnableCards.HasValue ?
                new ObjectParameter("prmEnableCards", prmEnableCards) :
                new ObjectParameter("prmEnableCards", typeof(bool));
    
            var prmDateOfBirthParameter = prmDateOfBirth.HasValue ?
                new ObjectParameter("prmDateOfBirth", prmDateOfBirth) :
                new ObjectParameter("prmDateOfBirth", typeof(System.DateTime));
    
            var prmSignUpIPParameter = prmSignUpIP != null ?
                new ObjectParameter("prmSignUpIP", prmSignUpIP) :
                new ObjectParameter("prmSignUpIP", typeof(string));
    
            var prmSecQuestionParameter = prmSecQuestion != null ?
                new ObjectParameter("prmSecQuestion", prmSecQuestion) :
                new ObjectParameter("prmSecQuestion", typeof(string));
    
            var prmSecAnswerParameter = prmSecAnswer != null ?
                new ObjectParameter("prmSecAnswer", prmSecAnswer) :
                new ObjectParameter("prmSecAnswer", typeof(string));
    
            var prmHoldBetsParameter = prmHoldBets.HasValue ?
                new ObjectParameter("prmHoldBets", prmHoldBets) :
                new ObjectParameter("prmHoldBets", typeof(bool));
    
            var prmHoldDelayParameter = prmHoldDelay.HasValue ?
                new ObjectParameter("prmHoldDelay", prmHoldDelay) :
                new ObjectParameter("prmHoldDelay", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Update", prmIdPlayerParameter, prmIdLineTypeParameter, prmIdOfficeParameter, prmIdAgentParameter, prmIdCurrencyParameter, prmIdGroupingParameter, prmIdSourceParameter, prmIdProfileParameter, prmIdProfileLimitsParameter, prmIdPlayerRateParameter, prmIdBookParameter, prmIdTimeZoneParameter, prmIdLanguageParameter, prmScheduleStyleParameter, prmPlayerParameter, prmPasswordParameter, prmNameParameter, prmLastNameParameter, prmLastName2Parameter, prmTitleParameter, prmAddress1Parameter, prmAddress2Parameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmZipParameter, prmPhoneParameter, prmFaxParameter, prmEmailParameter, prmStatusParameter, prmAutoPayParameter, prmBalanceCheckedParameter, prmCreditLimitParameter, prmNoLimitParameter, prmTempCreditParameter, prmSoftLimitPercentParameter, prmTempCreditExpireParameter, prmOnlineAccessParameter, prmOnlinePasswordParameter, prmOnlineMessageParameter, prmOnlineMaxWagerParameter, prmOnlineMinWagerParameter, prmMaxWagerParameter, prmMinWagerParameter, prmChartPercentParameter, prmMasterChartParameter, prmMasterParameter, prmIdFlagMessageTypeParameter, prmMaxActionPointsParameter, prmBonusPointsStatusParameter, prmBonusPointsExpireParameter, prmBonusPointsStartParameter, prmLineStyleParameter, prmNHLLineParameter, prmMLBLineParameter, prmPitcherDefaultParameter, prmDuplicatedBetsParameter, prmDuplicatedBetsOnlineParameter, prmScheduleFBParameter, prmScheduleBBParameter, prmScheduleHKParameter, prmScheduleBSParameter, prmSettledFigureParameter, prmShowInTickerParameter, prmEPOSPlayerParameter, prmEnableSportsParameter, prmEnableCasinoParameter, prmEnableHorsesParameter, prmEnableCardsParameter, prmDateOfBirthParameter, prmSignUpIPParameter, prmSecQuestionParameter, prmSecAnswerParameter, prmHoldBetsParameter, prmHoldDelayParameter, prmIdUserParameter);
        }
    
        public virtual int Player_UpdateByFields(Nullable<int> prmIdPlayer, Nullable<bool> prmChangeIdLineType, Nullable<short> prmIdLineType, Nullable<bool> prmChangeIdOffice, Nullable<byte> prmIdOffice, Nullable<bool> prmChangeIdAgent, Nullable<int> prmIdAgent, Nullable<bool> prmChangeIdCurrency, Nullable<short> prmIdCurrency, Nullable<bool> prmChangeIdGrouping, Nullable<short> prmIdGrouping, Nullable<bool> prmChangeIdSource, Nullable<short> prmIdSource, Nullable<bool> prmChangeIdProfile, Nullable<short> prmIdProfile, Nullable<bool> prmChangeIdProfileLimits, Nullable<short> prmIdProfileLimits, Nullable<bool> prmChangeIdPlayerRate, Nullable<short> prmIdPlayerRate, Nullable<bool> prmChangeIdBook, Nullable<short> prmIdBook, Nullable<bool> prmChangeIdTimeZone, Nullable<byte> prmIdTimeZone, Nullable<bool> prmChangeIdLanguage, Nullable<byte> prmIdLanguage, Nullable<bool> prmChangeScheduleStyle, string prmScheduleStyle, Nullable<bool> prmChangeAddress1, string prmAddress1, Nullable<bool> prmChangeAddress2, string prmAddress2, Nullable<bool> prmChangeCity, string prmCity, Nullable<bool> prmChangeState, string prmState, Nullable<bool> prmChangeCountry, string prmCountry, Nullable<bool> prmChangeZip, string prmZip, Nullable<bool> prmChangePhone, string prmPhone, Nullable<bool> prmChangeFax, string prmFax, Nullable<bool> prmChangeEmail, string prmEmail, Nullable<bool> prmChangeStatus, string prmStatus, Nullable<bool> prmChangeAutoPay, Nullable<bool> prmAutoPay, Nullable<bool> prmChangeBalanceChecked, Nullable<bool> prmBalanceChecked, Nullable<bool> prmChangeCreditLimit, Nullable<decimal> prmCreditLimit, Nullable<bool> prmChangeNoLimit, Nullable<bool> prmNoLimit, Nullable<bool> prmChangeTempCredit, Nullable<decimal> prmTempCredit, Nullable<bool> prmChangeSoftLimitPercent, Nullable<byte> prmSoftLimitPercent, Nullable<bool> prmChangeTempCreditExpire, Nullable<System.DateTime> prmTempCreditExpire, Nullable<bool> prmChangeOnlineAccess, Nullable<bool> prmOnlineAccess, Nullable<bool> prmChangeOnlineMessage, string prmOnlineMessage, Nullable<bool> prmChangeOnlineMaxWager, Nullable<decimal> prmOnlineMaxWager, Nullable<bool> prmChangeOnlineMinWager, Nullable<decimal> prmOnlineMinWager, Nullable<bool> prmChangeMaxWager, Nullable<decimal> prmMaxWager, Nullable<bool> prmChangeMinWager, Nullable<decimal> prmMinWager, Nullable<bool> prmChangeChartPercent, Nullable<short> prmChartPercent, Nullable<bool> prmChangeMasterChart, Nullable<short> prmMasterChart, Nullable<bool> prmChangeMaster, Nullable<bool> prmMaster, Nullable<bool> prmChangeFlagMessage, string prmFlagMessage, Nullable<bool> prmChangeIdFlagMessageType, Nullable<byte> prmIdFlagMessageType, Nullable<bool> prmChangeMaxActionPoints, Nullable<byte> prmMaxActionPoints, Nullable<bool> prmChangeBonusPointsStatus, string prmBonusPointsStatus, Nullable<bool> prmChangeBonusPointsExpire, Nullable<System.DateTime> prmBonusPointsExpire, Nullable<bool> prmChangeBonusPointsStart, Nullable<System.DateTime> prmBonusPointsStart, Nullable<bool> prmChangeLineStyle, string prmLineStyle, Nullable<bool> prmChangeNHLLine, string prmNHLLine, Nullable<bool> prmChangeMLBLine, string prmMLBLine, Nullable<bool> prmChangePitcherDefault, Nullable<byte> prmPitcherDefault, Nullable<bool> prmChangeDuplicatedBets, Nullable<bool> prmDuplicatedBets, Nullable<bool> prmChangeDuplicatedBetsOnline, Nullable<bool> prmDuplicatedBetsOnline, Nullable<bool> prmChangeFreePlayMessage, string prmFreePlayMessage, Nullable<bool> prmChangeScheduleFB, Nullable<bool> prmScheduleFB, Nullable<bool> prmChangeScheduleBB, Nullable<bool> prmScheduleBB, Nullable<bool> prmChangeScheduleHK, Nullable<bool> prmScheduleHK, Nullable<bool> prmChangeScheduleBS, Nullable<bool> prmScheduleBS, Nullable<bool> prmChangeSettledFigure, Nullable<decimal> prmSettledFigure, Nullable<bool> prmChangeShowInTicker, Nullable<bool> prmShowInTicker, Nullable<bool> prmChangeEPOSPlayer, Nullable<bool> prmEPOSPlayer, Nullable<bool> prmChangeEnableSports, Nullable<bool> prmEnableSports, Nullable<bool> prmChangeEnableCasino, Nullable<bool> prmEnableCasino, Nullable<bool> prmChangeEnableHorses, Nullable<bool> prmEnableHorses, Nullable<bool> prmChangeEnableCards, Nullable<bool> prmEnableCards, Nullable<bool> prmChangeDateOfBirth, Nullable<System.DateTime> prmDateOfBirth, Nullable<bool> prmChangeHoldHoldBets, Nullable<bool> prmHoldBets, Nullable<bool> prmChangeHoldDelay, Nullable<byte> prmHoldDelay, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmChangeIdLineTypeParameter = prmChangeIdLineType.HasValue ?
                new ObjectParameter("prmChangeIdLineType", prmChangeIdLineType) :
                new ObjectParameter("prmChangeIdLineType", typeof(bool));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmChangeIdOfficeParameter = prmChangeIdOffice.HasValue ?
                new ObjectParameter("prmChangeIdOffice", prmChangeIdOffice) :
                new ObjectParameter("prmChangeIdOffice", typeof(bool));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmChangeIdAgentParameter = prmChangeIdAgent.HasValue ?
                new ObjectParameter("prmChangeIdAgent", prmChangeIdAgent) :
                new ObjectParameter("prmChangeIdAgent", typeof(bool));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmChangeIdCurrencyParameter = prmChangeIdCurrency.HasValue ?
                new ObjectParameter("prmChangeIdCurrency", prmChangeIdCurrency) :
                new ObjectParameter("prmChangeIdCurrency", typeof(bool));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmChangeIdGroupingParameter = prmChangeIdGrouping.HasValue ?
                new ObjectParameter("prmChangeIdGrouping", prmChangeIdGrouping) :
                new ObjectParameter("prmChangeIdGrouping", typeof(bool));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmChangeIdSourceParameter = prmChangeIdSource.HasValue ?
                new ObjectParameter("prmChangeIdSource", prmChangeIdSource) :
                new ObjectParameter("prmChangeIdSource", typeof(bool));
    
            var prmIdSourceParameter = prmIdSource.HasValue ?
                new ObjectParameter("prmIdSource", prmIdSource) :
                new ObjectParameter("prmIdSource", typeof(short));
    
            var prmChangeIdProfileParameter = prmChangeIdProfile.HasValue ?
                new ObjectParameter("prmChangeIdProfile", prmChangeIdProfile) :
                new ObjectParameter("prmChangeIdProfile", typeof(bool));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmChangeIdProfileLimitsParameter = prmChangeIdProfileLimits.HasValue ?
                new ObjectParameter("prmChangeIdProfileLimits", prmChangeIdProfileLimits) :
                new ObjectParameter("prmChangeIdProfileLimits", typeof(bool));
    
            var prmIdProfileLimitsParameter = prmIdProfileLimits.HasValue ?
                new ObjectParameter("prmIdProfileLimits", prmIdProfileLimits) :
                new ObjectParameter("prmIdProfileLimits", typeof(short));
    
            var prmChangeIdPlayerRateParameter = prmChangeIdPlayerRate.HasValue ?
                new ObjectParameter("prmChangeIdPlayerRate", prmChangeIdPlayerRate) :
                new ObjectParameter("prmChangeIdPlayerRate", typeof(bool));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(short));
    
            var prmChangeIdBookParameter = prmChangeIdBook.HasValue ?
                new ObjectParameter("prmChangeIdBook", prmChangeIdBook) :
                new ObjectParameter("prmChangeIdBook", typeof(bool));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmChangeIdTimeZoneParameter = prmChangeIdTimeZone.HasValue ?
                new ObjectParameter("prmChangeIdTimeZone", prmChangeIdTimeZone) :
                new ObjectParameter("prmChangeIdTimeZone", typeof(bool));
    
            var prmIdTimeZoneParameter = prmIdTimeZone.HasValue ?
                new ObjectParameter("prmIdTimeZone", prmIdTimeZone) :
                new ObjectParameter("prmIdTimeZone", typeof(byte));
    
            var prmChangeIdLanguageParameter = prmChangeIdLanguage.HasValue ?
                new ObjectParameter("prmChangeIdLanguage", prmChangeIdLanguage) :
                new ObjectParameter("prmChangeIdLanguage", typeof(bool));
    
            var prmIdLanguageParameter = prmIdLanguage.HasValue ?
                new ObjectParameter("prmIdLanguage", prmIdLanguage) :
                new ObjectParameter("prmIdLanguage", typeof(byte));
    
            var prmChangeScheduleStyleParameter = prmChangeScheduleStyle.HasValue ?
                new ObjectParameter("prmChangeScheduleStyle", prmChangeScheduleStyle) :
                new ObjectParameter("prmChangeScheduleStyle", typeof(bool));
    
            var prmScheduleStyleParameter = prmScheduleStyle != null ?
                new ObjectParameter("prmScheduleStyle", prmScheduleStyle) :
                new ObjectParameter("prmScheduleStyle", typeof(string));
    
            var prmChangeAddress1Parameter = prmChangeAddress1.HasValue ?
                new ObjectParameter("prmChangeAddress1", prmChangeAddress1) :
                new ObjectParameter("prmChangeAddress1", typeof(bool));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmChangeAddress2Parameter = prmChangeAddress2.HasValue ?
                new ObjectParameter("prmChangeAddress2", prmChangeAddress2) :
                new ObjectParameter("prmChangeAddress2", typeof(bool));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmChangeCityParameter = prmChangeCity.HasValue ?
                new ObjectParameter("prmChangeCity", prmChangeCity) :
                new ObjectParameter("prmChangeCity", typeof(bool));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmChangeStateParameter = prmChangeState.HasValue ?
                new ObjectParameter("prmChangeState", prmChangeState) :
                new ObjectParameter("prmChangeState", typeof(bool));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmChangeCountryParameter = prmChangeCountry.HasValue ?
                new ObjectParameter("prmChangeCountry", prmChangeCountry) :
                new ObjectParameter("prmChangeCountry", typeof(bool));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmChangeZipParameter = prmChangeZip.HasValue ?
                new ObjectParameter("prmChangeZip", prmChangeZip) :
                new ObjectParameter("prmChangeZip", typeof(bool));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmChangePhoneParameter = prmChangePhone.HasValue ?
                new ObjectParameter("prmChangePhone", prmChangePhone) :
                new ObjectParameter("prmChangePhone", typeof(bool));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmChangeFaxParameter = prmChangeFax.HasValue ?
                new ObjectParameter("prmChangeFax", prmChangeFax) :
                new ObjectParameter("prmChangeFax", typeof(bool));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmChangeEmailParameter = prmChangeEmail.HasValue ?
                new ObjectParameter("prmChangeEmail", prmChangeEmail) :
                new ObjectParameter("prmChangeEmail", typeof(bool));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmChangeStatusParameter = prmChangeStatus.HasValue ?
                new ObjectParameter("prmChangeStatus", prmChangeStatus) :
                new ObjectParameter("prmChangeStatus", typeof(bool));
    
            var prmStatusParameter = prmStatus != null ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(string));
    
            var prmChangeAutoPayParameter = prmChangeAutoPay.HasValue ?
                new ObjectParameter("prmChangeAutoPay", prmChangeAutoPay) :
                new ObjectParameter("prmChangeAutoPay", typeof(bool));
    
            var prmAutoPayParameter = prmAutoPay.HasValue ?
                new ObjectParameter("prmAutoPay", prmAutoPay) :
                new ObjectParameter("prmAutoPay", typeof(bool));
    
            var prmChangeBalanceCheckedParameter = prmChangeBalanceChecked.HasValue ?
                new ObjectParameter("prmChangeBalanceChecked", prmChangeBalanceChecked) :
                new ObjectParameter("prmChangeBalanceChecked", typeof(bool));
    
            var prmBalanceCheckedParameter = prmBalanceChecked.HasValue ?
                new ObjectParameter("prmBalanceChecked", prmBalanceChecked) :
                new ObjectParameter("prmBalanceChecked", typeof(bool));
    
            var prmChangeCreditLimitParameter = prmChangeCreditLimit.HasValue ?
                new ObjectParameter("prmChangeCreditLimit", prmChangeCreditLimit) :
                new ObjectParameter("prmChangeCreditLimit", typeof(bool));
    
            var prmCreditLimitParameter = prmCreditLimit.HasValue ?
                new ObjectParameter("prmCreditLimit", prmCreditLimit) :
                new ObjectParameter("prmCreditLimit", typeof(decimal));
    
            var prmChangeNoLimitParameter = prmChangeNoLimit.HasValue ?
                new ObjectParameter("prmChangeNoLimit", prmChangeNoLimit) :
                new ObjectParameter("prmChangeNoLimit", typeof(bool));
    
            var prmNoLimitParameter = prmNoLimit.HasValue ?
                new ObjectParameter("prmNoLimit", prmNoLimit) :
                new ObjectParameter("prmNoLimit", typeof(bool));
    
            var prmChangeTempCreditParameter = prmChangeTempCredit.HasValue ?
                new ObjectParameter("prmChangeTempCredit", prmChangeTempCredit) :
                new ObjectParameter("prmChangeTempCredit", typeof(bool));
    
            var prmTempCreditParameter = prmTempCredit.HasValue ?
                new ObjectParameter("prmTempCredit", prmTempCredit) :
                new ObjectParameter("prmTempCredit", typeof(decimal));
    
            var prmChangeSoftLimitPercentParameter = prmChangeSoftLimitPercent.HasValue ?
                new ObjectParameter("prmChangeSoftLimitPercent", prmChangeSoftLimitPercent) :
                new ObjectParameter("prmChangeSoftLimitPercent", typeof(bool));
    
            var prmSoftLimitPercentParameter = prmSoftLimitPercent.HasValue ?
                new ObjectParameter("prmSoftLimitPercent", prmSoftLimitPercent) :
                new ObjectParameter("prmSoftLimitPercent", typeof(byte));
    
            var prmChangeTempCreditExpireParameter = prmChangeTempCreditExpire.HasValue ?
                new ObjectParameter("prmChangeTempCreditExpire", prmChangeTempCreditExpire) :
                new ObjectParameter("prmChangeTempCreditExpire", typeof(bool));
    
            var prmTempCreditExpireParameter = prmTempCreditExpire.HasValue ?
                new ObjectParameter("prmTempCreditExpire", prmTempCreditExpire) :
                new ObjectParameter("prmTempCreditExpire", typeof(System.DateTime));
    
            var prmChangeOnlineAccessParameter = prmChangeOnlineAccess.HasValue ?
                new ObjectParameter("prmChangeOnlineAccess", prmChangeOnlineAccess) :
                new ObjectParameter("prmChangeOnlineAccess", typeof(bool));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmChangeOnlineMessageParameter = prmChangeOnlineMessage.HasValue ?
                new ObjectParameter("prmChangeOnlineMessage", prmChangeOnlineMessage) :
                new ObjectParameter("prmChangeOnlineMessage", typeof(bool));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmChangeOnlineMaxWagerParameter = prmChangeOnlineMaxWager.HasValue ?
                new ObjectParameter("prmChangeOnlineMaxWager", prmChangeOnlineMaxWager) :
                new ObjectParameter("prmChangeOnlineMaxWager", typeof(bool));
    
            var prmOnlineMaxWagerParameter = prmOnlineMaxWager.HasValue ?
                new ObjectParameter("prmOnlineMaxWager", prmOnlineMaxWager) :
                new ObjectParameter("prmOnlineMaxWager", typeof(decimal));
    
            var prmChangeOnlineMinWagerParameter = prmChangeOnlineMinWager.HasValue ?
                new ObjectParameter("prmChangeOnlineMinWager", prmChangeOnlineMinWager) :
                new ObjectParameter("prmChangeOnlineMinWager", typeof(bool));
    
            var prmOnlineMinWagerParameter = prmOnlineMinWager.HasValue ?
                new ObjectParameter("prmOnlineMinWager", prmOnlineMinWager) :
                new ObjectParameter("prmOnlineMinWager", typeof(decimal));
    
            var prmChangeMaxWagerParameter = prmChangeMaxWager.HasValue ?
                new ObjectParameter("prmChangeMaxWager", prmChangeMaxWager) :
                new ObjectParameter("prmChangeMaxWager", typeof(bool));
    
            var prmMaxWagerParameter = prmMaxWager.HasValue ?
                new ObjectParameter("prmMaxWager", prmMaxWager) :
                new ObjectParameter("prmMaxWager", typeof(decimal));
    
            var prmChangeMinWagerParameter = prmChangeMinWager.HasValue ?
                new ObjectParameter("prmChangeMinWager", prmChangeMinWager) :
                new ObjectParameter("prmChangeMinWager", typeof(bool));
    
            var prmMinWagerParameter = prmMinWager.HasValue ?
                new ObjectParameter("prmMinWager", prmMinWager) :
                new ObjectParameter("prmMinWager", typeof(decimal));
    
            var prmChangeChartPercentParameter = prmChangeChartPercent.HasValue ?
                new ObjectParameter("prmChangeChartPercent", prmChangeChartPercent) :
                new ObjectParameter("prmChangeChartPercent", typeof(bool));
    
            var prmChartPercentParameter = prmChartPercent.HasValue ?
                new ObjectParameter("prmChartPercent", prmChartPercent) :
                new ObjectParameter("prmChartPercent", typeof(short));
    
            var prmChangeMasterChartParameter = prmChangeMasterChart.HasValue ?
                new ObjectParameter("prmChangeMasterChart", prmChangeMasterChart) :
                new ObjectParameter("prmChangeMasterChart", typeof(bool));
    
            var prmMasterChartParameter = prmMasterChart.HasValue ?
                new ObjectParameter("prmMasterChart", prmMasterChart) :
                new ObjectParameter("prmMasterChart", typeof(short));
    
            var prmChangeMasterParameter = prmChangeMaster.HasValue ?
                new ObjectParameter("prmChangeMaster", prmChangeMaster) :
                new ObjectParameter("prmChangeMaster", typeof(bool));
    
            var prmMasterParameter = prmMaster.HasValue ?
                new ObjectParameter("prmMaster", prmMaster) :
                new ObjectParameter("prmMaster", typeof(bool));
    
            var prmChangeFlagMessageParameter = prmChangeFlagMessage.HasValue ?
                new ObjectParameter("prmChangeFlagMessage", prmChangeFlagMessage) :
                new ObjectParameter("prmChangeFlagMessage", typeof(bool));
    
            var prmFlagMessageParameter = prmFlagMessage != null ?
                new ObjectParameter("prmFlagMessage", prmFlagMessage) :
                new ObjectParameter("prmFlagMessage", typeof(string));
    
            var prmChangeIdFlagMessageTypeParameter = prmChangeIdFlagMessageType.HasValue ?
                new ObjectParameter("prmChangeIdFlagMessageType", prmChangeIdFlagMessageType) :
                new ObjectParameter("prmChangeIdFlagMessageType", typeof(bool));
    
            var prmIdFlagMessageTypeParameter = prmIdFlagMessageType.HasValue ?
                new ObjectParameter("prmIdFlagMessageType", prmIdFlagMessageType) :
                new ObjectParameter("prmIdFlagMessageType", typeof(byte));
    
            var prmChangeMaxActionPointsParameter = prmChangeMaxActionPoints.HasValue ?
                new ObjectParameter("prmChangeMaxActionPoints", prmChangeMaxActionPoints) :
                new ObjectParameter("prmChangeMaxActionPoints", typeof(bool));
    
            var prmMaxActionPointsParameter = prmMaxActionPoints.HasValue ?
                new ObjectParameter("prmMaxActionPoints", prmMaxActionPoints) :
                new ObjectParameter("prmMaxActionPoints", typeof(byte));
    
            var prmChangeBonusPointsStatusParameter = prmChangeBonusPointsStatus.HasValue ?
                new ObjectParameter("prmChangeBonusPointsStatus", prmChangeBonusPointsStatus) :
                new ObjectParameter("prmChangeBonusPointsStatus", typeof(bool));
    
            var prmBonusPointsStatusParameter = prmBonusPointsStatus != null ?
                new ObjectParameter("prmBonusPointsStatus", prmBonusPointsStatus) :
                new ObjectParameter("prmBonusPointsStatus", typeof(string));
    
            var prmChangeBonusPointsExpireParameter = prmChangeBonusPointsExpire.HasValue ?
                new ObjectParameter("prmChangeBonusPointsExpire", prmChangeBonusPointsExpire) :
                new ObjectParameter("prmChangeBonusPointsExpire", typeof(bool));
    
            var prmBonusPointsExpireParameter = prmBonusPointsExpire.HasValue ?
                new ObjectParameter("prmBonusPointsExpire", prmBonusPointsExpire) :
                new ObjectParameter("prmBonusPointsExpire", typeof(System.DateTime));
    
            var prmChangeBonusPointsStartParameter = prmChangeBonusPointsStart.HasValue ?
                new ObjectParameter("prmChangeBonusPointsStart", prmChangeBonusPointsStart) :
                new ObjectParameter("prmChangeBonusPointsStart", typeof(bool));
    
            var prmBonusPointsStartParameter = prmBonusPointsStart.HasValue ?
                new ObjectParameter("prmBonusPointsStart", prmBonusPointsStart) :
                new ObjectParameter("prmBonusPointsStart", typeof(System.DateTime));
    
            var prmChangeLineStyleParameter = prmChangeLineStyle.HasValue ?
                new ObjectParameter("prmChangeLineStyle", prmChangeLineStyle) :
                new ObjectParameter("prmChangeLineStyle", typeof(bool));
    
            var prmLineStyleParameter = prmLineStyle != null ?
                new ObjectParameter("prmLineStyle", prmLineStyle) :
                new ObjectParameter("prmLineStyle", typeof(string));
    
            var prmChangeNHLLineParameter = prmChangeNHLLine.HasValue ?
                new ObjectParameter("prmChangeNHLLine", prmChangeNHLLine) :
                new ObjectParameter("prmChangeNHLLine", typeof(bool));
    
            var prmNHLLineParameter = prmNHLLine != null ?
                new ObjectParameter("prmNHLLine", prmNHLLine) :
                new ObjectParameter("prmNHLLine", typeof(string));
    
            var prmChangeMLBLineParameter = prmChangeMLBLine.HasValue ?
                new ObjectParameter("prmChangeMLBLine", prmChangeMLBLine) :
                new ObjectParameter("prmChangeMLBLine", typeof(bool));
    
            var prmMLBLineParameter = prmMLBLine != null ?
                new ObjectParameter("prmMLBLine", prmMLBLine) :
                new ObjectParameter("prmMLBLine", typeof(string));
    
            var prmChangePitcherDefaultParameter = prmChangePitcherDefault.HasValue ?
                new ObjectParameter("prmChangePitcherDefault", prmChangePitcherDefault) :
                new ObjectParameter("prmChangePitcherDefault", typeof(bool));
    
            var prmPitcherDefaultParameter = prmPitcherDefault.HasValue ?
                new ObjectParameter("prmPitcherDefault", prmPitcherDefault) :
                new ObjectParameter("prmPitcherDefault", typeof(byte));
    
            var prmChangeDuplicatedBetsParameter = prmChangeDuplicatedBets.HasValue ?
                new ObjectParameter("prmChangeDuplicatedBets", prmChangeDuplicatedBets) :
                new ObjectParameter("prmChangeDuplicatedBets", typeof(bool));
    
            var prmDuplicatedBetsParameter = prmDuplicatedBets.HasValue ?
                new ObjectParameter("prmDuplicatedBets", prmDuplicatedBets) :
                new ObjectParameter("prmDuplicatedBets", typeof(bool));
    
            var prmChangeDuplicatedBetsOnlineParameter = prmChangeDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmChangeDuplicatedBetsOnline", prmChangeDuplicatedBetsOnline) :
                new ObjectParameter("prmChangeDuplicatedBetsOnline", typeof(bool));
    
            var prmDuplicatedBetsOnlineParameter = prmDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmDuplicatedBetsOnline", prmDuplicatedBetsOnline) :
                new ObjectParameter("prmDuplicatedBetsOnline", typeof(bool));
    
            var prmChangeFreePlayMessageParameter = prmChangeFreePlayMessage.HasValue ?
                new ObjectParameter("prmChangeFreePlayMessage", prmChangeFreePlayMessage) :
                new ObjectParameter("prmChangeFreePlayMessage", typeof(bool));
    
            var prmFreePlayMessageParameter = prmFreePlayMessage != null ?
                new ObjectParameter("prmFreePlayMessage", prmFreePlayMessage) :
                new ObjectParameter("prmFreePlayMessage", typeof(string));
    
            var prmChangeScheduleFBParameter = prmChangeScheduleFB.HasValue ?
                new ObjectParameter("prmChangeScheduleFB", prmChangeScheduleFB) :
                new ObjectParameter("prmChangeScheduleFB", typeof(bool));
    
            var prmScheduleFBParameter = prmScheduleFB.HasValue ?
                new ObjectParameter("prmScheduleFB", prmScheduleFB) :
                new ObjectParameter("prmScheduleFB", typeof(bool));
    
            var prmChangeScheduleBBParameter = prmChangeScheduleBB.HasValue ?
                new ObjectParameter("prmChangeScheduleBB", prmChangeScheduleBB) :
                new ObjectParameter("prmChangeScheduleBB", typeof(bool));
    
            var prmScheduleBBParameter = prmScheduleBB.HasValue ?
                new ObjectParameter("prmScheduleBB", prmScheduleBB) :
                new ObjectParameter("prmScheduleBB", typeof(bool));
    
            var prmChangeScheduleHKParameter = prmChangeScheduleHK.HasValue ?
                new ObjectParameter("prmChangeScheduleHK", prmChangeScheduleHK) :
                new ObjectParameter("prmChangeScheduleHK", typeof(bool));
    
            var prmScheduleHKParameter = prmScheduleHK.HasValue ?
                new ObjectParameter("prmScheduleHK", prmScheduleHK) :
                new ObjectParameter("prmScheduleHK", typeof(bool));
    
            var prmChangeScheduleBSParameter = prmChangeScheduleBS.HasValue ?
                new ObjectParameter("prmChangeScheduleBS", prmChangeScheduleBS) :
                new ObjectParameter("prmChangeScheduleBS", typeof(bool));
    
            var prmScheduleBSParameter = prmScheduleBS.HasValue ?
                new ObjectParameter("prmScheduleBS", prmScheduleBS) :
                new ObjectParameter("prmScheduleBS", typeof(bool));
    
            var prmChangeSettledFigureParameter = prmChangeSettledFigure.HasValue ?
                new ObjectParameter("prmChangeSettledFigure", prmChangeSettledFigure) :
                new ObjectParameter("prmChangeSettledFigure", typeof(bool));
    
            var prmSettledFigureParameter = prmSettledFigure.HasValue ?
                new ObjectParameter("prmSettledFigure", prmSettledFigure) :
                new ObjectParameter("prmSettledFigure", typeof(decimal));
    
            var prmChangeShowInTickerParameter = prmChangeShowInTicker.HasValue ?
                new ObjectParameter("prmChangeShowInTicker", prmChangeShowInTicker) :
                new ObjectParameter("prmChangeShowInTicker", typeof(bool));
    
            var prmShowInTickerParameter = prmShowInTicker.HasValue ?
                new ObjectParameter("prmShowInTicker", prmShowInTicker) :
                new ObjectParameter("prmShowInTicker", typeof(bool));
    
            var prmChangeEPOSPlayerParameter = prmChangeEPOSPlayer.HasValue ?
                new ObjectParameter("prmChangeEPOSPlayer", prmChangeEPOSPlayer) :
                new ObjectParameter("prmChangeEPOSPlayer", typeof(bool));
    
            var prmEPOSPlayerParameter = prmEPOSPlayer.HasValue ?
                new ObjectParameter("prmEPOSPlayer", prmEPOSPlayer) :
                new ObjectParameter("prmEPOSPlayer", typeof(bool));
    
            var prmChangeEnableSportsParameter = prmChangeEnableSports.HasValue ?
                new ObjectParameter("prmChangeEnableSports", prmChangeEnableSports) :
                new ObjectParameter("prmChangeEnableSports", typeof(bool));
    
            var prmEnableSportsParameter = prmEnableSports.HasValue ?
                new ObjectParameter("prmEnableSports", prmEnableSports) :
                new ObjectParameter("prmEnableSports", typeof(bool));
    
            var prmChangeEnableCasinoParameter = prmChangeEnableCasino.HasValue ?
                new ObjectParameter("prmChangeEnableCasino", prmChangeEnableCasino) :
                new ObjectParameter("prmChangeEnableCasino", typeof(bool));
    
            var prmEnableCasinoParameter = prmEnableCasino.HasValue ?
                new ObjectParameter("prmEnableCasino", prmEnableCasino) :
                new ObjectParameter("prmEnableCasino", typeof(bool));
    
            var prmChangeEnableHorsesParameter = prmChangeEnableHorses.HasValue ?
                new ObjectParameter("prmChangeEnableHorses", prmChangeEnableHorses) :
                new ObjectParameter("prmChangeEnableHorses", typeof(bool));
    
            var prmEnableHorsesParameter = prmEnableHorses.HasValue ?
                new ObjectParameter("prmEnableHorses", prmEnableHorses) :
                new ObjectParameter("prmEnableHorses", typeof(bool));
    
            var prmChangeEnableCardsParameter = prmChangeEnableCards.HasValue ?
                new ObjectParameter("prmChangeEnableCards", prmChangeEnableCards) :
                new ObjectParameter("prmChangeEnableCards", typeof(bool));
    
            var prmEnableCardsParameter = prmEnableCards.HasValue ?
                new ObjectParameter("prmEnableCards", prmEnableCards) :
                new ObjectParameter("prmEnableCards", typeof(bool));
    
            var prmChangeDateOfBirthParameter = prmChangeDateOfBirth.HasValue ?
                new ObjectParameter("prmChangeDateOfBirth", prmChangeDateOfBirth) :
                new ObjectParameter("prmChangeDateOfBirth", typeof(bool));
    
            var prmDateOfBirthParameter = prmDateOfBirth.HasValue ?
                new ObjectParameter("prmDateOfBirth", prmDateOfBirth) :
                new ObjectParameter("prmDateOfBirth", typeof(System.DateTime));
    
            var prmChangeHoldHoldBetsParameter = prmChangeHoldHoldBets.HasValue ?
                new ObjectParameter("prmChangeHoldHoldBets", prmChangeHoldHoldBets) :
                new ObjectParameter("prmChangeHoldHoldBets", typeof(bool));
    
            var prmHoldBetsParameter = prmHoldBets.HasValue ?
                new ObjectParameter("prmHoldBets", prmHoldBets) :
                new ObjectParameter("prmHoldBets", typeof(bool));
    
            var prmChangeHoldDelayParameter = prmChangeHoldDelay.HasValue ?
                new ObjectParameter("prmChangeHoldDelay", prmChangeHoldDelay) :
                new ObjectParameter("prmChangeHoldDelay", typeof(bool));
    
            var prmHoldDelayParameter = prmHoldDelay.HasValue ?
                new ObjectParameter("prmHoldDelay", prmHoldDelay) :
                new ObjectParameter("prmHoldDelay", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_UpdateByFields", prmIdPlayerParameter, prmChangeIdLineTypeParameter, prmIdLineTypeParameter, prmChangeIdOfficeParameter, prmIdOfficeParameter, prmChangeIdAgentParameter, prmIdAgentParameter, prmChangeIdCurrencyParameter, prmIdCurrencyParameter, prmChangeIdGroupingParameter, prmIdGroupingParameter, prmChangeIdSourceParameter, prmIdSourceParameter, prmChangeIdProfileParameter, prmIdProfileParameter, prmChangeIdProfileLimitsParameter, prmIdProfileLimitsParameter, prmChangeIdPlayerRateParameter, prmIdPlayerRateParameter, prmChangeIdBookParameter, prmIdBookParameter, prmChangeIdTimeZoneParameter, prmIdTimeZoneParameter, prmChangeIdLanguageParameter, prmIdLanguageParameter, prmChangeScheduleStyleParameter, prmScheduleStyleParameter, prmChangeAddress1Parameter, prmAddress1Parameter, prmChangeAddress2Parameter, prmAddress2Parameter, prmChangeCityParameter, prmCityParameter, prmChangeStateParameter, prmStateParameter, prmChangeCountryParameter, prmCountryParameter, prmChangeZipParameter, prmZipParameter, prmChangePhoneParameter, prmPhoneParameter, prmChangeFaxParameter, prmFaxParameter, prmChangeEmailParameter, prmEmailParameter, prmChangeStatusParameter, prmStatusParameter, prmChangeAutoPayParameter, prmAutoPayParameter, prmChangeBalanceCheckedParameter, prmBalanceCheckedParameter, prmChangeCreditLimitParameter, prmCreditLimitParameter, prmChangeNoLimitParameter, prmNoLimitParameter, prmChangeTempCreditParameter, prmTempCreditParameter, prmChangeSoftLimitPercentParameter, prmSoftLimitPercentParameter, prmChangeTempCreditExpireParameter, prmTempCreditExpireParameter, prmChangeOnlineAccessParameter, prmOnlineAccessParameter, prmChangeOnlineMessageParameter, prmOnlineMessageParameter, prmChangeOnlineMaxWagerParameter, prmOnlineMaxWagerParameter, prmChangeOnlineMinWagerParameter, prmOnlineMinWagerParameter, prmChangeMaxWagerParameter, prmMaxWagerParameter, prmChangeMinWagerParameter, prmMinWagerParameter, prmChangeChartPercentParameter, prmChartPercentParameter, prmChangeMasterChartParameter, prmMasterChartParameter, prmChangeMasterParameter, prmMasterParameter, prmChangeFlagMessageParameter, prmFlagMessageParameter, prmChangeIdFlagMessageTypeParameter, prmIdFlagMessageTypeParameter, prmChangeMaxActionPointsParameter, prmMaxActionPointsParameter, prmChangeBonusPointsStatusParameter, prmBonusPointsStatusParameter, prmChangeBonusPointsExpireParameter, prmBonusPointsExpireParameter, prmChangeBonusPointsStartParameter, prmBonusPointsStartParameter, prmChangeLineStyleParameter, prmLineStyleParameter, prmChangeNHLLineParameter, prmNHLLineParameter, prmChangeMLBLineParameter, prmMLBLineParameter, prmChangePitcherDefaultParameter, prmPitcherDefaultParameter, prmChangeDuplicatedBetsParameter, prmDuplicatedBetsParameter, prmChangeDuplicatedBetsOnlineParameter, prmDuplicatedBetsOnlineParameter, prmChangeFreePlayMessageParameter, prmFreePlayMessageParameter, prmChangeScheduleFBParameter, prmScheduleFBParameter, prmChangeScheduleBBParameter, prmScheduleBBParameter, prmChangeScheduleHKParameter, prmScheduleHKParameter, prmChangeScheduleBSParameter, prmScheduleBSParameter, prmChangeSettledFigureParameter, prmSettledFigureParameter, prmChangeShowInTickerParameter, prmShowInTickerParameter, prmChangeEPOSPlayerParameter, prmEPOSPlayerParameter, prmChangeEnableSportsParameter, prmEnableSportsParameter, prmChangeEnableCasinoParameter, prmEnableCasinoParameter, prmChangeEnableHorsesParameter, prmEnableHorsesParameter, prmChangeEnableCardsParameter, prmEnableCardsParameter, prmChangeDateOfBirthParameter, prmDateOfBirthParameter, prmChangeHoldHoldBetsParameter, prmHoldBetsParameter, prmChangeHoldDelayParameter, prmHoldDelayParameter, prmIdUserParameter);
        }
    
        public virtual int Player_UpdateFlagMessage(Nullable<int> prmIdPlayer, string prmFlagMessage, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmFlagMessageParameter = prmFlagMessage != null ?
                new ObjectParameter("prmFlagMessage", prmFlagMessage) :
                new ObjectParameter("prmFlagMessage", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_UpdateFlagMessage", prmIdPlayerParameter, prmFlagMessageParameter, prmIdUserParameter);
        }
    
        public virtual int Player_UpdateFreePlayMessage(Nullable<int> prmIdPlayer, string prmFreePlayMessage, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmFreePlayMessageParameter = prmFreePlayMessage != null ?
                new ObjectParameter("prmFreePlayMessage", prmFreePlayMessage) :
                new ObjectParameter("prmFreePlayMessage", typeof(string));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_UpdateFreePlayMessage", prmIdPlayerParameter, prmFreePlayMessageParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerCallsLog_Insert(Nullable<int> prmIdCall, Nullable<short> prmPhoneLine, Nullable<int> prmIdPlayer, Nullable<short> prmIdUser, Nullable<System.DateTime> prmStartTime, Nullable<System.DateTime> prmEndTime, Nullable<short> prmBetsTaked, string prmIP, Nullable<bool> prmRec, string prmSystem)
        {
            var prmIdCallParameter = prmIdCall.HasValue ?
                new ObjectParameter("prmIdCall", prmIdCall) :
                new ObjectParameter("prmIdCall", typeof(int));
    
            var prmPhoneLineParameter = prmPhoneLine.HasValue ?
                new ObjectParameter("prmPhoneLine", prmPhoneLine) :
                new ObjectParameter("prmPhoneLine", typeof(short));
    
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            var prmStartTimeParameter = prmStartTime.HasValue ?
                new ObjectParameter("prmStartTime", prmStartTime) :
                new ObjectParameter("prmStartTime", typeof(System.DateTime));
    
            var prmEndTimeParameter = prmEndTime.HasValue ?
                new ObjectParameter("prmEndTime", prmEndTime) :
                new ObjectParameter("prmEndTime", typeof(System.DateTime));
    
            var prmBetsTakedParameter = prmBetsTaked.HasValue ?
                new ObjectParameter("prmBetsTaked", prmBetsTaked) :
                new ObjectParameter("prmBetsTaked", typeof(short));
    
            var prmIPParameter = prmIP != null ?
                new ObjectParameter("prmIP", prmIP) :
                new ObjectParameter("prmIP", typeof(string));
    
            var prmRecParameter = prmRec.HasValue ?
                new ObjectParameter("prmRec", prmRec) :
                new ObjectParameter("prmRec", typeof(bool));
    
            var prmSystemParameter = prmSystem != null ?
                new ObjectParameter("prmSystem", prmSystem) :
                new ObjectParameter("prmSystem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerCallsLog_Insert", prmIdCallParameter, prmPhoneLineParameter, prmIdPlayerParameter, prmIdUserParameter, prmStartTimeParameter, prmEndTimeParameter, prmBetsTakedParameter, prmIPParameter, prmRecParameter, prmSystemParameter);
        }
    
        public virtual int PlayerClaims_Delete(Nullable<int> prmIdClaim, Nullable<short> prmIdUser)
        {
            var prmIdClaimParameter = prmIdClaim.HasValue ?
                new ObjectParameter("prmIdClaim", prmIdClaim) :
                new ObjectParameter("prmIdClaim", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerClaims_Delete", prmIdClaimParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<PlayerClaims_GetInfo_Result> PlayerClaims_GetInfo(Nullable<int> prmIdClaim)
        {
            var prmIdClaimParameter = prmIdClaim.HasValue ?
                new ObjectParameter("prmIdClaim", prmIdClaim) :
                new ObjectParameter("prmIdClaim", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerClaims_GetInfo_Result>("PlayerClaims_GetInfo", prmIdClaimParameter);
        }
    
        public virtual int PlayerClaims_GetList(Nullable<short> prmIdOffice, Nullable<short> prmClerk, Nullable<short> prmPhone, Nullable<short> prmSolvedBy, Nullable<bool> prmUsePlayer, string prmPlayerFrom, string prmPlayerTo, Nullable<bool> prmUseAgent, string prmAgentFrom, string prmAgentTo, Nullable<bool> prmUseTeam, string prmTeamFrom, string prmTeamTo, Nullable<bool> prmUsePlaced, Nullable<System.DateTime> prmPlacedFrom, Nullable<System.DateTime> prmPlacedTo, string prmIdSport, Nullable<byte> prmStatus, Nullable<short> prmWagerType, Nullable<short> prmIdUser)
        {
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(short));
    
            var prmClerkParameter = prmClerk.HasValue ?
                new ObjectParameter("prmClerk", prmClerk) :
                new ObjectParameter("prmClerk", typeof(short));
    
            var prmPhoneParameter = prmPhone.HasValue ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(short));
    
            var prmSolvedByParameter = prmSolvedBy.HasValue ?
                new ObjectParameter("prmSolvedBy", prmSolvedBy) :
                new ObjectParameter("prmSolvedBy", typeof(short));
    
            var prmUsePlayerParameter = prmUsePlayer.HasValue ?
                new ObjectParameter("prmUsePlayer", prmUsePlayer) :
                new ObjectParameter("prmUsePlayer", typeof(bool));
    
            var prmPlayerFromParameter = prmPlayerFrom != null ?
                new ObjectParameter("prmPlayerFrom", prmPlayerFrom) :
                new ObjectParameter("prmPlayerFrom", typeof(string));
    
            var prmPlayerToParameter = prmPlayerTo != null ?
                new ObjectParameter("prmPlayerTo", prmPlayerTo) :
                new ObjectParameter("prmPlayerTo", typeof(string));
    
            var prmUseAgentParameter = prmUseAgent.HasValue ?
                new ObjectParameter("prmUseAgent", prmUseAgent) :
                new ObjectParameter("prmUseAgent", typeof(bool));
    
            var prmAgentFromParameter = prmAgentFrom != null ?
                new ObjectParameter("prmAgentFrom", prmAgentFrom) :
                new ObjectParameter("prmAgentFrom", typeof(string));
    
            var prmAgentToParameter = prmAgentTo != null ?
                new ObjectParameter("prmAgentTo", prmAgentTo) :
                new ObjectParameter("prmAgentTo", typeof(string));
    
            var prmUseTeamParameter = prmUseTeam.HasValue ?
                new ObjectParameter("prmUseTeam", prmUseTeam) :
                new ObjectParameter("prmUseTeam", typeof(bool));
    
            var prmTeamFromParameter = prmTeamFrom != null ?
                new ObjectParameter("prmTeamFrom", prmTeamFrom) :
                new ObjectParameter("prmTeamFrom", typeof(string));
    
            var prmTeamToParameter = prmTeamTo != null ?
                new ObjectParameter("prmTeamTo", prmTeamTo) :
                new ObjectParameter("prmTeamTo", typeof(string));
    
            var prmUsePlacedParameter = prmUsePlaced.HasValue ?
                new ObjectParameter("prmUsePlaced", prmUsePlaced) :
                new ObjectParameter("prmUsePlaced", typeof(bool));
    
            var prmPlacedFromParameter = prmPlacedFrom.HasValue ?
                new ObjectParameter("prmPlacedFrom", prmPlacedFrom) :
                new ObjectParameter("prmPlacedFrom", typeof(System.DateTime));
    
            var prmPlacedToParameter = prmPlacedTo.HasValue ?
                new ObjectParameter("prmPlacedTo", prmPlacedTo) :
                new ObjectParameter("prmPlacedTo", typeof(System.DateTime));
    
            var prmIdSportParameter = prmIdSport != null ?
                new ObjectParameter("prmIdSport", prmIdSport) :
                new ObjectParameter("prmIdSport", typeof(string));
    
            var prmStatusParameter = prmStatus.HasValue ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(byte));
    
            var prmWagerTypeParameter = prmWagerType.HasValue ?
                new ObjectParameter("prmWagerType", prmWagerType) :
                new ObjectParameter("prmWagerType", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerClaims_GetList", prmIdOfficeParameter, prmClerkParameter, prmPhoneParameter, prmSolvedByParameter, prmUsePlayerParameter, prmPlayerFromParameter, prmPlayerToParameter, prmUseAgentParameter, prmAgentFromParameter, prmAgentToParameter, prmUseTeamParameter, prmTeamFromParameter, prmTeamToParameter, prmUsePlacedParameter, prmPlacedFromParameter, prmPlacedToParameter, prmIdSportParameter, prmStatusParameter, prmWagerTypeParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerClaims_Insert(Nullable<int> prmIdPlayer, Nullable<int> prmIdWager, string prmDescription, Nullable<short> prmUserID, Nullable<System.DateTime> prmPlaced, Nullable<short> prmIdOffice, Nullable<int> prmIdCall, Nullable<short> prmPhoneLine, Nullable<short> prmUnit, Nullable<short> prmChannel, Nullable<System.DateTime> prmTapeTime, Nullable<short> prmSolvedBy, string prmComments, string prmResults, Nullable<byte> prmStatus, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdWagerParameter = prmIdWager.HasValue ?
                new ObjectParameter("prmIdWager", prmIdWager) :
                new ObjectParameter("prmIdWager", typeof(int));
    
            var prmDescriptionParameter = prmDescription != null ?
                new ObjectParameter("prmDescription", prmDescription) :
                new ObjectParameter("prmDescription", typeof(string));
    
            var prmUserIDParameter = prmUserID.HasValue ?
                new ObjectParameter("prmUserID", prmUserID) :
                new ObjectParameter("prmUserID", typeof(short));
    
            var prmPlacedParameter = prmPlaced.HasValue ?
                new ObjectParameter("prmPlaced", prmPlaced) :
                new ObjectParameter("prmPlaced", typeof(System.DateTime));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(short));
    
            var prmIdCallParameter = prmIdCall.HasValue ?
                new ObjectParameter("prmIdCall", prmIdCall) :
                new ObjectParameter("prmIdCall", typeof(int));
    
            var prmPhoneLineParameter = prmPhoneLine.HasValue ?
                new ObjectParameter("prmPhoneLine", prmPhoneLine) :
                new ObjectParameter("prmPhoneLine", typeof(short));
    
            var prmUnitParameter = prmUnit.HasValue ?
                new ObjectParameter("prmUnit", prmUnit) :
                new ObjectParameter("prmUnit", typeof(short));
    
            var prmChannelParameter = prmChannel.HasValue ?
                new ObjectParameter("prmChannel", prmChannel) :
                new ObjectParameter("prmChannel", typeof(short));
    
            var prmTapeTimeParameter = prmTapeTime.HasValue ?
                new ObjectParameter("prmTapeTime", prmTapeTime) :
                new ObjectParameter("prmTapeTime", typeof(System.DateTime));
    
            var prmSolvedByParameter = prmSolvedBy.HasValue ?
                new ObjectParameter("prmSolvedBy", prmSolvedBy) :
                new ObjectParameter("prmSolvedBy", typeof(short));
    
            var prmCommentsParameter = prmComments != null ?
                new ObjectParameter("prmComments", prmComments) :
                new ObjectParameter("prmComments", typeof(string));
    
            var prmResultsParameter = prmResults != null ?
                new ObjectParameter("prmResults", prmResults) :
                new ObjectParameter("prmResults", typeof(string));
    
            var prmStatusParameter = prmStatus.HasValue ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerClaims_Insert", prmIdPlayerParameter, prmIdWagerParameter, prmDescriptionParameter, prmUserIDParameter, prmPlacedParameter, prmIdOfficeParameter, prmIdCallParameter, prmPhoneLineParameter, prmUnitParameter, prmChannelParameter, prmTapeTimeParameter, prmSolvedByParameter, prmCommentsParameter, prmResultsParameter, prmStatusParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerClaims_Update(Nullable<int> prmIdClaim, Nullable<int> prmIdPlayer, Nullable<int> prmIdWager, string prmDescription, Nullable<short> prmUserID, Nullable<System.DateTime> prmPlaced, Nullable<short> prmIdOffice, Nullable<int> prmIdCall, Nullable<short> prmPhoneLine, Nullable<short> prmUnit, Nullable<short> prmChannel, Nullable<System.DateTime> prmTapeTime, Nullable<short> prmSolvedBy, string prmComments, string prmResults, Nullable<byte> prmStatus, Nullable<short> prmIdUser)
        {
            var prmIdClaimParameter = prmIdClaim.HasValue ?
                new ObjectParameter("prmIdClaim", prmIdClaim) :
                new ObjectParameter("prmIdClaim", typeof(int));
    
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdWagerParameter = prmIdWager.HasValue ?
                new ObjectParameter("prmIdWager", prmIdWager) :
                new ObjectParameter("prmIdWager", typeof(int));
    
            var prmDescriptionParameter = prmDescription != null ?
                new ObjectParameter("prmDescription", prmDescription) :
                new ObjectParameter("prmDescription", typeof(string));
    
            var prmUserIDParameter = prmUserID.HasValue ?
                new ObjectParameter("prmUserID", prmUserID) :
                new ObjectParameter("prmUserID", typeof(short));
    
            var prmPlacedParameter = prmPlaced.HasValue ?
                new ObjectParameter("prmPlaced", prmPlaced) :
                new ObjectParameter("prmPlaced", typeof(System.DateTime));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(short));
    
            var prmIdCallParameter = prmIdCall.HasValue ?
                new ObjectParameter("prmIdCall", prmIdCall) :
                new ObjectParameter("prmIdCall", typeof(int));
    
            var prmPhoneLineParameter = prmPhoneLine.HasValue ?
                new ObjectParameter("prmPhoneLine", prmPhoneLine) :
                new ObjectParameter("prmPhoneLine", typeof(short));
    
            var prmUnitParameter = prmUnit.HasValue ?
                new ObjectParameter("prmUnit", prmUnit) :
                new ObjectParameter("prmUnit", typeof(short));
    
            var prmChannelParameter = prmChannel.HasValue ?
                new ObjectParameter("prmChannel", prmChannel) :
                new ObjectParameter("prmChannel", typeof(short));
    
            var prmTapeTimeParameter = prmTapeTime.HasValue ?
                new ObjectParameter("prmTapeTime", prmTapeTime) :
                new ObjectParameter("prmTapeTime", typeof(System.DateTime));
    
            var prmSolvedByParameter = prmSolvedBy.HasValue ?
                new ObjectParameter("prmSolvedBy", prmSolvedBy) :
                new ObjectParameter("prmSolvedBy", typeof(short));
    
            var prmCommentsParameter = prmComments != null ?
                new ObjectParameter("prmComments", prmComments) :
                new ObjectParameter("prmComments", typeof(string));
    
            var prmResultsParameter = prmResults != null ?
                new ObjectParameter("prmResults", prmResults) :
                new ObjectParameter("prmResults", typeof(string));
    
            var prmStatusParameter = prmStatus.HasValue ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerClaims_Update", prmIdClaimParameter, prmIdPlayerParameter, prmIdWagerParameter, prmDescriptionParameter, prmUserIDParameter, prmPlacedParameter, prmIdOfficeParameter, prmIdCallParameter, prmPhoneLineParameter, prmUnitParameter, prmChannelParameter, prmTapeTimeParameter, prmSolvedByParameter, prmCommentsParameter, prmResultsParameter, prmStatusParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerHoldSettings_Delete(Nullable<int> prmIdPlayer, Nullable<byte> prmWagerType, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmWagerTypeParameter = prmWagerType.HasValue ?
                new ObjectParameter("prmWagerType", prmWagerType) :
                new ObjectParameter("prmWagerType", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerHoldSettings_Delete", prmIdPlayerParameter, prmWagerTypeParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<PlayerHoldSettings_GetList_Result> PlayerHoldSettings_GetList(Nullable<int> prmIdPlayer)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerHoldSettings_GetList_Result>("PlayerHoldSettings_GetList", prmIdPlayerParameter);
        }
    
        public virtual int PlayerHoldSettings_Insert(Nullable<int> prmIdPlayer, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerHoldSettings_Insert", prmIdPlayerParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerHoldSettings_Update(Nullable<int> prmIdPlayer, Nullable<byte> prmWagerType, Nullable<bool> prmEnabled, Nullable<decimal> prmAmount, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmWagerTypeParameter = prmWagerType.HasValue ?
                new ObjectParameter("prmWagerType", prmWagerType) :
                new ObjectParameter("prmWagerType", typeof(byte));
    
            var prmEnabledParameter = prmEnabled.HasValue ?
                new ObjectParameter("prmEnabled", prmEnabled) :
                new ObjectParameter("prmEnabled", typeof(bool));
    
            var prmAmountParameter = prmAmount.HasValue ?
                new ObjectParameter("prmAmount", prmAmount) :
                new ObjectParameter("prmAmount", typeof(decimal));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerHoldSettings_Update", prmIdPlayerParameter, prmWagerTypeParameter, prmEnabledParameter, prmAmountParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerMaintenance(Nullable<bool> prmInsert, Nullable<short> prmIdLineType, Nullable<byte> prmIdOffice, Nullable<int> prmIdAgent, Nullable<short> prmIdCurrency, Nullable<short> prmIdGrouping, Nullable<short> prmIdSource, Nullable<short> prmIdProfile, Nullable<short> prmIdPlayerRate, Nullable<byte> prmIdBook, string prmPlayer, string prmPassword, string prmName, string prmLastName, string prmTitle, string prmAddress1, string prmAddress2, string prmCity, string prmState, string prmCountry, string prmZip, string prmPhone, string prmFax, string prmEmail, string prmStatus, Nullable<bool> prmAutoPay, Nullable<bool> prmBalanceChecked, Nullable<decimal> prmCreditLimit, Nullable<bool> prmNoLimit, Nullable<decimal> prmTempCredit, Nullable<byte> prmSoftLimitPercent, Nullable<System.DateTime> prmTempCreditExpire, Nullable<bool> prmOnlineAccess, string prmOnlinePassword, string prmOnlineMessage, Nullable<decimal> prmOnlineMaxWager, Nullable<decimal> prmOnlineMinWager, Nullable<decimal> prmMaxWager, Nullable<decimal> prmMinWager, Nullable<int> prmChartPercent, Nullable<int> prmMasterChart, Nullable<bool> prmMaster, Nullable<byte> prmIdFlagMessageType, Nullable<byte> prmMaxActionPoints, string prmBonusPointsStatus, Nullable<System.DateTime> prmBonusPointsExpire, Nullable<System.DateTime> prmBonusPointsStart, string prmLineStyle, string prmNHLLine, string prmMLBLine, Nullable<byte> prmPitcherDefault, Nullable<bool> prmDuplicatedBets, Nullable<bool> prmDuplicatedBetsOnline, Nullable<bool> prmScheduleFB, Nullable<bool> prmScheduleBB, Nullable<bool> prmScheduleHK, Nullable<bool> prmScheduleBS, Nullable<decimal> prmSettledFigure, Nullable<bool> prmShowInTicker, Nullable<bool> prmEPOSPlayer, Nullable<bool> prmEnableSports, Nullable<bool> prmEnableCasino, Nullable<bool> prmEnableHorses, Nullable<System.DateTime> prmDateOfBirth, Nullable<short> prmIdUser, ObjectParameter prmOutIdPlayer, ObjectParameter prmOutResult)
        {
            var prmInsertParameter = prmInsert.HasValue ?
                new ObjectParameter("prmInsert", prmInsert) :
                new ObjectParameter("prmInsert", typeof(bool));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmIdSourceParameter = prmIdSource.HasValue ?
                new ObjectParameter("prmIdSource", prmIdSource) :
                new ObjectParameter("prmIdSource", typeof(short));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(byte));
    
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmTitleParameter = prmTitle != null ?
                new ObjectParameter("prmTitle", prmTitle) :
                new ObjectParameter("prmTitle", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmStatusParameter = prmStatus != null ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(string));
    
            var prmAutoPayParameter = prmAutoPay.HasValue ?
                new ObjectParameter("prmAutoPay", prmAutoPay) :
                new ObjectParameter("prmAutoPay", typeof(bool));
    
            var prmBalanceCheckedParameter = prmBalanceChecked.HasValue ?
                new ObjectParameter("prmBalanceChecked", prmBalanceChecked) :
                new ObjectParameter("prmBalanceChecked", typeof(bool));
    
            var prmCreditLimitParameter = prmCreditLimit.HasValue ?
                new ObjectParameter("prmCreditLimit", prmCreditLimit) :
                new ObjectParameter("prmCreditLimit", typeof(decimal));
    
            var prmNoLimitParameter = prmNoLimit.HasValue ?
                new ObjectParameter("prmNoLimit", prmNoLimit) :
                new ObjectParameter("prmNoLimit", typeof(bool));
    
            var prmTempCreditParameter = prmTempCredit.HasValue ?
                new ObjectParameter("prmTempCredit", prmTempCredit) :
                new ObjectParameter("prmTempCredit", typeof(decimal));
    
            var prmSoftLimitPercentParameter = prmSoftLimitPercent.HasValue ?
                new ObjectParameter("prmSoftLimitPercent", prmSoftLimitPercent) :
                new ObjectParameter("prmSoftLimitPercent", typeof(byte));
    
            var prmTempCreditExpireParameter = prmTempCreditExpire.HasValue ?
                new ObjectParameter("prmTempCreditExpire", prmTempCreditExpire) :
                new ObjectParameter("prmTempCreditExpire", typeof(System.DateTime));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlinePasswordParameter = prmOnlinePassword != null ?
                new ObjectParameter("prmOnlinePassword", prmOnlinePassword) :
                new ObjectParameter("prmOnlinePassword", typeof(string));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmOnlineMaxWagerParameter = prmOnlineMaxWager.HasValue ?
                new ObjectParameter("prmOnlineMaxWager", prmOnlineMaxWager) :
                new ObjectParameter("prmOnlineMaxWager", typeof(decimal));
    
            var prmOnlineMinWagerParameter = prmOnlineMinWager.HasValue ?
                new ObjectParameter("prmOnlineMinWager", prmOnlineMinWager) :
                new ObjectParameter("prmOnlineMinWager", typeof(decimal));
    
            var prmMaxWagerParameter = prmMaxWager.HasValue ?
                new ObjectParameter("prmMaxWager", prmMaxWager) :
                new ObjectParameter("prmMaxWager", typeof(decimal));
    
            var prmMinWagerParameter = prmMinWager.HasValue ?
                new ObjectParameter("prmMinWager", prmMinWager) :
                new ObjectParameter("prmMinWager", typeof(decimal));
    
            var prmChartPercentParameter = prmChartPercent.HasValue ?
                new ObjectParameter("prmChartPercent", prmChartPercent) :
                new ObjectParameter("prmChartPercent", typeof(int));
    
            var prmMasterChartParameter = prmMasterChart.HasValue ?
                new ObjectParameter("prmMasterChart", prmMasterChart) :
                new ObjectParameter("prmMasterChart", typeof(int));
    
            var prmMasterParameter = prmMaster.HasValue ?
                new ObjectParameter("prmMaster", prmMaster) :
                new ObjectParameter("prmMaster", typeof(bool));
    
            var prmIdFlagMessageTypeParameter = prmIdFlagMessageType.HasValue ?
                new ObjectParameter("prmIdFlagMessageType", prmIdFlagMessageType) :
                new ObjectParameter("prmIdFlagMessageType", typeof(byte));
    
            var prmMaxActionPointsParameter = prmMaxActionPoints.HasValue ?
                new ObjectParameter("prmMaxActionPoints", prmMaxActionPoints) :
                new ObjectParameter("prmMaxActionPoints", typeof(byte));
    
            var prmBonusPointsStatusParameter = prmBonusPointsStatus != null ?
                new ObjectParameter("prmBonusPointsStatus", prmBonusPointsStatus) :
                new ObjectParameter("prmBonusPointsStatus", typeof(string));
    
            var prmBonusPointsExpireParameter = prmBonusPointsExpire.HasValue ?
                new ObjectParameter("prmBonusPointsExpire", prmBonusPointsExpire) :
                new ObjectParameter("prmBonusPointsExpire", typeof(System.DateTime));
    
            var prmBonusPointsStartParameter = prmBonusPointsStart.HasValue ?
                new ObjectParameter("prmBonusPointsStart", prmBonusPointsStart) :
                new ObjectParameter("prmBonusPointsStart", typeof(System.DateTime));
    
            var prmLineStyleParameter = prmLineStyle != null ?
                new ObjectParameter("prmLineStyle", prmLineStyle) :
                new ObjectParameter("prmLineStyle", typeof(string));
    
            var prmNHLLineParameter = prmNHLLine != null ?
                new ObjectParameter("prmNHLLine", prmNHLLine) :
                new ObjectParameter("prmNHLLine", typeof(string));
    
            var prmMLBLineParameter = prmMLBLine != null ?
                new ObjectParameter("prmMLBLine", prmMLBLine) :
                new ObjectParameter("prmMLBLine", typeof(string));
    
            var prmPitcherDefaultParameter = prmPitcherDefault.HasValue ?
                new ObjectParameter("prmPitcherDefault", prmPitcherDefault) :
                new ObjectParameter("prmPitcherDefault", typeof(byte));
    
            var prmDuplicatedBetsParameter = prmDuplicatedBets.HasValue ?
                new ObjectParameter("prmDuplicatedBets", prmDuplicatedBets) :
                new ObjectParameter("prmDuplicatedBets", typeof(bool));
    
            var prmDuplicatedBetsOnlineParameter = prmDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmDuplicatedBetsOnline", prmDuplicatedBetsOnline) :
                new ObjectParameter("prmDuplicatedBetsOnline", typeof(bool));
    
            var prmScheduleFBParameter = prmScheduleFB.HasValue ?
                new ObjectParameter("prmScheduleFB", prmScheduleFB) :
                new ObjectParameter("prmScheduleFB", typeof(bool));
    
            var prmScheduleBBParameter = prmScheduleBB.HasValue ?
                new ObjectParameter("prmScheduleBB", prmScheduleBB) :
                new ObjectParameter("prmScheduleBB", typeof(bool));
    
            var prmScheduleHKParameter = prmScheduleHK.HasValue ?
                new ObjectParameter("prmScheduleHK", prmScheduleHK) :
                new ObjectParameter("prmScheduleHK", typeof(bool));
    
            var prmScheduleBSParameter = prmScheduleBS.HasValue ?
                new ObjectParameter("prmScheduleBS", prmScheduleBS) :
                new ObjectParameter("prmScheduleBS", typeof(bool));
    
            var prmSettledFigureParameter = prmSettledFigure.HasValue ?
                new ObjectParameter("prmSettledFigure", prmSettledFigure) :
                new ObjectParameter("prmSettledFigure", typeof(decimal));
    
            var prmShowInTickerParameter = prmShowInTicker.HasValue ?
                new ObjectParameter("prmShowInTicker", prmShowInTicker) :
                new ObjectParameter("prmShowInTicker", typeof(bool));
    
            var prmEPOSPlayerParameter = prmEPOSPlayer.HasValue ?
                new ObjectParameter("prmEPOSPlayer", prmEPOSPlayer) :
                new ObjectParameter("prmEPOSPlayer", typeof(bool));
    
            var prmEnableSportsParameter = prmEnableSports.HasValue ?
                new ObjectParameter("prmEnableSports", prmEnableSports) :
                new ObjectParameter("prmEnableSports", typeof(bool));
    
            var prmEnableCasinoParameter = prmEnableCasino.HasValue ?
                new ObjectParameter("prmEnableCasino", prmEnableCasino) :
                new ObjectParameter("prmEnableCasino", typeof(bool));
    
            var prmEnableHorsesParameter = prmEnableHorses.HasValue ?
                new ObjectParameter("prmEnableHorses", prmEnableHorses) :
                new ObjectParameter("prmEnableHorses", typeof(bool));
    
            var prmDateOfBirthParameter = prmDateOfBirth.HasValue ?
                new ObjectParameter("prmDateOfBirth", prmDateOfBirth) :
                new ObjectParameter("prmDateOfBirth", typeof(System.DateTime));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMaintenance", prmInsertParameter, prmIdLineTypeParameter, prmIdOfficeParameter, prmIdAgentParameter, prmIdCurrencyParameter, prmIdGroupingParameter, prmIdSourceParameter, prmIdProfileParameter, prmIdPlayerRateParameter, prmIdBookParameter, prmPlayerParameter, prmPasswordParameter, prmNameParameter, prmLastNameParameter, prmTitleParameter, prmAddress1Parameter, prmAddress2Parameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmZipParameter, prmPhoneParameter, prmFaxParameter, prmEmailParameter, prmStatusParameter, prmAutoPayParameter, prmBalanceCheckedParameter, prmCreditLimitParameter, prmNoLimitParameter, prmTempCreditParameter, prmSoftLimitPercentParameter, prmTempCreditExpireParameter, prmOnlineAccessParameter, prmOnlinePasswordParameter, prmOnlineMessageParameter, prmOnlineMaxWagerParameter, prmOnlineMinWagerParameter, prmMaxWagerParameter, prmMinWagerParameter, prmChartPercentParameter, prmMasterChartParameter, prmMasterParameter, prmIdFlagMessageTypeParameter, prmMaxActionPointsParameter, prmBonusPointsStatusParameter, prmBonusPointsExpireParameter, prmBonusPointsStartParameter, prmLineStyleParameter, prmNHLLineParameter, prmMLBLineParameter, prmPitcherDefaultParameter, prmDuplicatedBetsParameter, prmDuplicatedBetsOnlineParameter, prmScheduleFBParameter, prmScheduleBBParameter, prmScheduleHKParameter, prmScheduleBSParameter, prmSettledFigureParameter, prmShowInTickerParameter, prmEPOSPlayerParameter, prmEnableSportsParameter, prmEnableCasinoParameter, prmEnableHorsesParameter, prmDateOfBirthParameter, prmIdUserParameter, prmOutIdPlayer, prmOutResult);
        }
    
        public virtual int PlayerMaintenanceNT(Nullable<bool> prmInsert, Nullable<short> prmIdLineType, Nullable<byte> prmIdOffice, Nullable<int> prmIdAgent, Nullable<short> prmIdCurrency, Nullable<short> prmIdGrouping, Nullable<short> prmIdSource, Nullable<short> prmIdProfile, Nullable<short> prmIdPlayerRate, Nullable<byte> prmIdBook, string prmPlayer, string prmPassword, string prmName, string prmLastName, string prmTitle, string prmAddress1, string prmAddress2, string prmCity, string prmState, string prmCountry, string prmZip, string prmPhone, string prmFax, string prmEmail, string prmStatus, Nullable<bool> prmAutoPay, Nullable<bool> prmBalanceChecked, Nullable<decimal> prmCreditLimit, Nullable<bool> prmNoLimit, Nullable<decimal> prmTempCredit, Nullable<byte> prmSoftLimitPercent, Nullable<System.DateTime> prmTempCreditExpire, Nullable<bool> prmOnlineAccess, string prmOnlinePassword, string prmOnlineMessage, Nullable<decimal> prmOnlineMaxWager, Nullable<decimal> prmOnlineMinWager, Nullable<decimal> prmMaxWager, Nullable<decimal> prmMinWager, Nullable<int> prmChartPercent, Nullable<int> prmMasterChart, Nullable<bool> prmMaster, Nullable<byte> prmIdFlagMessageType, Nullable<byte> prmMaxActionPoints, string prmBonusPointsStatus, Nullable<System.DateTime> prmBonusPointsExpire, Nullable<System.DateTime> prmBonusPointsStart, string prmLineStyle, string prmNHLLine, string prmMLBLine, Nullable<byte> prmPitcherDefault, Nullable<bool> prmDuplicatedBets, Nullable<bool> prmDuplicatedBetsOnline, Nullable<bool> prmScheduleFB, Nullable<bool> prmScheduleBB, Nullable<bool> prmScheduleHK, Nullable<bool> prmScheduleBS, Nullable<decimal> prmSettledFigure, Nullable<bool> prmShowInTicker, Nullable<bool> prmEPOSPlayer, Nullable<bool> prmEnableSports, Nullable<bool> prmEnableCasino, Nullable<bool> prmEnableHorses, Nullable<System.DateTime> prmDateOfBirth, Nullable<short> prmIdUser, ObjectParameter prmOutIdPlayer)
        {
            var prmInsertParameter = prmInsert.HasValue ?
                new ObjectParameter("prmInsert", prmInsert) :
                new ObjectParameter("prmInsert", typeof(bool));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdCurrencyParameter = prmIdCurrency.HasValue ?
                new ObjectParameter("prmIdCurrency", prmIdCurrency) :
                new ObjectParameter("prmIdCurrency", typeof(short));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmIdSourceParameter = prmIdSource.HasValue ?
                new ObjectParameter("prmIdSource", prmIdSource) :
                new ObjectParameter("prmIdSource", typeof(short));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(byte));
    
            var prmPlayerParameter = prmPlayer != null ?
                new ObjectParameter("prmPlayer", prmPlayer) :
                new ObjectParameter("prmPlayer", typeof(string));
    
            var prmPasswordParameter = prmPassword != null ?
                new ObjectParameter("prmPassword", prmPassword) :
                new ObjectParameter("prmPassword", typeof(string));
    
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmLastNameParameter = prmLastName != null ?
                new ObjectParameter("prmLastName", prmLastName) :
                new ObjectParameter("prmLastName", typeof(string));
    
            var prmTitleParameter = prmTitle != null ?
                new ObjectParameter("prmTitle", prmTitle) :
                new ObjectParameter("prmTitle", typeof(string));
    
            var prmAddress1Parameter = prmAddress1 != null ?
                new ObjectParameter("prmAddress1", prmAddress1) :
                new ObjectParameter("prmAddress1", typeof(string));
    
            var prmAddress2Parameter = prmAddress2 != null ?
                new ObjectParameter("prmAddress2", prmAddress2) :
                new ObjectParameter("prmAddress2", typeof(string));
    
            var prmCityParameter = prmCity != null ?
                new ObjectParameter("prmCity", prmCity) :
                new ObjectParameter("prmCity", typeof(string));
    
            var prmStateParameter = prmState != null ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(string));
    
            var prmCountryParameter = prmCountry != null ?
                new ObjectParameter("prmCountry", prmCountry) :
                new ObjectParameter("prmCountry", typeof(string));
    
            var prmZipParameter = prmZip != null ?
                new ObjectParameter("prmZip", prmZip) :
                new ObjectParameter("prmZip", typeof(string));
    
            var prmPhoneParameter = prmPhone != null ?
                new ObjectParameter("prmPhone", prmPhone) :
                new ObjectParameter("prmPhone", typeof(string));
    
            var prmFaxParameter = prmFax != null ?
                new ObjectParameter("prmFax", prmFax) :
                new ObjectParameter("prmFax", typeof(string));
    
            var prmEmailParameter = prmEmail != null ?
                new ObjectParameter("prmEmail", prmEmail) :
                new ObjectParameter("prmEmail", typeof(string));
    
            var prmStatusParameter = prmStatus != null ?
                new ObjectParameter("prmStatus", prmStatus) :
                new ObjectParameter("prmStatus", typeof(string));
    
            var prmAutoPayParameter = prmAutoPay.HasValue ?
                new ObjectParameter("prmAutoPay", prmAutoPay) :
                new ObjectParameter("prmAutoPay", typeof(bool));
    
            var prmBalanceCheckedParameter = prmBalanceChecked.HasValue ?
                new ObjectParameter("prmBalanceChecked", prmBalanceChecked) :
                new ObjectParameter("prmBalanceChecked", typeof(bool));
    
            var prmCreditLimitParameter = prmCreditLimit.HasValue ?
                new ObjectParameter("prmCreditLimit", prmCreditLimit) :
                new ObjectParameter("prmCreditLimit", typeof(decimal));
    
            var prmNoLimitParameter = prmNoLimit.HasValue ?
                new ObjectParameter("prmNoLimit", prmNoLimit) :
                new ObjectParameter("prmNoLimit", typeof(bool));
    
            var prmTempCreditParameter = prmTempCredit.HasValue ?
                new ObjectParameter("prmTempCredit", prmTempCredit) :
                new ObjectParameter("prmTempCredit", typeof(decimal));
    
            var prmSoftLimitPercentParameter = prmSoftLimitPercent.HasValue ?
                new ObjectParameter("prmSoftLimitPercent", prmSoftLimitPercent) :
                new ObjectParameter("prmSoftLimitPercent", typeof(byte));
    
            var prmTempCreditExpireParameter = prmTempCreditExpire.HasValue ?
                new ObjectParameter("prmTempCreditExpire", prmTempCreditExpire) :
                new ObjectParameter("prmTempCreditExpire", typeof(System.DateTime));
    
            var prmOnlineAccessParameter = prmOnlineAccess.HasValue ?
                new ObjectParameter("prmOnlineAccess", prmOnlineAccess) :
                new ObjectParameter("prmOnlineAccess", typeof(bool));
    
            var prmOnlinePasswordParameter = prmOnlinePassword != null ?
                new ObjectParameter("prmOnlinePassword", prmOnlinePassword) :
                new ObjectParameter("prmOnlinePassword", typeof(string));
    
            var prmOnlineMessageParameter = prmOnlineMessage != null ?
                new ObjectParameter("prmOnlineMessage", prmOnlineMessage) :
                new ObjectParameter("prmOnlineMessage", typeof(string));
    
            var prmOnlineMaxWagerParameter = prmOnlineMaxWager.HasValue ?
                new ObjectParameter("prmOnlineMaxWager", prmOnlineMaxWager) :
                new ObjectParameter("prmOnlineMaxWager", typeof(decimal));
    
            var prmOnlineMinWagerParameter = prmOnlineMinWager.HasValue ?
                new ObjectParameter("prmOnlineMinWager", prmOnlineMinWager) :
                new ObjectParameter("prmOnlineMinWager", typeof(decimal));
    
            var prmMaxWagerParameter = prmMaxWager.HasValue ?
                new ObjectParameter("prmMaxWager", prmMaxWager) :
                new ObjectParameter("prmMaxWager", typeof(decimal));
    
            var prmMinWagerParameter = prmMinWager.HasValue ?
                new ObjectParameter("prmMinWager", prmMinWager) :
                new ObjectParameter("prmMinWager", typeof(decimal));
    
            var prmChartPercentParameter = prmChartPercent.HasValue ?
                new ObjectParameter("prmChartPercent", prmChartPercent) :
                new ObjectParameter("prmChartPercent", typeof(int));
    
            var prmMasterChartParameter = prmMasterChart.HasValue ?
                new ObjectParameter("prmMasterChart", prmMasterChart) :
                new ObjectParameter("prmMasterChart", typeof(int));
    
            var prmMasterParameter = prmMaster.HasValue ?
                new ObjectParameter("prmMaster", prmMaster) :
                new ObjectParameter("prmMaster", typeof(bool));
    
            var prmIdFlagMessageTypeParameter = prmIdFlagMessageType.HasValue ?
                new ObjectParameter("prmIdFlagMessageType", prmIdFlagMessageType) :
                new ObjectParameter("prmIdFlagMessageType", typeof(byte));
    
            var prmMaxActionPointsParameter = prmMaxActionPoints.HasValue ?
                new ObjectParameter("prmMaxActionPoints", prmMaxActionPoints) :
                new ObjectParameter("prmMaxActionPoints", typeof(byte));
    
            var prmBonusPointsStatusParameter = prmBonusPointsStatus != null ?
                new ObjectParameter("prmBonusPointsStatus", prmBonusPointsStatus) :
                new ObjectParameter("prmBonusPointsStatus", typeof(string));
    
            var prmBonusPointsExpireParameter = prmBonusPointsExpire.HasValue ?
                new ObjectParameter("prmBonusPointsExpire", prmBonusPointsExpire) :
                new ObjectParameter("prmBonusPointsExpire", typeof(System.DateTime));
    
            var prmBonusPointsStartParameter = prmBonusPointsStart.HasValue ?
                new ObjectParameter("prmBonusPointsStart", prmBonusPointsStart) :
                new ObjectParameter("prmBonusPointsStart", typeof(System.DateTime));
    
            var prmLineStyleParameter = prmLineStyle != null ?
                new ObjectParameter("prmLineStyle", prmLineStyle) :
                new ObjectParameter("prmLineStyle", typeof(string));
    
            var prmNHLLineParameter = prmNHLLine != null ?
                new ObjectParameter("prmNHLLine", prmNHLLine) :
                new ObjectParameter("prmNHLLine", typeof(string));
    
            var prmMLBLineParameter = prmMLBLine != null ?
                new ObjectParameter("prmMLBLine", prmMLBLine) :
                new ObjectParameter("prmMLBLine", typeof(string));
    
            var prmPitcherDefaultParameter = prmPitcherDefault.HasValue ?
                new ObjectParameter("prmPitcherDefault", prmPitcherDefault) :
                new ObjectParameter("prmPitcherDefault", typeof(byte));
    
            var prmDuplicatedBetsParameter = prmDuplicatedBets.HasValue ?
                new ObjectParameter("prmDuplicatedBets", prmDuplicatedBets) :
                new ObjectParameter("prmDuplicatedBets", typeof(bool));
    
            var prmDuplicatedBetsOnlineParameter = prmDuplicatedBetsOnline.HasValue ?
                new ObjectParameter("prmDuplicatedBetsOnline", prmDuplicatedBetsOnline) :
                new ObjectParameter("prmDuplicatedBetsOnline", typeof(bool));
    
            var prmScheduleFBParameter = prmScheduleFB.HasValue ?
                new ObjectParameter("prmScheduleFB", prmScheduleFB) :
                new ObjectParameter("prmScheduleFB", typeof(bool));
    
            var prmScheduleBBParameter = prmScheduleBB.HasValue ?
                new ObjectParameter("prmScheduleBB", prmScheduleBB) :
                new ObjectParameter("prmScheduleBB", typeof(bool));
    
            var prmScheduleHKParameter = prmScheduleHK.HasValue ?
                new ObjectParameter("prmScheduleHK", prmScheduleHK) :
                new ObjectParameter("prmScheduleHK", typeof(bool));
    
            var prmScheduleBSParameter = prmScheduleBS.HasValue ?
                new ObjectParameter("prmScheduleBS", prmScheduleBS) :
                new ObjectParameter("prmScheduleBS", typeof(bool));
    
            var prmSettledFigureParameter = prmSettledFigure.HasValue ?
                new ObjectParameter("prmSettledFigure", prmSettledFigure) :
                new ObjectParameter("prmSettledFigure", typeof(decimal));
    
            var prmShowInTickerParameter = prmShowInTicker.HasValue ?
                new ObjectParameter("prmShowInTicker", prmShowInTicker) :
                new ObjectParameter("prmShowInTicker", typeof(bool));
    
            var prmEPOSPlayerParameter = prmEPOSPlayer.HasValue ?
                new ObjectParameter("prmEPOSPlayer", prmEPOSPlayer) :
                new ObjectParameter("prmEPOSPlayer", typeof(bool));
    
            var prmEnableSportsParameter = prmEnableSports.HasValue ?
                new ObjectParameter("prmEnableSports", prmEnableSports) :
                new ObjectParameter("prmEnableSports", typeof(bool));
    
            var prmEnableCasinoParameter = prmEnableCasino.HasValue ?
                new ObjectParameter("prmEnableCasino", prmEnableCasino) :
                new ObjectParameter("prmEnableCasino", typeof(bool));
    
            var prmEnableHorsesParameter = prmEnableHorses.HasValue ?
                new ObjectParameter("prmEnableHorses", prmEnableHorses) :
                new ObjectParameter("prmEnableHorses", typeof(bool));
    
            var prmDateOfBirthParameter = prmDateOfBirth.HasValue ?
                new ObjectParameter("prmDateOfBirth", prmDateOfBirth) :
                new ObjectParameter("prmDateOfBirth", typeof(System.DateTime));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMaintenanceNT", prmInsertParameter, prmIdLineTypeParameter, prmIdOfficeParameter, prmIdAgentParameter, prmIdCurrencyParameter, prmIdGroupingParameter, prmIdSourceParameter, prmIdProfileParameter, prmIdPlayerRateParameter, prmIdBookParameter, prmPlayerParameter, prmPasswordParameter, prmNameParameter, prmLastNameParameter, prmTitleParameter, prmAddress1Parameter, prmAddress2Parameter, prmCityParameter, prmStateParameter, prmCountryParameter, prmZipParameter, prmPhoneParameter, prmFaxParameter, prmEmailParameter, prmStatusParameter, prmAutoPayParameter, prmBalanceCheckedParameter, prmCreditLimitParameter, prmNoLimitParameter, prmTempCreditParameter, prmSoftLimitPercentParameter, prmTempCreditExpireParameter, prmOnlineAccessParameter, prmOnlinePasswordParameter, prmOnlineMessageParameter, prmOnlineMaxWagerParameter, prmOnlineMinWagerParameter, prmMaxWagerParameter, prmMinWagerParameter, prmChartPercentParameter, prmMasterChartParameter, prmMasterParameter, prmIdFlagMessageTypeParameter, prmMaxActionPointsParameter, prmBonusPointsStatusParameter, prmBonusPointsExpireParameter, prmBonusPointsStartParameter, prmLineStyleParameter, prmNHLLineParameter, prmMLBLineParameter, prmPitcherDefaultParameter, prmDuplicatedBetsParameter, prmDuplicatedBetsOnlineParameter, prmScheduleFBParameter, prmScheduleBBParameter, prmScheduleHKParameter, prmScheduleBSParameter, prmSettledFigureParameter, prmShowInTickerParameter, prmEPOSPlayerParameter, prmEnableSportsParameter, prmEnableCasinoParameter, prmEnableHorsesParameter, prmDateOfBirthParameter, prmIdUserParameter, prmOutIdPlayer);
        }
    
        public virtual int PlayerMessages_Delete(Nullable<int> prmIdPlayer, Nullable<int> prmIdPlayerMessage, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdPlayerMessageParameter = prmIdPlayerMessage.HasValue ?
                new ObjectParameter("prmIdPlayerMessage", prmIdPlayerMessage) :
                new ObjectParameter("prmIdPlayerMessage", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMessages_Delete", prmIdPlayerParameter, prmIdPlayerMessageParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<PlayerMessages_GetInfo_Result> PlayerMessages_GetInfo(Nullable<int> prmIdPlayerMessage)
        {
            var prmIdPlayerMessageParameter = prmIdPlayerMessage.HasValue ?
                new ObjectParameter("prmIdPlayerMessage", prmIdPlayerMessage) :
                new ObjectParameter("prmIdPlayerMessage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerMessages_GetInfo_Result>("PlayerMessages_GetInfo", prmIdPlayerMessageParameter);
        }
    
        public virtual ObjectResult<PlayerMessages_GetList_Result> PlayerMessages_GetList(Nullable<int> prmIdPlayer)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerMessages_GetList_Result>("PlayerMessages_GetList", prmIdPlayerParameter);
        }
    
        public virtual ObjectResult<PlayerMessages_GetPlayers_Result> PlayerMessages_GetPlayers(Nullable<byte> prmOrderBy, Nullable<int> prmIdPlayer, Nullable<short> prmIdLineType, Nullable<short> prmIdBook, Nullable<short> prmIdProfile, Nullable<short> prmIdProfileLimits, Nullable<int> prmIdAgent, Nullable<byte> prmIdOffice, Nullable<short> prmIdGrouping, Nullable<byte> prmIdPlayerRate)
        {
            var prmOrderByParameter = prmOrderBy.HasValue ?
                new ObjectParameter("prmOrderBy", prmOrderBy) :
                new ObjectParameter("prmOrderBy", typeof(byte));
    
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmIdLineTypeParameter = prmIdLineType.HasValue ?
                new ObjectParameter("prmIdLineType", prmIdLineType) :
                new ObjectParameter("prmIdLineType", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdProfileLimitsParameter = prmIdProfileLimits.HasValue ?
                new ObjectParameter("prmIdProfileLimits", prmIdProfileLimits) :
                new ObjectParameter("prmIdProfileLimits", typeof(short));
    
            var prmIdAgentParameter = prmIdAgent.HasValue ?
                new ObjectParameter("prmIdAgent", prmIdAgent) :
                new ObjectParameter("prmIdAgent", typeof(int));
    
            var prmIdOfficeParameter = prmIdOffice.HasValue ?
                new ObjectParameter("prmIdOffice", prmIdOffice) :
                new ObjectParameter("prmIdOffice", typeof(byte));
    
            var prmIdGroupingParameter = prmIdGrouping.HasValue ?
                new ObjectParameter("prmIdGrouping", prmIdGrouping) :
                new ObjectParameter("prmIdGrouping", typeof(short));
    
            var prmIdPlayerRateParameter = prmIdPlayerRate.HasValue ?
                new ObjectParameter("prmIdPlayerRate", prmIdPlayerRate) :
                new ObjectParameter("prmIdPlayerRate", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerMessages_GetPlayers_Result>("PlayerMessages_GetPlayers", prmOrderByParameter, prmIdPlayerParameter, prmIdLineTypeParameter, prmIdBookParameter, prmIdProfileParameter, prmIdProfileLimitsParameter, prmIdAgentParameter, prmIdOfficeParameter, prmIdGroupingParameter, prmIdPlayerRateParameter);
        }
    
        public virtual int PlayerMessages_Insert(Nullable<int> prmIdPlayer, string prmMessage, Nullable<bool> prmMessageType, Nullable<bool> prmUseExpirationDate, Nullable<bool> prmUseDisplayCounter, Nullable<bool> prmUseCloseOption, Nullable<System.DateTime> prmExpirationDate, Nullable<byte> prmDisplayCounter, Nullable<short> prmIdUser)
        {
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmMessageParameter = prmMessage != null ?
                new ObjectParameter("prmMessage", prmMessage) :
                new ObjectParameter("prmMessage", typeof(string));
    
            var prmMessageTypeParameter = prmMessageType.HasValue ?
                new ObjectParameter("prmMessageType", prmMessageType) :
                new ObjectParameter("prmMessageType", typeof(bool));
    
            var prmUseExpirationDateParameter = prmUseExpirationDate.HasValue ?
                new ObjectParameter("prmUseExpirationDate", prmUseExpirationDate) :
                new ObjectParameter("prmUseExpirationDate", typeof(bool));
    
            var prmUseDisplayCounterParameter = prmUseDisplayCounter.HasValue ?
                new ObjectParameter("prmUseDisplayCounter", prmUseDisplayCounter) :
                new ObjectParameter("prmUseDisplayCounter", typeof(bool));
    
            var prmUseCloseOptionParameter = prmUseCloseOption.HasValue ?
                new ObjectParameter("prmUseCloseOption", prmUseCloseOption) :
                new ObjectParameter("prmUseCloseOption", typeof(bool));
    
            var prmExpirationDateParameter = prmExpirationDate.HasValue ?
                new ObjectParameter("prmExpirationDate", prmExpirationDate) :
                new ObjectParameter("prmExpirationDate", typeof(System.DateTime));
    
            var prmDisplayCounterParameter = prmDisplayCounter.HasValue ?
                new ObjectParameter("prmDisplayCounter", prmDisplayCounter) :
                new ObjectParameter("prmDisplayCounter", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMessages_Insert", prmIdPlayerParameter, prmMessageParameter, prmMessageTypeParameter, prmUseExpirationDateParameter, prmUseDisplayCounterParameter, prmUseCloseOptionParameter, prmExpirationDateParameter, prmDisplayCounterParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerMessages_Purge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMessages_Purge");
        }
    
        public virtual int PlayerMessages_Update(Nullable<int> prmIdPlayerMessage, Nullable<int> prmIdPlayer, string prmMessage, Nullable<bool> prmMessageType, Nullable<bool> prmUseExpirationDate, Nullable<bool> prmUseDisplayCounter, Nullable<bool> prmUseCloseOption, Nullable<System.DateTime> prmExpirationDate, Nullable<byte> prmDisplayCounter, Nullable<short> prmIdUser)
        {
            var prmIdPlayerMessageParameter = prmIdPlayerMessage.HasValue ?
                new ObjectParameter("prmIdPlayerMessage", prmIdPlayerMessage) :
                new ObjectParameter("prmIdPlayerMessage", typeof(int));
    
            var prmIdPlayerParameter = prmIdPlayer.HasValue ?
                new ObjectParameter("prmIdPlayer", prmIdPlayer) :
                new ObjectParameter("prmIdPlayer", typeof(int));
    
            var prmMessageParameter = prmMessage != null ?
                new ObjectParameter("prmMessage", prmMessage) :
                new ObjectParameter("prmMessage", typeof(string));
    
            var prmMessageTypeParameter = prmMessageType.HasValue ?
                new ObjectParameter("prmMessageType", prmMessageType) :
                new ObjectParameter("prmMessageType", typeof(bool));
    
            var prmUseExpirationDateParameter = prmUseExpirationDate.HasValue ?
                new ObjectParameter("prmUseExpirationDate", prmUseExpirationDate) :
                new ObjectParameter("prmUseExpirationDate", typeof(bool));
    
            var prmUseDisplayCounterParameter = prmUseDisplayCounter.HasValue ?
                new ObjectParameter("prmUseDisplayCounter", prmUseDisplayCounter) :
                new ObjectParameter("prmUseDisplayCounter", typeof(bool));
    
            var prmUseCloseOptionParameter = prmUseCloseOption.HasValue ?
                new ObjectParameter("prmUseCloseOption", prmUseCloseOption) :
                new ObjectParameter("prmUseCloseOption", typeof(bool));
    
            var prmExpirationDateParameter = prmExpirationDate.HasValue ?
                new ObjectParameter("prmExpirationDate", prmExpirationDate) :
                new ObjectParameter("prmExpirationDate", typeof(System.DateTime));
    
            var prmDisplayCounterParameter = prmDisplayCounter.HasValue ?
                new ObjectParameter("prmDisplayCounter", prmDisplayCounter) :
                new ObjectParameter("prmDisplayCounter", typeof(byte));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerMessages_Update", prmIdPlayerMessageParameter, prmIdPlayerParameter, prmMessageParameter, prmMessageTypeParameter, prmUseExpirationDateParameter, prmUseDisplayCounterParameter, prmUseCloseOptionParameter, prmExpirationDateParameter, prmDisplayCounterParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfile_Clone(Nullable<short> prmIdProfile, string prmNewName, Nullable<short> prmIdBook, Nullable<short> prmIdUser)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmNewNameParameter = prmNewName != null ?
                new ObjectParameter("prmNewName", prmNewName) :
                new ObjectParameter("prmNewName", typeof(string));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfile_Clone", prmIdProfileParameter, prmNewNameParameter, prmIdBookParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfile_Delete(Nullable<int> prmIdProfile, Nullable<short> prmIdUser)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(int));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfile_Delete", prmIdProfileParameter, prmIdUserParameter);
        }
    
        public virtual ObjectResult<PlayerProfile_GetInfo_Result> PlayerProfile_GetInfo(Nullable<short> prmIdProfile)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerProfile_GetInfo_Result>("PlayerProfile_GetInfo", prmIdProfileParameter);
        }
    
        public virtual ObjectResult<PlayerProfile_GetList_Result> PlayerProfile_GetList(Nullable<short> prmIdUser)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerProfile_GetList_Result>("PlayerProfile_GetList", prmIdUserParameter);
        }
    
        public virtual ObjectResult<PlayerProfile_GetListByBook_Result> PlayerProfile_GetListByBook(Nullable<short> prmIdBook)
        {
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerProfile_GetListByBook_Result>("PlayerProfile_GetListByBook", prmIdBookParameter);
        }
    
        public virtual ObjectResult<PlayerProfile_GetListFiltered_Result> PlayerProfile_GetListFiltered(string prmFilter)
        {
            var prmFilterParameter = prmFilter != null ?
                new ObjectParameter("prmFilter", prmFilter) :
                new ObjectParameter("prmFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlayerProfile_GetListFiltered_Result>("PlayerProfile_GetListFiltered", prmFilterParameter);
        }
    
        public virtual int PlayerProfile_Insert(string prmName, Nullable<short> prmIdBook, Nullable<short> prmIdUser)
        {
            var prmNameParameter = prmName != null ?
                new ObjectParameter("prmName", prmName) :
                new ObjectParameter("prmName", typeof(string));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfile_Insert", prmNameParameter, prmIdBookParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfile_Update(Nullable<short> prmIdProfile, string prmProfileName, string prmNotes, Nullable<short> prmAlternateProfile, Nullable<bool> prmAlternateEnable, Nullable<byte> prmPromotionPoints, Nullable<bool> prmSL_AddSurcharge_3pts, Nullable<bool> prmSL_AddSurcharge_7pts, Nullable<bool> prmSL_IfBets, Nullable<bool> prmSL_SkipHalfPointNBA, Nullable<bool> prmSL_SkipHalfPointCBB, Nullable<bool> prmSL_SkipHalfPointCFB, Nullable<bool> prmSL_SkipHalfPointNFL, Nullable<bool> prmSL_CanBuyOn3NFL, Nullable<bool> prmSL_CanBuyOn3CFB, Nullable<bool> prmSL_CanBuyOff3NFL, Nullable<bool> prmSL_CanBuyOff3CFB, Nullable<bool> prmSL_CanBuyOn7NFL, Nullable<bool> prmSL_CanBuyOn7CFB, Nullable<bool> prmSL_CanBuyOff7NFL, Nullable<bool> prmSL_CanBuyOff7CFB, Nullable<bool> prmSL_AlwaysActionMLBTotals, Nullable<byte> prmPL_MaxGames, Nullable<bool> prmPL_AllowProps, Nullable<bool> prmPL_AllowGolf, Nullable<bool> prmPL_AllowMatchUps, Nullable<bool> prmPL_NoListedPitchers, Nullable<short> prmPL_Juice2TeamParlay, Nullable<bool> prmPL_TrueOddsOption, Nullable<int> prmPL_MaxOdds, Nullable<decimal> prmPL_MaxPayout, Nullable<byte> prmPL_MaxTeamBuyPoints, Nullable<float> prmPL_MaxBuyPoints, Nullable<bool> prmPL_AlwaysAction, Nullable<bool> prmPL_AllowRunLineTotal, Nullable<bool> prmPL_AllowSpreadTotalHK, Nullable<bool> prmPL_AllowSpreadTotalSOC, Nullable<bool> prmPL_TieLoses, Nullable<byte> prmPL_ParlayFormula, Nullable<bool> prmPL_AllowOpenPlays, Nullable<int> prmPL_OddsDefault, Nullable<bool> prmPL_LowerUseDefault, Nullable<bool> prmPL_MaxDogsSide, Nullable<bool> prmPL_MaxDogsTotal, Nullable<bool> prmPL_MaxDogsMoney, Nullable<bool> prmPL_UseMaxSumOdds, Nullable<int> prmPL_MaxSumOdds, Nullable<byte> prmIL_MaxParlays, Nullable<byte> prmIL_MaxLevelParlays, Nullable<byte> prmIL_MaxTeasers, Nullable<byte> prmIL_MaxLevelTeasers, Nullable<byte> prmIL_MaxNumberSB, Nullable<bool> prmIL_AskAmount, Nullable<bool> prmIL_AllowChildHigher, Nullable<int> prmILOddsLimits, Nullable<byte> prmPC_PitcherChangeType, Nullable<bool> prmTL_OpenLose, Nullable<bool> prmTL_TeaserCancel, Nullable<bool> prmSG_CancelSide, Nullable<bool> prmSG_CancelTotal, Nullable<bool> prmSG_CancelRunLine, Nullable<bool> prmPC_SkipSide, Nullable<bool> prmPC_SkipTotal, Nullable<bool> prmPC_SkipRunLine, Nullable<bool> prmSoc_Hookups, Nullable<bool> prmRev_AllowOpen, Nullable<bool> prmDuplicateBetsCheckLineChange, Nullable<bool> prmDuplicateBetsCheckParlays, Nullable<bool> prmDuplicateBetsCheckTeasers, Nullable<bool> prmDuplicateBetsCheckReverses, Nullable<bool> prmDuplicateBetsCheckIfbets, Nullable<bool> prmDuplicateBetsCheckIfSBRev, Nullable<bool> prmDuplicateBetsCheckParlaysSB, Nullable<bool> prmDuplicateBetsCheckTeasersSB, Nullable<bool> prmDuplicateBetsCheckSameParlay, Nullable<bool> prmDuplicateBetsCheckSameTeaser, Nullable<bool> prmFPAllowBothSides, Nullable<bool> prmFPAllowDuplicatedBets, Nullable<bool> prmFPCheckOfficeFilters, Nullable<byte> prmFPMaxFav, Nullable<decimal> prmFPMaxPayout, Nullable<byte> prmFPMaxTeams, Nullable<int> prmFPOddsLimit, Nullable<decimal> prmCLMaxWager, Nullable<bool> prmPL_PSTotalCheck, Nullable<double> prmPL_PSTotalValue, Nullable<bool> prmPL_UseWideLine, Nullable<short> prmIdUser)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmProfileNameParameter = prmProfileName != null ?
                new ObjectParameter("prmProfileName", prmProfileName) :
                new ObjectParameter("prmProfileName", typeof(string));
    
            var prmNotesParameter = prmNotes != null ?
                new ObjectParameter("prmNotes", prmNotes) :
                new ObjectParameter("prmNotes", typeof(string));
    
            var prmAlternateProfileParameter = prmAlternateProfile.HasValue ?
                new ObjectParameter("prmAlternateProfile", prmAlternateProfile) :
                new ObjectParameter("prmAlternateProfile", typeof(short));
    
            var prmAlternateEnableParameter = prmAlternateEnable.HasValue ?
                new ObjectParameter("prmAlternateEnable", prmAlternateEnable) :
                new ObjectParameter("prmAlternateEnable", typeof(bool));
    
            var prmPromotionPointsParameter = prmPromotionPoints.HasValue ?
                new ObjectParameter("prmPromotionPoints", prmPromotionPoints) :
                new ObjectParameter("prmPromotionPoints", typeof(byte));
    
            var prmSL_AddSurcharge_3ptsParameter = prmSL_AddSurcharge_3pts.HasValue ?
                new ObjectParameter("prmSL_AddSurcharge_3pts", prmSL_AddSurcharge_3pts) :
                new ObjectParameter("prmSL_AddSurcharge_3pts", typeof(bool));
    
            var prmSL_AddSurcharge_7ptsParameter = prmSL_AddSurcharge_7pts.HasValue ?
                new ObjectParameter("prmSL_AddSurcharge_7pts", prmSL_AddSurcharge_7pts) :
                new ObjectParameter("prmSL_AddSurcharge_7pts", typeof(bool));
    
            var prmSL_IfBetsParameter = prmSL_IfBets.HasValue ?
                new ObjectParameter("prmSL_IfBets", prmSL_IfBets) :
                new ObjectParameter("prmSL_IfBets", typeof(bool));
    
            var prmSL_SkipHalfPointNBAParameter = prmSL_SkipHalfPointNBA.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointNBA", prmSL_SkipHalfPointNBA) :
                new ObjectParameter("prmSL_SkipHalfPointNBA", typeof(bool));
    
            var prmSL_SkipHalfPointCBBParameter = prmSL_SkipHalfPointCBB.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointCBB", prmSL_SkipHalfPointCBB) :
                new ObjectParameter("prmSL_SkipHalfPointCBB", typeof(bool));
    
            var prmSL_SkipHalfPointCFBParameter = prmSL_SkipHalfPointCFB.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointCFB", prmSL_SkipHalfPointCFB) :
                new ObjectParameter("prmSL_SkipHalfPointCFB", typeof(bool));
    
            var prmSL_SkipHalfPointNFLParameter = prmSL_SkipHalfPointNFL.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointNFL", prmSL_SkipHalfPointNFL) :
                new ObjectParameter("prmSL_SkipHalfPointNFL", typeof(bool));
    
            var prmSL_CanBuyOn3NFLParameter = prmSL_CanBuyOn3NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn3NFL", prmSL_CanBuyOn3NFL) :
                new ObjectParameter("prmSL_CanBuyOn3NFL", typeof(bool));
    
            var prmSL_CanBuyOn3CFBParameter = prmSL_CanBuyOn3CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn3CFB", prmSL_CanBuyOn3CFB) :
                new ObjectParameter("prmSL_CanBuyOn3CFB", typeof(bool));
    
            var prmSL_CanBuyOff3NFLParameter = prmSL_CanBuyOff3NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff3NFL", prmSL_CanBuyOff3NFL) :
                new ObjectParameter("prmSL_CanBuyOff3NFL", typeof(bool));
    
            var prmSL_CanBuyOff3CFBParameter = prmSL_CanBuyOff3CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff3CFB", prmSL_CanBuyOff3CFB) :
                new ObjectParameter("prmSL_CanBuyOff3CFB", typeof(bool));
    
            var prmSL_CanBuyOn7NFLParameter = prmSL_CanBuyOn7NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn7NFL", prmSL_CanBuyOn7NFL) :
                new ObjectParameter("prmSL_CanBuyOn7NFL", typeof(bool));
    
            var prmSL_CanBuyOn7CFBParameter = prmSL_CanBuyOn7CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn7CFB", prmSL_CanBuyOn7CFB) :
                new ObjectParameter("prmSL_CanBuyOn7CFB", typeof(bool));
    
            var prmSL_CanBuyOff7NFLParameter = prmSL_CanBuyOff7NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff7NFL", prmSL_CanBuyOff7NFL) :
                new ObjectParameter("prmSL_CanBuyOff7NFL", typeof(bool));
    
            var prmSL_CanBuyOff7CFBParameter = prmSL_CanBuyOff7CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff7CFB", prmSL_CanBuyOff7CFB) :
                new ObjectParameter("prmSL_CanBuyOff7CFB", typeof(bool));
    
            var prmSL_AlwaysActionMLBTotalsParameter = prmSL_AlwaysActionMLBTotals.HasValue ?
                new ObjectParameter("prmSL_AlwaysActionMLBTotals", prmSL_AlwaysActionMLBTotals) :
                new ObjectParameter("prmSL_AlwaysActionMLBTotals", typeof(bool));
    
            var prmPL_MaxGamesParameter = prmPL_MaxGames.HasValue ?
                new ObjectParameter("prmPL_MaxGames", prmPL_MaxGames) :
                new ObjectParameter("prmPL_MaxGames", typeof(byte));
    
            var prmPL_AllowPropsParameter = prmPL_AllowProps.HasValue ?
                new ObjectParameter("prmPL_AllowProps", prmPL_AllowProps) :
                new ObjectParameter("prmPL_AllowProps", typeof(bool));
    
            var prmPL_AllowGolfParameter = prmPL_AllowGolf.HasValue ?
                new ObjectParameter("prmPL_AllowGolf", prmPL_AllowGolf) :
                new ObjectParameter("prmPL_AllowGolf", typeof(bool));
    
            var prmPL_AllowMatchUpsParameter = prmPL_AllowMatchUps.HasValue ?
                new ObjectParameter("prmPL_AllowMatchUps", prmPL_AllowMatchUps) :
                new ObjectParameter("prmPL_AllowMatchUps", typeof(bool));
    
            var prmPL_NoListedPitchersParameter = prmPL_NoListedPitchers.HasValue ?
                new ObjectParameter("prmPL_NoListedPitchers", prmPL_NoListedPitchers) :
                new ObjectParameter("prmPL_NoListedPitchers", typeof(bool));
    
            var prmPL_Juice2TeamParlayParameter = prmPL_Juice2TeamParlay.HasValue ?
                new ObjectParameter("prmPL_Juice2TeamParlay", prmPL_Juice2TeamParlay) :
                new ObjectParameter("prmPL_Juice2TeamParlay", typeof(short));
    
            var prmPL_TrueOddsOptionParameter = prmPL_TrueOddsOption.HasValue ?
                new ObjectParameter("prmPL_TrueOddsOption", prmPL_TrueOddsOption) :
                new ObjectParameter("prmPL_TrueOddsOption", typeof(bool));
    
            var prmPL_MaxOddsParameter = prmPL_MaxOdds.HasValue ?
                new ObjectParameter("prmPL_MaxOdds", prmPL_MaxOdds) :
                new ObjectParameter("prmPL_MaxOdds", typeof(int));
    
            var prmPL_MaxPayoutParameter = prmPL_MaxPayout.HasValue ?
                new ObjectParameter("prmPL_MaxPayout", prmPL_MaxPayout) :
                new ObjectParameter("prmPL_MaxPayout", typeof(decimal));
    
            var prmPL_MaxTeamBuyPointsParameter = prmPL_MaxTeamBuyPoints.HasValue ?
                new ObjectParameter("prmPL_MaxTeamBuyPoints", prmPL_MaxTeamBuyPoints) :
                new ObjectParameter("prmPL_MaxTeamBuyPoints", typeof(byte));
    
            var prmPL_MaxBuyPointsParameter = prmPL_MaxBuyPoints.HasValue ?
                new ObjectParameter("prmPL_MaxBuyPoints", prmPL_MaxBuyPoints) :
                new ObjectParameter("prmPL_MaxBuyPoints", typeof(float));
    
            var prmPL_AlwaysActionParameter = prmPL_AlwaysAction.HasValue ?
                new ObjectParameter("prmPL_AlwaysAction", prmPL_AlwaysAction) :
                new ObjectParameter("prmPL_AlwaysAction", typeof(bool));
    
            var prmPL_AllowRunLineTotalParameter = prmPL_AllowRunLineTotal.HasValue ?
                new ObjectParameter("prmPL_AllowRunLineTotal", prmPL_AllowRunLineTotal) :
                new ObjectParameter("prmPL_AllowRunLineTotal", typeof(bool));
    
            var prmPL_AllowSpreadTotalHKParameter = prmPL_AllowSpreadTotalHK.HasValue ?
                new ObjectParameter("prmPL_AllowSpreadTotalHK", prmPL_AllowSpreadTotalHK) :
                new ObjectParameter("prmPL_AllowSpreadTotalHK", typeof(bool));
    
            var prmPL_AllowSpreadTotalSOCParameter = prmPL_AllowSpreadTotalSOC.HasValue ?
                new ObjectParameter("prmPL_AllowSpreadTotalSOC", prmPL_AllowSpreadTotalSOC) :
                new ObjectParameter("prmPL_AllowSpreadTotalSOC", typeof(bool));
    
            var prmPL_TieLosesParameter = prmPL_TieLoses.HasValue ?
                new ObjectParameter("prmPL_TieLoses", prmPL_TieLoses) :
                new ObjectParameter("prmPL_TieLoses", typeof(bool));
    
            var prmPL_ParlayFormulaParameter = prmPL_ParlayFormula.HasValue ?
                new ObjectParameter("prmPL_ParlayFormula", prmPL_ParlayFormula) :
                new ObjectParameter("prmPL_ParlayFormula", typeof(byte));
    
            var prmPL_AllowOpenPlaysParameter = prmPL_AllowOpenPlays.HasValue ?
                new ObjectParameter("prmPL_AllowOpenPlays", prmPL_AllowOpenPlays) :
                new ObjectParameter("prmPL_AllowOpenPlays", typeof(bool));
    
            var prmPL_OddsDefaultParameter = prmPL_OddsDefault.HasValue ?
                new ObjectParameter("prmPL_OddsDefault", prmPL_OddsDefault) :
                new ObjectParameter("prmPL_OddsDefault", typeof(int));
    
            var prmPL_LowerUseDefaultParameter = prmPL_LowerUseDefault.HasValue ?
                new ObjectParameter("prmPL_LowerUseDefault", prmPL_LowerUseDefault) :
                new ObjectParameter("prmPL_LowerUseDefault", typeof(bool));
    
            var prmPL_MaxDogsSideParameter = prmPL_MaxDogsSide.HasValue ?
                new ObjectParameter("prmPL_MaxDogsSide", prmPL_MaxDogsSide) :
                new ObjectParameter("prmPL_MaxDogsSide", typeof(bool));
    
            var prmPL_MaxDogsTotalParameter = prmPL_MaxDogsTotal.HasValue ?
                new ObjectParameter("prmPL_MaxDogsTotal", prmPL_MaxDogsTotal) :
                new ObjectParameter("prmPL_MaxDogsTotal", typeof(bool));
    
            var prmPL_MaxDogsMoneyParameter = prmPL_MaxDogsMoney.HasValue ?
                new ObjectParameter("prmPL_MaxDogsMoney", prmPL_MaxDogsMoney) :
                new ObjectParameter("prmPL_MaxDogsMoney", typeof(bool));
    
            var prmPL_UseMaxSumOddsParameter = prmPL_UseMaxSumOdds.HasValue ?
                new ObjectParameter("prmPL_UseMaxSumOdds", prmPL_UseMaxSumOdds) :
                new ObjectParameter("prmPL_UseMaxSumOdds", typeof(bool));
    
            var prmPL_MaxSumOddsParameter = prmPL_MaxSumOdds.HasValue ?
                new ObjectParameter("prmPL_MaxSumOdds", prmPL_MaxSumOdds) :
                new ObjectParameter("prmPL_MaxSumOdds", typeof(int));
    
            var prmIL_MaxParlaysParameter = prmIL_MaxParlays.HasValue ?
                new ObjectParameter("prmIL_MaxParlays", prmIL_MaxParlays) :
                new ObjectParameter("prmIL_MaxParlays", typeof(byte));
    
            var prmIL_MaxLevelParlaysParameter = prmIL_MaxLevelParlays.HasValue ?
                new ObjectParameter("prmIL_MaxLevelParlays", prmIL_MaxLevelParlays) :
                new ObjectParameter("prmIL_MaxLevelParlays", typeof(byte));
    
            var prmIL_MaxTeasersParameter = prmIL_MaxTeasers.HasValue ?
                new ObjectParameter("prmIL_MaxTeasers", prmIL_MaxTeasers) :
                new ObjectParameter("prmIL_MaxTeasers", typeof(byte));
    
            var prmIL_MaxLevelTeasersParameter = prmIL_MaxLevelTeasers.HasValue ?
                new ObjectParameter("prmIL_MaxLevelTeasers", prmIL_MaxLevelTeasers) :
                new ObjectParameter("prmIL_MaxLevelTeasers", typeof(byte));
    
            var prmIL_MaxNumberSBParameter = prmIL_MaxNumberSB.HasValue ?
                new ObjectParameter("prmIL_MaxNumberSB", prmIL_MaxNumberSB) :
                new ObjectParameter("prmIL_MaxNumberSB", typeof(byte));
    
            var prmIL_AskAmountParameter = prmIL_AskAmount.HasValue ?
                new ObjectParameter("prmIL_AskAmount", prmIL_AskAmount) :
                new ObjectParameter("prmIL_AskAmount", typeof(bool));
    
            var prmIL_AllowChildHigherParameter = prmIL_AllowChildHigher.HasValue ?
                new ObjectParameter("prmIL_AllowChildHigher", prmIL_AllowChildHigher) :
                new ObjectParameter("prmIL_AllowChildHigher", typeof(bool));
    
            var prmILOddsLimitsParameter = prmILOddsLimits.HasValue ?
                new ObjectParameter("prmILOddsLimits", prmILOddsLimits) :
                new ObjectParameter("prmILOddsLimits", typeof(int));
    
            var prmPC_PitcherChangeTypeParameter = prmPC_PitcherChangeType.HasValue ?
                new ObjectParameter("prmPC_PitcherChangeType", prmPC_PitcherChangeType) :
                new ObjectParameter("prmPC_PitcherChangeType", typeof(byte));
    
            var prmTL_OpenLoseParameter = prmTL_OpenLose.HasValue ?
                new ObjectParameter("prmTL_OpenLose", prmTL_OpenLose) :
                new ObjectParameter("prmTL_OpenLose", typeof(bool));
    
            var prmTL_TeaserCancelParameter = prmTL_TeaserCancel.HasValue ?
                new ObjectParameter("prmTL_TeaserCancel", prmTL_TeaserCancel) :
                new ObjectParameter("prmTL_TeaserCancel", typeof(bool));
    
            var prmSG_CancelSideParameter = prmSG_CancelSide.HasValue ?
                new ObjectParameter("prmSG_CancelSide", prmSG_CancelSide) :
                new ObjectParameter("prmSG_CancelSide", typeof(bool));
    
            var prmSG_CancelTotalParameter = prmSG_CancelTotal.HasValue ?
                new ObjectParameter("prmSG_CancelTotal", prmSG_CancelTotal) :
                new ObjectParameter("prmSG_CancelTotal", typeof(bool));
    
            var prmSG_CancelRunLineParameter = prmSG_CancelRunLine.HasValue ?
                new ObjectParameter("prmSG_CancelRunLine", prmSG_CancelRunLine) :
                new ObjectParameter("prmSG_CancelRunLine", typeof(bool));
    
            var prmPC_SkipSideParameter = prmPC_SkipSide.HasValue ?
                new ObjectParameter("prmPC_SkipSide", prmPC_SkipSide) :
                new ObjectParameter("prmPC_SkipSide", typeof(bool));
    
            var prmPC_SkipTotalParameter = prmPC_SkipTotal.HasValue ?
                new ObjectParameter("prmPC_SkipTotal", prmPC_SkipTotal) :
                new ObjectParameter("prmPC_SkipTotal", typeof(bool));
    
            var prmPC_SkipRunLineParameter = prmPC_SkipRunLine.HasValue ?
                new ObjectParameter("prmPC_SkipRunLine", prmPC_SkipRunLine) :
                new ObjectParameter("prmPC_SkipRunLine", typeof(bool));
    
            var prmSoc_HookupsParameter = prmSoc_Hookups.HasValue ?
                new ObjectParameter("prmSoc_Hookups", prmSoc_Hookups) :
                new ObjectParameter("prmSoc_Hookups", typeof(bool));
    
            var prmRev_AllowOpenParameter = prmRev_AllowOpen.HasValue ?
                new ObjectParameter("prmRev_AllowOpen", prmRev_AllowOpen) :
                new ObjectParameter("prmRev_AllowOpen", typeof(bool));
    
            var prmDuplicateBetsCheckLineChangeParameter = prmDuplicateBetsCheckLineChange.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckLineChange", prmDuplicateBetsCheckLineChange) :
                new ObjectParameter("prmDuplicateBetsCheckLineChange", typeof(bool));
    
            var prmDuplicateBetsCheckParlaysParameter = prmDuplicateBetsCheckParlays.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckParlays", prmDuplicateBetsCheckParlays) :
                new ObjectParameter("prmDuplicateBetsCheckParlays", typeof(bool));
    
            var prmDuplicateBetsCheckTeasersParameter = prmDuplicateBetsCheckTeasers.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckTeasers", prmDuplicateBetsCheckTeasers) :
                new ObjectParameter("prmDuplicateBetsCheckTeasers", typeof(bool));
    
            var prmDuplicateBetsCheckReversesParameter = prmDuplicateBetsCheckReverses.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckReverses", prmDuplicateBetsCheckReverses) :
                new ObjectParameter("prmDuplicateBetsCheckReverses", typeof(bool));
    
            var prmDuplicateBetsCheckIfbetsParameter = prmDuplicateBetsCheckIfbets.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckIfbets", prmDuplicateBetsCheckIfbets) :
                new ObjectParameter("prmDuplicateBetsCheckIfbets", typeof(bool));
    
            var prmDuplicateBetsCheckIfSBRevParameter = prmDuplicateBetsCheckIfSBRev.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckIfSBRev", prmDuplicateBetsCheckIfSBRev) :
                new ObjectParameter("prmDuplicateBetsCheckIfSBRev", typeof(bool));
    
            var prmDuplicateBetsCheckParlaysSBParameter = prmDuplicateBetsCheckParlaysSB.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckParlaysSB", prmDuplicateBetsCheckParlaysSB) :
                new ObjectParameter("prmDuplicateBetsCheckParlaysSB", typeof(bool));
    
            var prmDuplicateBetsCheckTeasersSBParameter = prmDuplicateBetsCheckTeasersSB.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckTeasersSB", prmDuplicateBetsCheckTeasersSB) :
                new ObjectParameter("prmDuplicateBetsCheckTeasersSB", typeof(bool));
    
            var prmDuplicateBetsCheckSameParlayParameter = prmDuplicateBetsCheckSameParlay.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckSameParlay", prmDuplicateBetsCheckSameParlay) :
                new ObjectParameter("prmDuplicateBetsCheckSameParlay", typeof(bool));
    
            var prmDuplicateBetsCheckSameTeaserParameter = prmDuplicateBetsCheckSameTeaser.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckSameTeaser", prmDuplicateBetsCheckSameTeaser) :
                new ObjectParameter("prmDuplicateBetsCheckSameTeaser", typeof(bool));
    
            var prmFPAllowBothSidesParameter = prmFPAllowBothSides.HasValue ?
                new ObjectParameter("prmFPAllowBothSides", prmFPAllowBothSides) :
                new ObjectParameter("prmFPAllowBothSides", typeof(bool));
    
            var prmFPAllowDuplicatedBetsParameter = prmFPAllowDuplicatedBets.HasValue ?
                new ObjectParameter("prmFPAllowDuplicatedBets", prmFPAllowDuplicatedBets) :
                new ObjectParameter("prmFPAllowDuplicatedBets", typeof(bool));
    
            var prmFPCheckOfficeFiltersParameter = prmFPCheckOfficeFilters.HasValue ?
                new ObjectParameter("prmFPCheckOfficeFilters", prmFPCheckOfficeFilters) :
                new ObjectParameter("prmFPCheckOfficeFilters", typeof(bool));
    
            var prmFPMaxFavParameter = prmFPMaxFav.HasValue ?
                new ObjectParameter("prmFPMaxFav", prmFPMaxFav) :
                new ObjectParameter("prmFPMaxFav", typeof(byte));
    
            var prmFPMaxPayoutParameter = prmFPMaxPayout.HasValue ?
                new ObjectParameter("prmFPMaxPayout", prmFPMaxPayout) :
                new ObjectParameter("prmFPMaxPayout", typeof(decimal));
    
            var prmFPMaxTeamsParameter = prmFPMaxTeams.HasValue ?
                new ObjectParameter("prmFPMaxTeams", prmFPMaxTeams) :
                new ObjectParameter("prmFPMaxTeams", typeof(byte));
    
            var prmFPOddsLimitParameter = prmFPOddsLimit.HasValue ?
                new ObjectParameter("prmFPOddsLimit", prmFPOddsLimit) :
                new ObjectParameter("prmFPOddsLimit", typeof(int));
    
            var prmCLMaxWagerParameter = prmCLMaxWager.HasValue ?
                new ObjectParameter("prmCLMaxWager", prmCLMaxWager) :
                new ObjectParameter("prmCLMaxWager", typeof(decimal));
    
            var prmPL_PSTotalCheckParameter = prmPL_PSTotalCheck.HasValue ?
                new ObjectParameter("prmPL_PSTotalCheck", prmPL_PSTotalCheck) :
                new ObjectParameter("prmPL_PSTotalCheck", typeof(bool));
    
            var prmPL_PSTotalValueParameter = prmPL_PSTotalValue.HasValue ?
                new ObjectParameter("prmPL_PSTotalValue", prmPL_PSTotalValue) :
                new ObjectParameter("prmPL_PSTotalValue", typeof(double));
    
            var prmPL_UseWideLineParameter = prmPL_UseWideLine.HasValue ?
                new ObjectParameter("prmPL_UseWideLine", prmPL_UseWideLine) :
                new ObjectParameter("prmPL_UseWideLine", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfile_Update", prmIdProfileParameter, prmProfileNameParameter, prmNotesParameter, prmAlternateProfileParameter, prmAlternateEnableParameter, prmPromotionPointsParameter, prmSL_AddSurcharge_3ptsParameter, prmSL_AddSurcharge_7ptsParameter, prmSL_IfBetsParameter, prmSL_SkipHalfPointNBAParameter, prmSL_SkipHalfPointCBBParameter, prmSL_SkipHalfPointCFBParameter, prmSL_SkipHalfPointNFLParameter, prmSL_CanBuyOn3NFLParameter, prmSL_CanBuyOn3CFBParameter, prmSL_CanBuyOff3NFLParameter, prmSL_CanBuyOff3CFBParameter, prmSL_CanBuyOn7NFLParameter, prmSL_CanBuyOn7CFBParameter, prmSL_CanBuyOff7NFLParameter, prmSL_CanBuyOff7CFBParameter, prmSL_AlwaysActionMLBTotalsParameter, prmPL_MaxGamesParameter, prmPL_AllowPropsParameter, prmPL_AllowGolfParameter, prmPL_AllowMatchUpsParameter, prmPL_NoListedPitchersParameter, prmPL_Juice2TeamParlayParameter, prmPL_TrueOddsOptionParameter, prmPL_MaxOddsParameter, prmPL_MaxPayoutParameter, prmPL_MaxTeamBuyPointsParameter, prmPL_MaxBuyPointsParameter, prmPL_AlwaysActionParameter, prmPL_AllowRunLineTotalParameter, prmPL_AllowSpreadTotalHKParameter, prmPL_AllowSpreadTotalSOCParameter, prmPL_TieLosesParameter, prmPL_ParlayFormulaParameter, prmPL_AllowOpenPlaysParameter, prmPL_OddsDefaultParameter, prmPL_LowerUseDefaultParameter, prmPL_MaxDogsSideParameter, prmPL_MaxDogsTotalParameter, prmPL_MaxDogsMoneyParameter, prmPL_UseMaxSumOddsParameter, prmPL_MaxSumOddsParameter, prmIL_MaxParlaysParameter, prmIL_MaxLevelParlaysParameter, prmIL_MaxTeasersParameter, prmIL_MaxLevelTeasersParameter, prmIL_MaxNumberSBParameter, prmIL_AskAmountParameter, prmIL_AllowChildHigherParameter, prmILOddsLimitsParameter, prmPC_PitcherChangeTypeParameter, prmTL_OpenLoseParameter, prmTL_TeaserCancelParameter, prmSG_CancelSideParameter, prmSG_CancelTotalParameter, prmSG_CancelRunLineParameter, prmPC_SkipSideParameter, prmPC_SkipTotalParameter, prmPC_SkipRunLineParameter, prmSoc_HookupsParameter, prmRev_AllowOpenParameter, prmDuplicateBetsCheckLineChangeParameter, prmDuplicateBetsCheckParlaysParameter, prmDuplicateBetsCheckTeasersParameter, prmDuplicateBetsCheckReversesParameter, prmDuplicateBetsCheckIfbetsParameter, prmDuplicateBetsCheckIfSBRevParameter, prmDuplicateBetsCheckParlaysSBParameter, prmDuplicateBetsCheckTeasersSBParameter, prmDuplicateBetsCheckSameParlayParameter, prmDuplicateBetsCheckSameTeaserParameter, prmFPAllowBothSidesParameter, prmFPAllowDuplicatedBetsParameter, prmFPCheckOfficeFiltersParameter, prmFPMaxFavParameter, prmFPMaxPayoutParameter, prmFPMaxTeamsParameter, prmFPOddsLimitParameter, prmCLMaxWagerParameter, prmPL_PSTotalCheckParameter, prmPL_PSTotalValueParameter, prmPL_UseWideLineParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfile_UpdateByFields(Nullable<short> prmIdProfile, Nullable<bool> prmChangeSL_AddSurcharge_3pts, Nullable<bool> prmSL_AddSurcharge_3pts, Nullable<bool> prmChangeSL_AddSurcharge_7pts, Nullable<bool> prmSL_AddSurcharge_7pts, Nullable<bool> prmChangeSL_IfBets, Nullable<bool> prmSL_IfBets, Nullable<bool> prmChangeSL_SkipHalfPointNBA, Nullable<bool> prmSL_SkipHalfPointNBA, Nullable<bool> prmChangeSL_SkipHalfPointCBB, Nullable<bool> prmSL_SkipHalfPointCBB, Nullable<bool> prmChangeSL_SkipHalfPointCFB, Nullable<bool> prmSL_SkipHalfPointCFB, Nullable<bool> prmChangeSL_SkipHalfPointNFL, Nullable<bool> prmSL_SkipHalfPointNFL, Nullable<bool> prmChangeSL_CanBuyOn3NFL, Nullable<bool> prmSL_CanBuyOn3NFL, Nullable<bool> prmChangeSL_CanBuyOn3CFB, Nullable<bool> prmSL_CanBuyOn3CFB, Nullable<bool> prmChangeSL_CanBuyOff3NFL, Nullable<bool> prmSL_CanBuyOff3NFL, Nullable<bool> prmChangeSL_CanBuyOff3CFB, Nullable<bool> prmSL_CanBuyOff3CFB, Nullable<bool> prmChangeSL_CanBuyOn7NFL, Nullable<bool> prmSL_CanBuyOn7NFL, Nullable<bool> prmChangeSL_CanBuyOn7CFB, Nullable<bool> prmSL_CanBuyOn7CFB, Nullable<bool> prmChangeSL_CanBuyOff7NFL, Nullable<bool> prmSL_CanBuyOff7NFL, Nullable<bool> prmChangeSL_CanBuyOff7CFB, Nullable<bool> prmSL_CanBuyOff7CFB, Nullable<bool> prmChangeSL_AlwaysActionMLBTotals, Nullable<bool> prmSL_AlwaysActionMLBTotals, Nullable<bool> prmChangePL_MaxGames, Nullable<byte> prmPL_MaxGames, Nullable<bool> prmChangePL_AllowProps, Nullable<bool> prmPL_AllowProps, Nullable<bool> prmChangePL_AllowGolf, Nullable<bool> prmPL_AllowGolf, Nullable<bool> prmChangePL_AllowMatchUps, Nullable<bool> prmPL_AllowMatchUps, Nullable<bool> prmChangePL_NoListedPitchers, Nullable<bool> prmPL_NoListedPitchers, Nullable<bool> prmChangePL_Juice2TeamParlay, Nullable<short> prmPL_Juice2TeamParlay, Nullable<bool> prmChangePL_TrueOddsOption, Nullable<bool> prmPL_TrueOddsOption, Nullable<bool> prmChangePL_MaxOdds, Nullable<int> prmPL_MaxOdds, Nullable<bool> prmChangePL_MaxPayout, Nullable<decimal> prmPL_MaxPayout, Nullable<bool> prmChangePL_MaxTeamBuyPoints, Nullable<byte> prmPL_MaxTeamBuyPoints, Nullable<bool> prmChangePL_MaxBuyPoints, Nullable<float> prmPL_MaxBuyPoints, Nullable<bool> prmChangePL_AlwaysAction, Nullable<bool> prmPL_AlwaysAction, Nullable<bool> prmChangePL_AllowRunLineTotal, Nullable<bool> prmPL_AllowRunLineTotal, Nullable<bool> prmChangePL_AllowSpreadTotalHK, Nullable<bool> prmPL_AllowSpreadTotalHK, Nullable<bool> prmChangePL_AllowSpreadTotalSOC, Nullable<bool> prmPL_AllowSpreadTotalSOC, Nullable<bool> prmChangePL_TieLoses, Nullable<bool> prmPL_TieLoses, Nullable<bool> prmChangePL_ParlayFormula, Nullable<byte> prmPL_ParlayFormula, Nullable<bool> prmChangePL_AllowOpenPlays, Nullable<bool> prmPL_AllowOpenPlays, Nullable<bool> prmChangePL_OddsDefault, Nullable<int> prmPL_OddsDefault, Nullable<bool> prmChangePL_LowerUseDefault, Nullable<bool> prmPL_LowerUseDefault, Nullable<bool> prmChangePL_MaxDogsSide, Nullable<bool> prmPL_MaxDogsSide, Nullable<bool> prmChangePL_MaxDogsTotal, Nullable<bool> prmPL_MaxDogsTotal, Nullable<bool> prmChangePL_MaxDogsMoney, Nullable<bool> prmPL_MaxDogsMoney, Nullable<bool> prmChangePL_UseMaxSumOdds, Nullable<bool> prmPL_UseMaxSumOdds, Nullable<bool> prmChangePL_MaxSumOdds, Nullable<int> prmPL_MaxSumOdds, Nullable<bool> prmChangeIL_MaxParlays, Nullable<byte> prmIL_MaxParlays, Nullable<bool> prmChangeIL_MaxLevelParlays, Nullable<byte> prmIL_MaxLevelParlays, Nullable<bool> prmChangeIL_MaxTeasers, Nullable<byte> prmIL_MaxTeasers, Nullable<bool> prmChangeIL_MaxLevelTeasers, Nullable<byte> prmIL_MaxLevelTeasers, Nullable<bool> prmChangeIL_MaxNumberSB, Nullable<byte> prmIL_MaxNumberSB, Nullable<bool> prmChangeIL_AskAmount, Nullable<bool> prmIL_AskAmount, Nullable<bool> prmChangeIL_AllowChildHigher, Nullable<bool> prmIL_AllowChildHigher, Nullable<bool> prmChangePC_PitcherChangeType, Nullable<byte> prmPC_PitcherChangeType, Nullable<bool> prmChangeTL_OpenLose, Nullable<bool> prmTL_OpenLose, Nullable<bool> prmChangeTL_TeaserCancel, Nullable<bool> prmTL_TeaserCancel, Nullable<bool> prmChangeSG_CancelSide, Nullable<bool> prmSG_CancelSide, Nullable<bool> prmChangeSG_CancelTotal, Nullable<bool> prmSG_CancelTotal, Nullable<bool> prmChangeSG_CancelRunLine, Nullable<bool> prmSG_CancelRunLine, Nullable<bool> prmChangePC_SkipSide, Nullable<bool> prmPC_SkipSide, Nullable<bool> prmChangePC_SkipTotal, Nullable<bool> prmPC_SkipTotal, Nullable<bool> prmChangePC_SkipRunLine, Nullable<bool> prmPC_SkipRunLine, Nullable<bool> prmChangeSOC_Hookups, Nullable<bool> prmSOC_Hookups, Nullable<bool> prmChangeRev_AllowOpen, Nullable<bool> prmRev_AllowOpen, Nullable<bool> prmChangeDuplicateBetsCheckLineChange, Nullable<bool> prmDuplicateBetsCheckLineChange, Nullable<bool> prmChangeDuplicateBetsCheckParlays, Nullable<bool> prmDuplicateBetsCheckParlays, Nullable<bool> prmChangeDuplicateBetsCheckTeasers, Nullable<bool> prmDuplicateBetsCheckTeasers, Nullable<bool> prmChangeDuplicateBetsCheckReverses, Nullable<bool> prmDuplicateBetsCheckReverses, Nullable<bool> prmChangeDuplicateBetsCheckIfbets, Nullable<bool> prmDuplicateBetsCheckIfbets, Nullable<bool> prmChangeDuplicateBetsCheckIfSBRev, Nullable<bool> prmDuplicateBetsCheckIfSBRev, Nullable<bool> prmChangeDuplicateBetsCheckParlaysSB, Nullable<bool> prmDuplicateBetsCheckParlaysSB, Nullable<bool> prmChangeDuplicateBetsCheckTeasersSB, Nullable<bool> prmDuplicateBetsCheckTeasersSB, Nullable<bool> prmChangeDuplicateBetsCheckSameParlay, Nullable<bool> prmDuplicateBetsCheckSameParlay, Nullable<bool> prmChangeDuplicateBetsCheckSameTeaser, Nullable<bool> prmDuplicateBetsCheckSameTeaser, Nullable<bool> prmChangeFPAllowBothSides, Nullable<bool> prmFPAllowBothSides, Nullable<bool> prmChangeFPAllowDuplicatedBets, Nullable<bool> prmFPAllowDuplicatedBets, Nullable<bool> prmChangeFPCheckOfficeFilters, Nullable<bool> prmFPCheckOfficeFilters, Nullable<bool> prmChangeFPMaxFav, Nullable<byte> prmFPMaxFav, Nullable<bool> prmChangeFPMaxPayout, Nullable<decimal> prmFPMaxPayout, Nullable<bool> prmChangeFPMaxTeams, Nullable<byte> prmFPMaxTeams, Nullable<bool> prmChangeFPOddsLimit, Nullable<int> prmFPOddsLimit, Nullable<bool> prmChangeCLMaxWager, Nullable<decimal> prmCLMaxWager, Nullable<bool> prmChangePL_PSTotalCheck, Nullable<bool> prmPL_PSTotalCheck, Nullable<bool> prmChangePL_PSTotalValue, Nullable<double> prmPL_PSTotalValue, Nullable<bool> prmChangePL_UseWideLine, Nullable<bool> prmPL_UseWideLine, Nullable<short> prmIdUser)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmChangeSL_AddSurcharge_3ptsParameter = prmChangeSL_AddSurcharge_3pts.HasValue ?
                new ObjectParameter("prmChangeSL_AddSurcharge_3pts", prmChangeSL_AddSurcharge_3pts) :
                new ObjectParameter("prmChangeSL_AddSurcharge_3pts", typeof(bool));
    
            var prmSL_AddSurcharge_3ptsParameter = prmSL_AddSurcharge_3pts.HasValue ?
                new ObjectParameter("prmSL_AddSurcharge_3pts", prmSL_AddSurcharge_3pts) :
                new ObjectParameter("prmSL_AddSurcharge_3pts", typeof(bool));
    
            var prmChangeSL_AddSurcharge_7ptsParameter = prmChangeSL_AddSurcharge_7pts.HasValue ?
                new ObjectParameter("prmChangeSL_AddSurcharge_7pts", prmChangeSL_AddSurcharge_7pts) :
                new ObjectParameter("prmChangeSL_AddSurcharge_7pts", typeof(bool));
    
            var prmSL_AddSurcharge_7ptsParameter = prmSL_AddSurcharge_7pts.HasValue ?
                new ObjectParameter("prmSL_AddSurcharge_7pts", prmSL_AddSurcharge_7pts) :
                new ObjectParameter("prmSL_AddSurcharge_7pts", typeof(bool));
    
            var prmChangeSL_IfBetsParameter = prmChangeSL_IfBets.HasValue ?
                new ObjectParameter("prmChangeSL_IfBets", prmChangeSL_IfBets) :
                new ObjectParameter("prmChangeSL_IfBets", typeof(bool));
    
            var prmSL_IfBetsParameter = prmSL_IfBets.HasValue ?
                new ObjectParameter("prmSL_IfBets", prmSL_IfBets) :
                new ObjectParameter("prmSL_IfBets", typeof(bool));
    
            var prmChangeSL_SkipHalfPointNBAParameter = prmChangeSL_SkipHalfPointNBA.HasValue ?
                new ObjectParameter("prmChangeSL_SkipHalfPointNBA", prmChangeSL_SkipHalfPointNBA) :
                new ObjectParameter("prmChangeSL_SkipHalfPointNBA", typeof(bool));
    
            var prmSL_SkipHalfPointNBAParameter = prmSL_SkipHalfPointNBA.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointNBA", prmSL_SkipHalfPointNBA) :
                new ObjectParameter("prmSL_SkipHalfPointNBA", typeof(bool));
    
            var prmChangeSL_SkipHalfPointCBBParameter = prmChangeSL_SkipHalfPointCBB.HasValue ?
                new ObjectParameter("prmChangeSL_SkipHalfPointCBB", prmChangeSL_SkipHalfPointCBB) :
                new ObjectParameter("prmChangeSL_SkipHalfPointCBB", typeof(bool));
    
            var prmSL_SkipHalfPointCBBParameter = prmSL_SkipHalfPointCBB.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointCBB", prmSL_SkipHalfPointCBB) :
                new ObjectParameter("prmSL_SkipHalfPointCBB", typeof(bool));
    
            var prmChangeSL_SkipHalfPointCFBParameter = prmChangeSL_SkipHalfPointCFB.HasValue ?
                new ObjectParameter("prmChangeSL_SkipHalfPointCFB", prmChangeSL_SkipHalfPointCFB) :
                new ObjectParameter("prmChangeSL_SkipHalfPointCFB", typeof(bool));
    
            var prmSL_SkipHalfPointCFBParameter = prmSL_SkipHalfPointCFB.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointCFB", prmSL_SkipHalfPointCFB) :
                new ObjectParameter("prmSL_SkipHalfPointCFB", typeof(bool));
    
            var prmChangeSL_SkipHalfPointNFLParameter = prmChangeSL_SkipHalfPointNFL.HasValue ?
                new ObjectParameter("prmChangeSL_SkipHalfPointNFL", prmChangeSL_SkipHalfPointNFL) :
                new ObjectParameter("prmChangeSL_SkipHalfPointNFL", typeof(bool));
    
            var prmSL_SkipHalfPointNFLParameter = prmSL_SkipHalfPointNFL.HasValue ?
                new ObjectParameter("prmSL_SkipHalfPointNFL", prmSL_SkipHalfPointNFL) :
                new ObjectParameter("prmSL_SkipHalfPointNFL", typeof(bool));
    
            var prmChangeSL_CanBuyOn3NFLParameter = prmChangeSL_CanBuyOn3NFL.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOn3NFL", prmChangeSL_CanBuyOn3NFL) :
                new ObjectParameter("prmChangeSL_CanBuyOn3NFL", typeof(bool));
    
            var prmSL_CanBuyOn3NFLParameter = prmSL_CanBuyOn3NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn3NFL", prmSL_CanBuyOn3NFL) :
                new ObjectParameter("prmSL_CanBuyOn3NFL", typeof(bool));
    
            var prmChangeSL_CanBuyOn3CFBParameter = prmChangeSL_CanBuyOn3CFB.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOn3CFB", prmChangeSL_CanBuyOn3CFB) :
                new ObjectParameter("prmChangeSL_CanBuyOn3CFB", typeof(bool));
    
            var prmSL_CanBuyOn3CFBParameter = prmSL_CanBuyOn3CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn3CFB", prmSL_CanBuyOn3CFB) :
                new ObjectParameter("prmSL_CanBuyOn3CFB", typeof(bool));
    
            var prmChangeSL_CanBuyOff3NFLParameter = prmChangeSL_CanBuyOff3NFL.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOff3NFL", prmChangeSL_CanBuyOff3NFL) :
                new ObjectParameter("prmChangeSL_CanBuyOff3NFL", typeof(bool));
    
            var prmSL_CanBuyOff3NFLParameter = prmSL_CanBuyOff3NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff3NFL", prmSL_CanBuyOff3NFL) :
                new ObjectParameter("prmSL_CanBuyOff3NFL", typeof(bool));
    
            var prmChangeSL_CanBuyOff3CFBParameter = prmChangeSL_CanBuyOff3CFB.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOff3CFB", prmChangeSL_CanBuyOff3CFB) :
                new ObjectParameter("prmChangeSL_CanBuyOff3CFB", typeof(bool));
    
            var prmSL_CanBuyOff3CFBParameter = prmSL_CanBuyOff3CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff3CFB", prmSL_CanBuyOff3CFB) :
                new ObjectParameter("prmSL_CanBuyOff3CFB", typeof(bool));
    
            var prmChangeSL_CanBuyOn7NFLParameter = prmChangeSL_CanBuyOn7NFL.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOn7NFL", prmChangeSL_CanBuyOn7NFL) :
                new ObjectParameter("prmChangeSL_CanBuyOn7NFL", typeof(bool));
    
            var prmSL_CanBuyOn7NFLParameter = prmSL_CanBuyOn7NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn7NFL", prmSL_CanBuyOn7NFL) :
                new ObjectParameter("prmSL_CanBuyOn7NFL", typeof(bool));
    
            var prmChangeSL_CanBuyOn7CFBParameter = prmChangeSL_CanBuyOn7CFB.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOn7CFB", prmChangeSL_CanBuyOn7CFB) :
                new ObjectParameter("prmChangeSL_CanBuyOn7CFB", typeof(bool));
    
            var prmSL_CanBuyOn7CFBParameter = prmSL_CanBuyOn7CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOn7CFB", prmSL_CanBuyOn7CFB) :
                new ObjectParameter("prmSL_CanBuyOn7CFB", typeof(bool));
    
            var prmChangeSL_CanBuyOff7NFLParameter = prmChangeSL_CanBuyOff7NFL.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOff7NFL", prmChangeSL_CanBuyOff7NFL) :
                new ObjectParameter("prmChangeSL_CanBuyOff7NFL", typeof(bool));
    
            var prmSL_CanBuyOff7NFLParameter = prmSL_CanBuyOff7NFL.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff7NFL", prmSL_CanBuyOff7NFL) :
                new ObjectParameter("prmSL_CanBuyOff7NFL", typeof(bool));
    
            var prmChangeSL_CanBuyOff7CFBParameter = prmChangeSL_CanBuyOff7CFB.HasValue ?
                new ObjectParameter("prmChangeSL_CanBuyOff7CFB", prmChangeSL_CanBuyOff7CFB) :
                new ObjectParameter("prmChangeSL_CanBuyOff7CFB", typeof(bool));
    
            var prmSL_CanBuyOff7CFBParameter = prmSL_CanBuyOff7CFB.HasValue ?
                new ObjectParameter("prmSL_CanBuyOff7CFB", prmSL_CanBuyOff7CFB) :
                new ObjectParameter("prmSL_CanBuyOff7CFB", typeof(bool));
    
            var prmChangeSL_AlwaysActionMLBTotalsParameter = prmChangeSL_AlwaysActionMLBTotals.HasValue ?
                new ObjectParameter("prmChangeSL_AlwaysActionMLBTotals", prmChangeSL_AlwaysActionMLBTotals) :
                new ObjectParameter("prmChangeSL_AlwaysActionMLBTotals", typeof(bool));
    
            var prmSL_AlwaysActionMLBTotalsParameter = prmSL_AlwaysActionMLBTotals.HasValue ?
                new ObjectParameter("prmSL_AlwaysActionMLBTotals", prmSL_AlwaysActionMLBTotals) :
                new ObjectParameter("prmSL_AlwaysActionMLBTotals", typeof(bool));
    
            var prmChangePL_MaxGamesParameter = prmChangePL_MaxGames.HasValue ?
                new ObjectParameter("prmChangePL_MaxGames", prmChangePL_MaxGames) :
                new ObjectParameter("prmChangePL_MaxGames", typeof(bool));
    
            var prmPL_MaxGamesParameter = prmPL_MaxGames.HasValue ?
                new ObjectParameter("prmPL_MaxGames", prmPL_MaxGames) :
                new ObjectParameter("prmPL_MaxGames", typeof(byte));
    
            var prmChangePL_AllowPropsParameter = prmChangePL_AllowProps.HasValue ?
                new ObjectParameter("prmChangePL_AllowProps", prmChangePL_AllowProps) :
                new ObjectParameter("prmChangePL_AllowProps", typeof(bool));
    
            var prmPL_AllowPropsParameter = prmPL_AllowProps.HasValue ?
                new ObjectParameter("prmPL_AllowProps", prmPL_AllowProps) :
                new ObjectParameter("prmPL_AllowProps", typeof(bool));
    
            var prmChangePL_AllowGolfParameter = prmChangePL_AllowGolf.HasValue ?
                new ObjectParameter("prmChangePL_AllowGolf", prmChangePL_AllowGolf) :
                new ObjectParameter("prmChangePL_AllowGolf", typeof(bool));
    
            var prmPL_AllowGolfParameter = prmPL_AllowGolf.HasValue ?
                new ObjectParameter("prmPL_AllowGolf", prmPL_AllowGolf) :
                new ObjectParameter("prmPL_AllowGolf", typeof(bool));
    
            var prmChangePL_AllowMatchUpsParameter = prmChangePL_AllowMatchUps.HasValue ?
                new ObjectParameter("prmChangePL_AllowMatchUps", prmChangePL_AllowMatchUps) :
                new ObjectParameter("prmChangePL_AllowMatchUps", typeof(bool));
    
            var prmPL_AllowMatchUpsParameter = prmPL_AllowMatchUps.HasValue ?
                new ObjectParameter("prmPL_AllowMatchUps", prmPL_AllowMatchUps) :
                new ObjectParameter("prmPL_AllowMatchUps", typeof(bool));
    
            var prmChangePL_NoListedPitchersParameter = prmChangePL_NoListedPitchers.HasValue ?
                new ObjectParameter("prmChangePL_NoListedPitchers", prmChangePL_NoListedPitchers) :
                new ObjectParameter("prmChangePL_NoListedPitchers", typeof(bool));
    
            var prmPL_NoListedPitchersParameter = prmPL_NoListedPitchers.HasValue ?
                new ObjectParameter("prmPL_NoListedPitchers", prmPL_NoListedPitchers) :
                new ObjectParameter("prmPL_NoListedPitchers", typeof(bool));
    
            var prmChangePL_Juice2TeamParlayParameter = prmChangePL_Juice2TeamParlay.HasValue ?
                new ObjectParameter("prmChangePL_Juice2TeamParlay", prmChangePL_Juice2TeamParlay) :
                new ObjectParameter("prmChangePL_Juice2TeamParlay", typeof(bool));
    
            var prmPL_Juice2TeamParlayParameter = prmPL_Juice2TeamParlay.HasValue ?
                new ObjectParameter("prmPL_Juice2TeamParlay", prmPL_Juice2TeamParlay) :
                new ObjectParameter("prmPL_Juice2TeamParlay", typeof(short));
    
            var prmChangePL_TrueOddsOptionParameter = prmChangePL_TrueOddsOption.HasValue ?
                new ObjectParameter("prmChangePL_TrueOddsOption", prmChangePL_TrueOddsOption) :
                new ObjectParameter("prmChangePL_TrueOddsOption", typeof(bool));
    
            var prmPL_TrueOddsOptionParameter = prmPL_TrueOddsOption.HasValue ?
                new ObjectParameter("prmPL_TrueOddsOption", prmPL_TrueOddsOption) :
                new ObjectParameter("prmPL_TrueOddsOption", typeof(bool));
    
            var prmChangePL_MaxOddsParameter = prmChangePL_MaxOdds.HasValue ?
                new ObjectParameter("prmChangePL_MaxOdds", prmChangePL_MaxOdds) :
                new ObjectParameter("prmChangePL_MaxOdds", typeof(bool));
    
            var prmPL_MaxOddsParameter = prmPL_MaxOdds.HasValue ?
                new ObjectParameter("prmPL_MaxOdds", prmPL_MaxOdds) :
                new ObjectParameter("prmPL_MaxOdds", typeof(int));
    
            var prmChangePL_MaxPayoutParameter = prmChangePL_MaxPayout.HasValue ?
                new ObjectParameter("prmChangePL_MaxPayout", prmChangePL_MaxPayout) :
                new ObjectParameter("prmChangePL_MaxPayout", typeof(bool));
    
            var prmPL_MaxPayoutParameter = prmPL_MaxPayout.HasValue ?
                new ObjectParameter("prmPL_MaxPayout", prmPL_MaxPayout) :
                new ObjectParameter("prmPL_MaxPayout", typeof(decimal));
    
            var prmChangePL_MaxTeamBuyPointsParameter = prmChangePL_MaxTeamBuyPoints.HasValue ?
                new ObjectParameter("prmChangePL_MaxTeamBuyPoints", prmChangePL_MaxTeamBuyPoints) :
                new ObjectParameter("prmChangePL_MaxTeamBuyPoints", typeof(bool));
    
            var prmPL_MaxTeamBuyPointsParameter = prmPL_MaxTeamBuyPoints.HasValue ?
                new ObjectParameter("prmPL_MaxTeamBuyPoints", prmPL_MaxTeamBuyPoints) :
                new ObjectParameter("prmPL_MaxTeamBuyPoints", typeof(byte));
    
            var prmChangePL_MaxBuyPointsParameter = prmChangePL_MaxBuyPoints.HasValue ?
                new ObjectParameter("prmChangePL_MaxBuyPoints", prmChangePL_MaxBuyPoints) :
                new ObjectParameter("prmChangePL_MaxBuyPoints", typeof(bool));
    
            var prmPL_MaxBuyPointsParameter = prmPL_MaxBuyPoints.HasValue ?
                new ObjectParameter("prmPL_MaxBuyPoints", prmPL_MaxBuyPoints) :
                new ObjectParameter("prmPL_MaxBuyPoints", typeof(float));
    
            var prmChangePL_AlwaysActionParameter = prmChangePL_AlwaysAction.HasValue ?
                new ObjectParameter("prmChangePL_AlwaysAction", prmChangePL_AlwaysAction) :
                new ObjectParameter("prmChangePL_AlwaysAction", typeof(bool));
    
            var prmPL_AlwaysActionParameter = prmPL_AlwaysAction.HasValue ?
                new ObjectParameter("prmPL_AlwaysAction", prmPL_AlwaysAction) :
                new ObjectParameter("prmPL_AlwaysAction", typeof(bool));
    
            var prmChangePL_AllowRunLineTotalParameter = prmChangePL_AllowRunLineTotal.HasValue ?
                new ObjectParameter("prmChangePL_AllowRunLineTotal", prmChangePL_AllowRunLineTotal) :
                new ObjectParameter("prmChangePL_AllowRunLineTotal", typeof(bool));
    
            var prmPL_AllowRunLineTotalParameter = prmPL_AllowRunLineTotal.HasValue ?
                new ObjectParameter("prmPL_AllowRunLineTotal", prmPL_AllowRunLineTotal) :
                new ObjectParameter("prmPL_AllowRunLineTotal", typeof(bool));
    
            var prmChangePL_AllowSpreadTotalHKParameter = prmChangePL_AllowSpreadTotalHK.HasValue ?
                new ObjectParameter("prmChangePL_AllowSpreadTotalHK", prmChangePL_AllowSpreadTotalHK) :
                new ObjectParameter("prmChangePL_AllowSpreadTotalHK", typeof(bool));
    
            var prmPL_AllowSpreadTotalHKParameter = prmPL_AllowSpreadTotalHK.HasValue ?
                new ObjectParameter("prmPL_AllowSpreadTotalHK", prmPL_AllowSpreadTotalHK) :
                new ObjectParameter("prmPL_AllowSpreadTotalHK", typeof(bool));
    
            var prmChangePL_AllowSpreadTotalSOCParameter = prmChangePL_AllowSpreadTotalSOC.HasValue ?
                new ObjectParameter("prmChangePL_AllowSpreadTotalSOC", prmChangePL_AllowSpreadTotalSOC) :
                new ObjectParameter("prmChangePL_AllowSpreadTotalSOC", typeof(bool));
    
            var prmPL_AllowSpreadTotalSOCParameter = prmPL_AllowSpreadTotalSOC.HasValue ?
                new ObjectParameter("prmPL_AllowSpreadTotalSOC", prmPL_AllowSpreadTotalSOC) :
                new ObjectParameter("prmPL_AllowSpreadTotalSOC", typeof(bool));
    
            var prmChangePL_TieLosesParameter = prmChangePL_TieLoses.HasValue ?
                new ObjectParameter("prmChangePL_TieLoses", prmChangePL_TieLoses) :
                new ObjectParameter("prmChangePL_TieLoses", typeof(bool));
    
            var prmPL_TieLosesParameter = prmPL_TieLoses.HasValue ?
                new ObjectParameter("prmPL_TieLoses", prmPL_TieLoses) :
                new ObjectParameter("prmPL_TieLoses", typeof(bool));
    
            var prmChangePL_ParlayFormulaParameter = prmChangePL_ParlayFormula.HasValue ?
                new ObjectParameter("prmChangePL_ParlayFormula", prmChangePL_ParlayFormula) :
                new ObjectParameter("prmChangePL_ParlayFormula", typeof(bool));
    
            var prmPL_ParlayFormulaParameter = prmPL_ParlayFormula.HasValue ?
                new ObjectParameter("prmPL_ParlayFormula", prmPL_ParlayFormula) :
                new ObjectParameter("prmPL_ParlayFormula", typeof(byte));
    
            var prmChangePL_AllowOpenPlaysParameter = prmChangePL_AllowOpenPlays.HasValue ?
                new ObjectParameter("prmChangePL_AllowOpenPlays", prmChangePL_AllowOpenPlays) :
                new ObjectParameter("prmChangePL_AllowOpenPlays", typeof(bool));
    
            var prmPL_AllowOpenPlaysParameter = prmPL_AllowOpenPlays.HasValue ?
                new ObjectParameter("prmPL_AllowOpenPlays", prmPL_AllowOpenPlays) :
                new ObjectParameter("prmPL_AllowOpenPlays", typeof(bool));
    
            var prmChangePL_OddsDefaultParameter = prmChangePL_OddsDefault.HasValue ?
                new ObjectParameter("prmChangePL_OddsDefault", prmChangePL_OddsDefault) :
                new ObjectParameter("prmChangePL_OddsDefault", typeof(bool));
    
            var prmPL_OddsDefaultParameter = prmPL_OddsDefault.HasValue ?
                new ObjectParameter("prmPL_OddsDefault", prmPL_OddsDefault) :
                new ObjectParameter("prmPL_OddsDefault", typeof(int));
    
            var prmChangePL_LowerUseDefaultParameter = prmChangePL_LowerUseDefault.HasValue ?
                new ObjectParameter("prmChangePL_LowerUseDefault", prmChangePL_LowerUseDefault) :
                new ObjectParameter("prmChangePL_LowerUseDefault", typeof(bool));
    
            var prmPL_LowerUseDefaultParameter = prmPL_LowerUseDefault.HasValue ?
                new ObjectParameter("prmPL_LowerUseDefault", prmPL_LowerUseDefault) :
                new ObjectParameter("prmPL_LowerUseDefault", typeof(bool));
    
            var prmChangePL_MaxDogsSideParameter = prmChangePL_MaxDogsSide.HasValue ?
                new ObjectParameter("prmChangePL_MaxDogsSide", prmChangePL_MaxDogsSide) :
                new ObjectParameter("prmChangePL_MaxDogsSide", typeof(bool));
    
            var prmPL_MaxDogsSideParameter = prmPL_MaxDogsSide.HasValue ?
                new ObjectParameter("prmPL_MaxDogsSide", prmPL_MaxDogsSide) :
                new ObjectParameter("prmPL_MaxDogsSide", typeof(bool));
    
            var prmChangePL_MaxDogsTotalParameter = prmChangePL_MaxDogsTotal.HasValue ?
                new ObjectParameter("prmChangePL_MaxDogsTotal", prmChangePL_MaxDogsTotal) :
                new ObjectParameter("prmChangePL_MaxDogsTotal", typeof(bool));
    
            var prmPL_MaxDogsTotalParameter = prmPL_MaxDogsTotal.HasValue ?
                new ObjectParameter("prmPL_MaxDogsTotal", prmPL_MaxDogsTotal) :
                new ObjectParameter("prmPL_MaxDogsTotal", typeof(bool));
    
            var prmChangePL_MaxDogsMoneyParameter = prmChangePL_MaxDogsMoney.HasValue ?
                new ObjectParameter("prmChangePL_MaxDogsMoney", prmChangePL_MaxDogsMoney) :
                new ObjectParameter("prmChangePL_MaxDogsMoney", typeof(bool));
    
            var prmPL_MaxDogsMoneyParameter = prmPL_MaxDogsMoney.HasValue ?
                new ObjectParameter("prmPL_MaxDogsMoney", prmPL_MaxDogsMoney) :
                new ObjectParameter("prmPL_MaxDogsMoney", typeof(bool));
    
            var prmChangePL_UseMaxSumOddsParameter = prmChangePL_UseMaxSumOdds.HasValue ?
                new ObjectParameter("prmChangePL_UseMaxSumOdds", prmChangePL_UseMaxSumOdds) :
                new ObjectParameter("prmChangePL_UseMaxSumOdds", typeof(bool));
    
            var prmPL_UseMaxSumOddsParameter = prmPL_UseMaxSumOdds.HasValue ?
                new ObjectParameter("prmPL_UseMaxSumOdds", prmPL_UseMaxSumOdds) :
                new ObjectParameter("prmPL_UseMaxSumOdds", typeof(bool));
    
            var prmChangePL_MaxSumOddsParameter = prmChangePL_MaxSumOdds.HasValue ?
                new ObjectParameter("prmChangePL_MaxSumOdds", prmChangePL_MaxSumOdds) :
                new ObjectParameter("prmChangePL_MaxSumOdds", typeof(bool));
    
            var prmPL_MaxSumOddsParameter = prmPL_MaxSumOdds.HasValue ?
                new ObjectParameter("prmPL_MaxSumOdds", prmPL_MaxSumOdds) :
                new ObjectParameter("prmPL_MaxSumOdds", typeof(int));
    
            var prmChangeIL_MaxParlaysParameter = prmChangeIL_MaxParlays.HasValue ?
                new ObjectParameter("prmChangeIL_MaxParlays", prmChangeIL_MaxParlays) :
                new ObjectParameter("prmChangeIL_MaxParlays", typeof(bool));
    
            var prmIL_MaxParlaysParameter = prmIL_MaxParlays.HasValue ?
                new ObjectParameter("prmIL_MaxParlays", prmIL_MaxParlays) :
                new ObjectParameter("prmIL_MaxParlays", typeof(byte));
    
            var prmChangeIL_MaxLevelParlaysParameter = prmChangeIL_MaxLevelParlays.HasValue ?
                new ObjectParameter("prmChangeIL_MaxLevelParlays", prmChangeIL_MaxLevelParlays) :
                new ObjectParameter("prmChangeIL_MaxLevelParlays", typeof(bool));
    
            var prmIL_MaxLevelParlaysParameter = prmIL_MaxLevelParlays.HasValue ?
                new ObjectParameter("prmIL_MaxLevelParlays", prmIL_MaxLevelParlays) :
                new ObjectParameter("prmIL_MaxLevelParlays", typeof(byte));
    
            var prmChangeIL_MaxTeasersParameter = prmChangeIL_MaxTeasers.HasValue ?
                new ObjectParameter("prmChangeIL_MaxTeasers", prmChangeIL_MaxTeasers) :
                new ObjectParameter("prmChangeIL_MaxTeasers", typeof(bool));
    
            var prmIL_MaxTeasersParameter = prmIL_MaxTeasers.HasValue ?
                new ObjectParameter("prmIL_MaxTeasers", prmIL_MaxTeasers) :
                new ObjectParameter("prmIL_MaxTeasers", typeof(byte));
    
            var prmChangeIL_MaxLevelTeasersParameter = prmChangeIL_MaxLevelTeasers.HasValue ?
                new ObjectParameter("prmChangeIL_MaxLevelTeasers", prmChangeIL_MaxLevelTeasers) :
                new ObjectParameter("prmChangeIL_MaxLevelTeasers", typeof(bool));
    
            var prmIL_MaxLevelTeasersParameter = prmIL_MaxLevelTeasers.HasValue ?
                new ObjectParameter("prmIL_MaxLevelTeasers", prmIL_MaxLevelTeasers) :
                new ObjectParameter("prmIL_MaxLevelTeasers", typeof(byte));
    
            var prmChangeIL_MaxNumberSBParameter = prmChangeIL_MaxNumberSB.HasValue ?
                new ObjectParameter("prmChangeIL_MaxNumberSB", prmChangeIL_MaxNumberSB) :
                new ObjectParameter("prmChangeIL_MaxNumberSB", typeof(bool));
    
            var prmIL_MaxNumberSBParameter = prmIL_MaxNumberSB.HasValue ?
                new ObjectParameter("prmIL_MaxNumberSB", prmIL_MaxNumberSB) :
                new ObjectParameter("prmIL_MaxNumberSB", typeof(byte));
    
            var prmChangeIL_AskAmountParameter = prmChangeIL_AskAmount.HasValue ?
                new ObjectParameter("prmChangeIL_AskAmount", prmChangeIL_AskAmount) :
                new ObjectParameter("prmChangeIL_AskAmount", typeof(bool));
    
            var prmIL_AskAmountParameter = prmIL_AskAmount.HasValue ?
                new ObjectParameter("prmIL_AskAmount", prmIL_AskAmount) :
                new ObjectParameter("prmIL_AskAmount", typeof(bool));
    
            var prmChangeIL_AllowChildHigherParameter = prmChangeIL_AllowChildHigher.HasValue ?
                new ObjectParameter("prmChangeIL_AllowChildHigher", prmChangeIL_AllowChildHigher) :
                new ObjectParameter("prmChangeIL_AllowChildHigher", typeof(bool));
    
            var prmIL_AllowChildHigherParameter = prmIL_AllowChildHigher.HasValue ?
                new ObjectParameter("prmIL_AllowChildHigher", prmIL_AllowChildHigher) :
                new ObjectParameter("prmIL_AllowChildHigher", typeof(bool));
    
            var prmChangePC_PitcherChangeTypeParameter = prmChangePC_PitcherChangeType.HasValue ?
                new ObjectParameter("prmChangePC_PitcherChangeType", prmChangePC_PitcherChangeType) :
                new ObjectParameter("prmChangePC_PitcherChangeType", typeof(bool));
    
            var prmPC_PitcherChangeTypeParameter = prmPC_PitcherChangeType.HasValue ?
                new ObjectParameter("prmPC_PitcherChangeType", prmPC_PitcherChangeType) :
                new ObjectParameter("prmPC_PitcherChangeType", typeof(byte));
    
            var prmChangeTL_OpenLoseParameter = prmChangeTL_OpenLose.HasValue ?
                new ObjectParameter("prmChangeTL_OpenLose", prmChangeTL_OpenLose) :
                new ObjectParameter("prmChangeTL_OpenLose", typeof(bool));
    
            var prmTL_OpenLoseParameter = prmTL_OpenLose.HasValue ?
                new ObjectParameter("prmTL_OpenLose", prmTL_OpenLose) :
                new ObjectParameter("prmTL_OpenLose", typeof(bool));
    
            var prmChangeTL_TeaserCancelParameter = prmChangeTL_TeaserCancel.HasValue ?
                new ObjectParameter("prmChangeTL_TeaserCancel", prmChangeTL_TeaserCancel) :
                new ObjectParameter("prmChangeTL_TeaserCancel", typeof(bool));
    
            var prmTL_TeaserCancelParameter = prmTL_TeaserCancel.HasValue ?
                new ObjectParameter("prmTL_TeaserCancel", prmTL_TeaserCancel) :
                new ObjectParameter("prmTL_TeaserCancel", typeof(bool));
    
            var prmChangeSG_CancelSideParameter = prmChangeSG_CancelSide.HasValue ?
                new ObjectParameter("prmChangeSG_CancelSide", prmChangeSG_CancelSide) :
                new ObjectParameter("prmChangeSG_CancelSide", typeof(bool));
    
            var prmSG_CancelSideParameter = prmSG_CancelSide.HasValue ?
                new ObjectParameter("prmSG_CancelSide", prmSG_CancelSide) :
                new ObjectParameter("prmSG_CancelSide", typeof(bool));
    
            var prmChangeSG_CancelTotalParameter = prmChangeSG_CancelTotal.HasValue ?
                new ObjectParameter("prmChangeSG_CancelTotal", prmChangeSG_CancelTotal) :
                new ObjectParameter("prmChangeSG_CancelTotal", typeof(bool));
    
            var prmSG_CancelTotalParameter = prmSG_CancelTotal.HasValue ?
                new ObjectParameter("prmSG_CancelTotal", prmSG_CancelTotal) :
                new ObjectParameter("prmSG_CancelTotal", typeof(bool));
    
            var prmChangeSG_CancelRunLineParameter = prmChangeSG_CancelRunLine.HasValue ?
                new ObjectParameter("prmChangeSG_CancelRunLine", prmChangeSG_CancelRunLine) :
                new ObjectParameter("prmChangeSG_CancelRunLine", typeof(bool));
    
            var prmSG_CancelRunLineParameter = prmSG_CancelRunLine.HasValue ?
                new ObjectParameter("prmSG_CancelRunLine", prmSG_CancelRunLine) :
                new ObjectParameter("prmSG_CancelRunLine", typeof(bool));
    
            var prmChangePC_SkipSideParameter = prmChangePC_SkipSide.HasValue ?
                new ObjectParameter("prmChangePC_SkipSide", prmChangePC_SkipSide) :
                new ObjectParameter("prmChangePC_SkipSide", typeof(bool));
    
            var prmPC_SkipSideParameter = prmPC_SkipSide.HasValue ?
                new ObjectParameter("prmPC_SkipSide", prmPC_SkipSide) :
                new ObjectParameter("prmPC_SkipSide", typeof(bool));
    
            var prmChangePC_SkipTotalParameter = prmChangePC_SkipTotal.HasValue ?
                new ObjectParameter("prmChangePC_SkipTotal", prmChangePC_SkipTotal) :
                new ObjectParameter("prmChangePC_SkipTotal", typeof(bool));
    
            var prmPC_SkipTotalParameter = prmPC_SkipTotal.HasValue ?
                new ObjectParameter("prmPC_SkipTotal", prmPC_SkipTotal) :
                new ObjectParameter("prmPC_SkipTotal", typeof(bool));
    
            var prmChangePC_SkipRunLineParameter = prmChangePC_SkipRunLine.HasValue ?
                new ObjectParameter("prmChangePC_SkipRunLine", prmChangePC_SkipRunLine) :
                new ObjectParameter("prmChangePC_SkipRunLine", typeof(bool));
    
            var prmPC_SkipRunLineParameter = prmPC_SkipRunLine.HasValue ?
                new ObjectParameter("prmPC_SkipRunLine", prmPC_SkipRunLine) :
                new ObjectParameter("prmPC_SkipRunLine", typeof(bool));
    
            var prmChangeSOC_HookupsParameter = prmChangeSOC_Hookups.HasValue ?
                new ObjectParameter("prmChangeSOC_Hookups", prmChangeSOC_Hookups) :
                new ObjectParameter("prmChangeSOC_Hookups", typeof(bool));
    
            var prmSOC_HookupsParameter = prmSOC_Hookups.HasValue ?
                new ObjectParameter("prmSOC_Hookups", prmSOC_Hookups) :
                new ObjectParameter("prmSOC_Hookups", typeof(bool));
    
            var prmChangeRev_AllowOpenParameter = prmChangeRev_AllowOpen.HasValue ?
                new ObjectParameter("prmChangeRev_AllowOpen", prmChangeRev_AllowOpen) :
                new ObjectParameter("prmChangeRev_AllowOpen", typeof(bool));
    
            var prmRev_AllowOpenParameter = prmRev_AllowOpen.HasValue ?
                new ObjectParameter("prmRev_AllowOpen", prmRev_AllowOpen) :
                new ObjectParameter("prmRev_AllowOpen", typeof(bool));
    
            var prmChangeDuplicateBetsCheckLineChangeParameter = prmChangeDuplicateBetsCheckLineChange.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckLineChange", prmChangeDuplicateBetsCheckLineChange) :
                new ObjectParameter("prmChangeDuplicateBetsCheckLineChange", typeof(bool));
    
            var prmDuplicateBetsCheckLineChangeParameter = prmDuplicateBetsCheckLineChange.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckLineChange", prmDuplicateBetsCheckLineChange) :
                new ObjectParameter("prmDuplicateBetsCheckLineChange", typeof(bool));
    
            var prmChangeDuplicateBetsCheckParlaysParameter = prmChangeDuplicateBetsCheckParlays.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckParlays", prmChangeDuplicateBetsCheckParlays) :
                new ObjectParameter("prmChangeDuplicateBetsCheckParlays", typeof(bool));
    
            var prmDuplicateBetsCheckParlaysParameter = prmDuplicateBetsCheckParlays.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckParlays", prmDuplicateBetsCheckParlays) :
                new ObjectParameter("prmDuplicateBetsCheckParlays", typeof(bool));
    
            var prmChangeDuplicateBetsCheckTeasersParameter = prmChangeDuplicateBetsCheckTeasers.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckTeasers", prmChangeDuplicateBetsCheckTeasers) :
                new ObjectParameter("prmChangeDuplicateBetsCheckTeasers", typeof(bool));
    
            var prmDuplicateBetsCheckTeasersParameter = prmDuplicateBetsCheckTeasers.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckTeasers", prmDuplicateBetsCheckTeasers) :
                new ObjectParameter("prmDuplicateBetsCheckTeasers", typeof(bool));
    
            var prmChangeDuplicateBetsCheckReversesParameter = prmChangeDuplicateBetsCheckReverses.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckReverses", prmChangeDuplicateBetsCheckReverses) :
                new ObjectParameter("prmChangeDuplicateBetsCheckReverses", typeof(bool));
    
            var prmDuplicateBetsCheckReversesParameter = prmDuplicateBetsCheckReverses.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckReverses", prmDuplicateBetsCheckReverses) :
                new ObjectParameter("prmDuplicateBetsCheckReverses", typeof(bool));
    
            var prmChangeDuplicateBetsCheckIfbetsParameter = prmChangeDuplicateBetsCheckIfbets.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckIfbets", prmChangeDuplicateBetsCheckIfbets) :
                new ObjectParameter("prmChangeDuplicateBetsCheckIfbets", typeof(bool));
    
            var prmDuplicateBetsCheckIfbetsParameter = prmDuplicateBetsCheckIfbets.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckIfbets", prmDuplicateBetsCheckIfbets) :
                new ObjectParameter("prmDuplicateBetsCheckIfbets", typeof(bool));
    
            var prmChangeDuplicateBetsCheckIfSBRevParameter = prmChangeDuplicateBetsCheckIfSBRev.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckIfSBRev", prmChangeDuplicateBetsCheckIfSBRev) :
                new ObjectParameter("prmChangeDuplicateBetsCheckIfSBRev", typeof(bool));
    
            var prmDuplicateBetsCheckIfSBRevParameter = prmDuplicateBetsCheckIfSBRev.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckIfSBRev", prmDuplicateBetsCheckIfSBRev) :
                new ObjectParameter("prmDuplicateBetsCheckIfSBRev", typeof(bool));
    
            var prmChangeDuplicateBetsCheckParlaysSBParameter = prmChangeDuplicateBetsCheckParlaysSB.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckParlaysSB", prmChangeDuplicateBetsCheckParlaysSB) :
                new ObjectParameter("prmChangeDuplicateBetsCheckParlaysSB", typeof(bool));
    
            var prmDuplicateBetsCheckParlaysSBParameter = prmDuplicateBetsCheckParlaysSB.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckParlaysSB", prmDuplicateBetsCheckParlaysSB) :
                new ObjectParameter("prmDuplicateBetsCheckParlaysSB", typeof(bool));
    
            var prmChangeDuplicateBetsCheckTeasersSBParameter = prmChangeDuplicateBetsCheckTeasersSB.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckTeasersSB", prmChangeDuplicateBetsCheckTeasersSB) :
                new ObjectParameter("prmChangeDuplicateBetsCheckTeasersSB", typeof(bool));
    
            var prmDuplicateBetsCheckTeasersSBParameter = prmDuplicateBetsCheckTeasersSB.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckTeasersSB", prmDuplicateBetsCheckTeasersSB) :
                new ObjectParameter("prmDuplicateBetsCheckTeasersSB", typeof(bool));
    
            var prmChangeDuplicateBetsCheckSameParlayParameter = prmChangeDuplicateBetsCheckSameParlay.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckSameParlay", prmChangeDuplicateBetsCheckSameParlay) :
                new ObjectParameter("prmChangeDuplicateBetsCheckSameParlay", typeof(bool));
    
            var prmDuplicateBetsCheckSameParlayParameter = prmDuplicateBetsCheckSameParlay.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckSameParlay", prmDuplicateBetsCheckSameParlay) :
                new ObjectParameter("prmDuplicateBetsCheckSameParlay", typeof(bool));
    
            var prmChangeDuplicateBetsCheckSameTeaserParameter = prmChangeDuplicateBetsCheckSameTeaser.HasValue ?
                new ObjectParameter("prmChangeDuplicateBetsCheckSameTeaser", prmChangeDuplicateBetsCheckSameTeaser) :
                new ObjectParameter("prmChangeDuplicateBetsCheckSameTeaser", typeof(bool));
    
            var prmDuplicateBetsCheckSameTeaserParameter = prmDuplicateBetsCheckSameTeaser.HasValue ?
                new ObjectParameter("prmDuplicateBetsCheckSameTeaser", prmDuplicateBetsCheckSameTeaser) :
                new ObjectParameter("prmDuplicateBetsCheckSameTeaser", typeof(bool));
    
            var prmChangeFPAllowBothSidesParameter = prmChangeFPAllowBothSides.HasValue ?
                new ObjectParameter("prmChangeFPAllowBothSides", prmChangeFPAllowBothSides) :
                new ObjectParameter("prmChangeFPAllowBothSides", typeof(bool));
    
            var prmFPAllowBothSidesParameter = prmFPAllowBothSides.HasValue ?
                new ObjectParameter("prmFPAllowBothSides", prmFPAllowBothSides) :
                new ObjectParameter("prmFPAllowBothSides", typeof(bool));
    
            var prmChangeFPAllowDuplicatedBetsParameter = prmChangeFPAllowDuplicatedBets.HasValue ?
                new ObjectParameter("prmChangeFPAllowDuplicatedBets", prmChangeFPAllowDuplicatedBets) :
                new ObjectParameter("prmChangeFPAllowDuplicatedBets", typeof(bool));
    
            var prmFPAllowDuplicatedBetsParameter = prmFPAllowDuplicatedBets.HasValue ?
                new ObjectParameter("prmFPAllowDuplicatedBets", prmFPAllowDuplicatedBets) :
                new ObjectParameter("prmFPAllowDuplicatedBets", typeof(bool));
    
            var prmChangeFPCheckOfficeFiltersParameter = prmChangeFPCheckOfficeFilters.HasValue ?
                new ObjectParameter("prmChangeFPCheckOfficeFilters", prmChangeFPCheckOfficeFilters) :
                new ObjectParameter("prmChangeFPCheckOfficeFilters", typeof(bool));
    
            var prmFPCheckOfficeFiltersParameter = prmFPCheckOfficeFilters.HasValue ?
                new ObjectParameter("prmFPCheckOfficeFilters", prmFPCheckOfficeFilters) :
                new ObjectParameter("prmFPCheckOfficeFilters", typeof(bool));
    
            var prmChangeFPMaxFavParameter = prmChangeFPMaxFav.HasValue ?
                new ObjectParameter("prmChangeFPMaxFav", prmChangeFPMaxFav) :
                new ObjectParameter("prmChangeFPMaxFav", typeof(bool));
    
            var prmFPMaxFavParameter = prmFPMaxFav.HasValue ?
                new ObjectParameter("prmFPMaxFav", prmFPMaxFav) :
                new ObjectParameter("prmFPMaxFav", typeof(byte));
    
            var prmChangeFPMaxPayoutParameter = prmChangeFPMaxPayout.HasValue ?
                new ObjectParameter("prmChangeFPMaxPayout", prmChangeFPMaxPayout) :
                new ObjectParameter("prmChangeFPMaxPayout", typeof(bool));
    
            var prmFPMaxPayoutParameter = prmFPMaxPayout.HasValue ?
                new ObjectParameter("prmFPMaxPayout", prmFPMaxPayout) :
                new ObjectParameter("prmFPMaxPayout", typeof(decimal));
    
            var prmChangeFPMaxTeamsParameter = prmChangeFPMaxTeams.HasValue ?
                new ObjectParameter("prmChangeFPMaxTeams", prmChangeFPMaxTeams) :
                new ObjectParameter("prmChangeFPMaxTeams", typeof(bool));
    
            var prmFPMaxTeamsParameter = prmFPMaxTeams.HasValue ?
                new ObjectParameter("prmFPMaxTeams", prmFPMaxTeams) :
                new ObjectParameter("prmFPMaxTeams", typeof(byte));
    
            var prmChangeFPOddsLimitParameter = prmChangeFPOddsLimit.HasValue ?
                new ObjectParameter("prmChangeFPOddsLimit", prmChangeFPOddsLimit) :
                new ObjectParameter("prmChangeFPOddsLimit", typeof(bool));
    
            var prmFPOddsLimitParameter = prmFPOddsLimit.HasValue ?
                new ObjectParameter("prmFPOddsLimit", prmFPOddsLimit) :
                new ObjectParameter("prmFPOddsLimit", typeof(int));
    
            var prmChangeCLMaxWagerParameter = prmChangeCLMaxWager.HasValue ?
                new ObjectParameter("prmChangeCLMaxWager", prmChangeCLMaxWager) :
                new ObjectParameter("prmChangeCLMaxWager", typeof(bool));
    
            var prmCLMaxWagerParameter = prmCLMaxWager.HasValue ?
                new ObjectParameter("prmCLMaxWager", prmCLMaxWager) :
                new ObjectParameter("prmCLMaxWager", typeof(decimal));
    
            var prmChangePL_PSTotalCheckParameter = prmChangePL_PSTotalCheck.HasValue ?
                new ObjectParameter("prmChangePL_PSTotalCheck", prmChangePL_PSTotalCheck) :
                new ObjectParameter("prmChangePL_PSTotalCheck", typeof(bool));
    
            var prmPL_PSTotalCheckParameter = prmPL_PSTotalCheck.HasValue ?
                new ObjectParameter("prmPL_PSTotalCheck", prmPL_PSTotalCheck) :
                new ObjectParameter("prmPL_PSTotalCheck", typeof(bool));
    
            var prmChangePL_PSTotalValueParameter = prmChangePL_PSTotalValue.HasValue ?
                new ObjectParameter("prmChangePL_PSTotalValue", prmChangePL_PSTotalValue) :
                new ObjectParameter("prmChangePL_PSTotalValue", typeof(bool));
    
            var prmPL_PSTotalValueParameter = prmPL_PSTotalValue.HasValue ?
                new ObjectParameter("prmPL_PSTotalValue", prmPL_PSTotalValue) :
                new ObjectParameter("prmPL_PSTotalValue", typeof(double));
    
            var prmChangePL_UseWideLineParameter = prmChangePL_UseWideLine.HasValue ?
                new ObjectParameter("prmChangePL_UseWideLine", prmChangePL_UseWideLine) :
                new ObjectParameter("prmChangePL_UseWideLine", typeof(bool));
    
            var prmPL_UseWideLineParameter = prmPL_UseWideLine.HasValue ?
                new ObjectParameter("prmPL_UseWideLine", prmPL_UseWideLine) :
                new ObjectParameter("prmPL_UseWideLine", typeof(bool));
    
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfile_UpdateByFields", prmIdProfileParameter, prmChangeSL_AddSurcharge_3ptsParameter, prmSL_AddSurcharge_3ptsParameter, prmChangeSL_AddSurcharge_7ptsParameter, prmSL_AddSurcharge_7ptsParameter, prmChangeSL_IfBetsParameter, prmSL_IfBetsParameter, prmChangeSL_SkipHalfPointNBAParameter, prmSL_SkipHalfPointNBAParameter, prmChangeSL_SkipHalfPointCBBParameter, prmSL_SkipHalfPointCBBParameter, prmChangeSL_SkipHalfPointCFBParameter, prmSL_SkipHalfPointCFBParameter, prmChangeSL_SkipHalfPointNFLParameter, prmSL_SkipHalfPointNFLParameter, prmChangeSL_CanBuyOn3NFLParameter, prmSL_CanBuyOn3NFLParameter, prmChangeSL_CanBuyOn3CFBParameter, prmSL_CanBuyOn3CFBParameter, prmChangeSL_CanBuyOff3NFLParameter, prmSL_CanBuyOff3NFLParameter, prmChangeSL_CanBuyOff3CFBParameter, prmSL_CanBuyOff3CFBParameter, prmChangeSL_CanBuyOn7NFLParameter, prmSL_CanBuyOn7NFLParameter, prmChangeSL_CanBuyOn7CFBParameter, prmSL_CanBuyOn7CFBParameter, prmChangeSL_CanBuyOff7NFLParameter, prmSL_CanBuyOff7NFLParameter, prmChangeSL_CanBuyOff7CFBParameter, prmSL_CanBuyOff7CFBParameter, prmChangeSL_AlwaysActionMLBTotalsParameter, prmSL_AlwaysActionMLBTotalsParameter, prmChangePL_MaxGamesParameter, prmPL_MaxGamesParameter, prmChangePL_AllowPropsParameter, prmPL_AllowPropsParameter, prmChangePL_AllowGolfParameter, prmPL_AllowGolfParameter, prmChangePL_AllowMatchUpsParameter, prmPL_AllowMatchUpsParameter, prmChangePL_NoListedPitchersParameter, prmPL_NoListedPitchersParameter, prmChangePL_Juice2TeamParlayParameter, prmPL_Juice2TeamParlayParameter, prmChangePL_TrueOddsOptionParameter, prmPL_TrueOddsOptionParameter, prmChangePL_MaxOddsParameter, prmPL_MaxOddsParameter, prmChangePL_MaxPayoutParameter, prmPL_MaxPayoutParameter, prmChangePL_MaxTeamBuyPointsParameter, prmPL_MaxTeamBuyPointsParameter, prmChangePL_MaxBuyPointsParameter, prmPL_MaxBuyPointsParameter, prmChangePL_AlwaysActionParameter, prmPL_AlwaysActionParameter, prmChangePL_AllowRunLineTotalParameter, prmPL_AllowRunLineTotalParameter, prmChangePL_AllowSpreadTotalHKParameter, prmPL_AllowSpreadTotalHKParameter, prmChangePL_AllowSpreadTotalSOCParameter, prmPL_AllowSpreadTotalSOCParameter, prmChangePL_TieLosesParameter, prmPL_TieLosesParameter, prmChangePL_ParlayFormulaParameter, prmPL_ParlayFormulaParameter, prmChangePL_AllowOpenPlaysParameter, prmPL_AllowOpenPlaysParameter, prmChangePL_OddsDefaultParameter, prmPL_OddsDefaultParameter, prmChangePL_LowerUseDefaultParameter, prmPL_LowerUseDefaultParameter, prmChangePL_MaxDogsSideParameter, prmPL_MaxDogsSideParameter, prmChangePL_MaxDogsTotalParameter, prmPL_MaxDogsTotalParameter, prmChangePL_MaxDogsMoneyParameter, prmPL_MaxDogsMoneyParameter, prmChangePL_UseMaxSumOddsParameter, prmPL_UseMaxSumOddsParameter, prmChangePL_MaxSumOddsParameter, prmPL_MaxSumOddsParameter, prmChangeIL_MaxParlaysParameter, prmIL_MaxParlaysParameter, prmChangeIL_MaxLevelParlaysParameter, prmIL_MaxLevelParlaysParameter, prmChangeIL_MaxTeasersParameter, prmIL_MaxTeasersParameter, prmChangeIL_MaxLevelTeasersParameter, prmIL_MaxLevelTeasersParameter, prmChangeIL_MaxNumberSBParameter, prmIL_MaxNumberSBParameter, prmChangeIL_AskAmountParameter, prmIL_AskAmountParameter, prmChangeIL_AllowChildHigherParameter, prmIL_AllowChildHigherParameter, prmChangePC_PitcherChangeTypeParameter, prmPC_PitcherChangeTypeParameter, prmChangeTL_OpenLoseParameter, prmTL_OpenLoseParameter, prmChangeTL_TeaserCancelParameter, prmTL_TeaserCancelParameter, prmChangeSG_CancelSideParameter, prmSG_CancelSideParameter, prmChangeSG_CancelTotalParameter, prmSG_CancelTotalParameter, prmChangeSG_CancelRunLineParameter, prmSG_CancelRunLineParameter, prmChangePC_SkipSideParameter, prmPC_SkipSideParameter, prmChangePC_SkipTotalParameter, prmPC_SkipTotalParameter, prmChangePC_SkipRunLineParameter, prmPC_SkipRunLineParameter, prmChangeSOC_HookupsParameter, prmSOC_HookupsParameter, prmChangeRev_AllowOpenParameter, prmRev_AllowOpenParameter, prmChangeDuplicateBetsCheckLineChangeParameter, prmDuplicateBetsCheckLineChangeParameter, prmChangeDuplicateBetsCheckParlaysParameter, prmDuplicateBetsCheckParlaysParameter, prmChangeDuplicateBetsCheckTeasersParameter, prmDuplicateBetsCheckTeasersParameter, prmChangeDuplicateBetsCheckReversesParameter, prmDuplicateBetsCheckReversesParameter, prmChangeDuplicateBetsCheckIfbetsParameter, prmDuplicateBetsCheckIfbetsParameter, prmChangeDuplicateBetsCheckIfSBRevParameter, prmDuplicateBetsCheckIfSBRevParameter, prmChangeDuplicateBetsCheckParlaysSBParameter, prmDuplicateBetsCheckParlaysSBParameter, prmChangeDuplicateBetsCheckTeasersSBParameter, prmDuplicateBetsCheckTeasersSBParameter, prmChangeDuplicateBetsCheckSameParlayParameter, prmDuplicateBetsCheckSameParlayParameter, prmChangeDuplicateBetsCheckSameTeaserParameter, prmDuplicateBetsCheckSameTeaserParameter, prmChangeFPAllowBothSidesParameter, prmFPAllowBothSidesParameter, prmChangeFPAllowDuplicatedBetsParameter, prmFPAllowDuplicatedBetsParameter, prmChangeFPCheckOfficeFiltersParameter, prmFPCheckOfficeFiltersParameter, prmChangeFPMaxFavParameter, prmFPMaxFavParameter, prmChangeFPMaxPayoutParameter, prmFPMaxPayoutParameter, prmChangeFPMaxTeamsParameter, prmFPMaxTeamsParameter, prmChangeFPOddsLimitParameter, prmFPOddsLimitParameter, prmChangeCLMaxWagerParameter, prmCLMaxWagerParameter, prmChangePL_PSTotalCheckParameter, prmPL_PSTotalCheckParameter, prmChangePL_PSTotalValueParameter, prmPL_PSTotalValueParameter, prmChangePL_UseWideLineParameter, prmPL_UseWideLineParameter, prmIdUserParameter);
        }
    
        public virtual int PlayerProfileBook_Delete(Nullable<short> prmIdProfile, Nullable<short> prmIdBook)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfileBook_Delete", prmIdProfileParameter, prmIdBookParameter);
        }
    
        public virtual int PlayerProfileBook_DeleteAll(Nullable<short> prmIdProfile)
        {
            var prmIdProfileParameter = prmIdProfile.HasValue ?
                new ObjectParameter("prmIdProfile", prmIdProfile) :
                new ObjectParameter("prmIdProfile", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayerProfileBook_DeleteAll", prmIdProfileParameter);
        }
    
        public virtual int UsersBook_Insert(Nullable<short> prmIdUser, Nullable<short> prmIdBook)
        {
            var prmIdUserParameter = prmIdUser.HasValue ?
                new ObjectParameter("prmIdUser", prmIdUser) :
                new ObjectParameter("prmIdUser", typeof(short));
    
            var prmIdBookParameter = prmIdBook.HasValue ?
                new ObjectParameter("prmIdBook", prmIdBook) :
                new ObjectParameter("prmIdBook", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsersBook_Insert", prmIdUserParameter, prmIdBookParameter);
        }
    }
}
