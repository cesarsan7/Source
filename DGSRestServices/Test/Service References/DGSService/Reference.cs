//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.DGSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgentModel", Namespace="http://schemas.datacontract.org/2004/07/DGSRestServices.Model.Class")]
    [System.SerializableAttribute()]
    public partial class AgentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CommCasinoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CommHorsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CommSportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DontXferPlayerActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdAgentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdGroupingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdLineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDistributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastModificationUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MakeupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnlineMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PerHeadCasinoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PerHeadHorsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PerHeadSportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Agent {
            get {
                return this.AgentField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentField, value) != true)) {
                    this.AgentField = value;
                    this.RaisePropertyChanged("Agent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CommCasino {
            get {
                return this.CommCasinoField;
            }
            set {
                if ((this.CommCasinoField.Equals(value) != true)) {
                    this.CommCasinoField = value;
                    this.RaisePropertyChanged("CommCasino");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CommHorses {
            get {
                return this.CommHorsesField;
            }
            set {
                if ((this.CommHorsesField.Equals(value) != true)) {
                    this.CommHorsesField = value;
                    this.RaisePropertyChanged("CommHorses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CommSports {
            get {
                return this.CommSportsField;
            }
            set {
                if ((this.CommSportsField.Equals(value) != true)) {
                    this.CommSportsField = value;
                    this.RaisePropertyChanged("CommSports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Distributor {
            get {
                return this.DistributorField;
            }
            set {
                if ((this.DistributorField.Equals(value) != true)) {
                    this.DistributorField = value;
                    this.RaisePropertyChanged("Distributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DontXferPlayerActivity {
            get {
                return this.DontXferPlayerActivityField;
            }
            set {
                if ((this.DontXferPlayerActivityField.Equals(value) != true)) {
                    this.DontXferPlayerActivityField = value;
                    this.RaisePropertyChanged("DontXferPlayerActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enable {
            get {
                return this.EnableField;
            }
            set {
                if ((this.EnableField.Equals(value) != true)) {
                    this.EnableField = value;
                    this.RaisePropertyChanged("Enable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdAgent {
            get {
                return this.IdAgentField;
            }
            set {
                if ((this.IdAgentField.Equals(value) != true)) {
                    this.IdAgentField = value;
                    this.RaisePropertyChanged("IdAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdAgentType {
            get {
                return this.IdAgentTypeField;
            }
            set {
                if ((this.IdAgentTypeField.Equals(value) != true)) {
                    this.IdAgentTypeField = value;
                    this.RaisePropertyChanged("IdAgentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdBook {
            get {
                return this.IdBookField;
            }
            set {
                if ((this.IdBookField.Equals(value) != true)) {
                    this.IdBookField = value;
                    this.RaisePropertyChanged("IdBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdCurrency {
            get {
                return this.IdCurrencyField;
            }
            set {
                if ((this.IdCurrencyField.Equals(value) != true)) {
                    this.IdCurrencyField = value;
                    this.RaisePropertyChanged("IdCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdGrouping {
            get {
                return this.IdGroupingField;
            }
            set {
                if ((this.IdGroupingField.Equals(value) != true)) {
                    this.IdGroupingField = value;
                    this.RaisePropertyChanged("IdGrouping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdLineType {
            get {
                return this.IdLineTypeField;
            }
            set {
                if ((this.IdLineTypeField.Equals(value) != true)) {
                    this.IdLineTypeField = value;
                    this.RaisePropertyChanged("IdLineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDistributed {
            get {
                return this.IsDistributedField;
            }
            set {
                if ((this.IsDistributedField.Equals(value) != true)) {
                    this.IsDistributedField = value;
                    this.RaisePropertyChanged("IsDistributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDistributor {
            get {
                return this.IsDistributorField;
            }
            set {
                if ((this.IsDistributorField.Equals(value) != true)) {
                    this.IsDistributorField = value;
                    this.RaisePropertyChanged("IsDistributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModification {
            get {
                return this.LastModificationField;
            }
            set {
                if ((this.LastModificationField.Equals(value) != true)) {
                    this.LastModificationField = value;
                    this.RaisePropertyChanged("LastModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastModificationUser {
            get {
                return this.LastModificationUserField;
            }
            set {
                if ((this.LastModificationUserField.Equals(value) != true)) {
                    this.LastModificationUserField = value;
                    this.RaisePropertyChanged("LastModificationUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Makeup {
            get {
                return this.MakeupField;
            }
            set {
                if ((this.MakeupField.Equals(value) != true)) {
                    this.MakeupField = value;
                    this.RaisePropertyChanged("Makeup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlineAccess {
            get {
                return this.OnlineAccessField;
            }
            set {
                if ((this.OnlineAccessField.Equals(value) != true)) {
                    this.OnlineAccessField = value;
                    this.RaisePropertyChanged("OnlineAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnlineMessage {
            get {
                return this.OnlineMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineMessageField, value) != true)) {
                    this.OnlineMessageField = value;
                    this.RaisePropertyChanged("OnlineMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PerHeadCasino {
            get {
                return this.PerHeadCasinoField;
            }
            set {
                if ((this.PerHeadCasinoField.Equals(value) != true)) {
                    this.PerHeadCasinoField = value;
                    this.RaisePropertyChanged("PerHeadCasino");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PerHeadHorses {
            get {
                return this.PerHeadHorsesField;
            }
            set {
                if ((this.PerHeadHorsesField.Equals(value) != true)) {
                    this.PerHeadHorsesField = value;
                    this.RaisePropertyChanged("PerHeadHorses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PerHeadSports {
            get {
                return this.PerHeadSportsField;
            }
            set {
                if ((this.PerHeadSportsField.Equals(value) != true)) {
                    this.PerHeadSportsField = value;
                    this.RaisePropertyChanged("PerHeadSports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookModel", Namespace="http://schemas.datacontract.org/2004/07/DGSRestServices.Model.Class")]
    [System.SerializableAttribute()]
    public partial class BookModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdWebColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LastModificationUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IdBook {
            get {
                return this.IdBookField;
            }
            set {
                if ((this.IdBookField.Equals(value) != true)) {
                    this.IdBookField = value;
                    this.RaisePropertyChanged("IdBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdWebColumn {
            get {
                return this.IdWebColumnField;
            }
            set {
                if ((this.IdWebColumnField.Equals(value) != true)) {
                    this.IdWebColumnField = value;
                    this.RaisePropertyChanged("IdWebColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModification {
            get {
                return this.LastModificationField;
            }
            set {
                if ((this.LastModificationField.Equals(value) != true)) {
                    this.LastModificationField = value;
                    this.RaisePropertyChanged("LastModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LastModificationUser {
            get {
                return this.LastModificationUserField;
            }
            set {
                if ((this.LastModificationUserField.Equals(value) != true)) {
                    this.LastModificationUserField = value;
                    this.RaisePropertyChanged("LastModificationUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DGSService.IDGSWCFService")]
    public interface IDGSWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetInfoService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetInfoServiceResponse")]
        string agentGetInfoService(string agent, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetInfoService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetInfoServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetInfoServiceAsync(string agent, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentFindListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentFindListServiceResponse")]
        string agentFindListService(string agent, string name, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentFindListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentFindListServiceResponse")]
        System.Threading.Tasks.Task<string> agentFindListServiceAsync(string agent, string name, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetAgentsListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetAgentsListServiceResponse")]
        string agentGetAgentsListService(string idAgent, string decimasl, string trunc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetAgentsListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetAgentsListServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetAgentsListServiceAsync(string idAgent, string decimasl, string trunc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetDistributorService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetDistributorServiceResponse")]
        string agentGetDistributorService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetDistributorService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetDistributorServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetDistributorServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetInfoDistributorService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetInfoDistributorServiceResponse")]
        string agentGetInfoDistributorService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetInfoDistributorService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetInfoDistributorServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetInfoDistributorServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetListServiceResponse")]
        string agentGetListService(string pridUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetListServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetListServiceAsync(string pridUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetListByBookService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetListByBookServiceResponse")]
        string agentGetListByBookService(string idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetListByBookService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetListByBookServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetListByBookServiceAsync(string idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetNotesService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetNotesServiceResponse")]
        string agentGetNotesService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetNotesService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetNotesServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetNotesServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetPlayersListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetPlayersListServiceResponse")]
        string agentGetPlayersListService(string Idagent, string decimals, string trunc, string idCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetPlayersListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetPlayersListServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetPlayersListServiceAsync(string Idagent, string decimals, string trunc, string idCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetPlayersIDService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetPlayersIDServiceResponse")]
        string agentGetPlayersIDService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetPlayersIDService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetPlayersIDServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetPlayersIDServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetStatisticsService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetStatisticsServiceResponse")]
        string agentGetStatisticsService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentGetStatisticsService", ReplyAction="http://tempuri.org/IDGSWCFService/agentGetStatisticsServiceResponse")]
        System.Threading.Tasks.Task<string> agentGetStatisticsServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentLineTypesGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentLineTypesGetListServiceResponse")]
        string agentLineTypesGetListService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentLineTypesGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentLineTypesGetListServiceResponse")]
        System.Threading.Tasks.Task<string> agentLineTypesGetListServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentLineTypesGetListAddedService", ReplyAction="http://tempuri.org/IDGSWCFService/agentLineTypesGetListAddedServiceResponse")]
        string agentLineTypesGetListAddedService(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentLineTypesGetListAddedService", ReplyAction="http://tempuri.org/IDGSWCFService/agentLineTypesGetListAddedServiceResponse")]
        System.Threading.Tasks.Task<string> agentLineTypesGetListAddedServiceAsync(string idAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentRightsGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentRightsGetListServiceResponse")]
        string agentRightsGetListService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/agentRightsGetListService", ReplyAction="http://tempuri.org/IDGSWCFService/agentRightsGetListServiceResponse")]
        System.Threading.Tasks.Task<string> agentRightsGetListServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/addAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/addAgentServiceResponse")]
        string addAgentService(Test.DGSService.AgentModel agentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/addAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/addAgentServiceResponse")]
        System.Threading.Tasks.Task<string> addAgentServiceAsync(Test.DGSService.AgentModel agentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/updateAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/updateAgentServiceResponse")]
        string updateAgentService(Test.DGSService.AgentModel agentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/updateAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/updateAgentServiceResponse")]
        System.Threading.Tasks.Task<string> updateAgentServiceAsync(Test.DGSService.AgentModel agentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/deleteAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/deleteAgentServiceResponse")]
        string deleteAgentService(string idAgent, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/deleteAgentService", ReplyAction="http://tempuri.org/IDGSWCFService/deleteAgentServiceResponse")]
        System.Threading.Tasks.Task<string> deleteAgentServiceAsync(string idAgent, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/addBookService", ReplyAction="http://tempuri.org/IDGSWCFService/addBookServiceResponse")]
        string addBookService(Test.DGSService.BookModel bookModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDGSWCFService/addBookService", ReplyAction="http://tempuri.org/IDGSWCFService/addBookServiceResponse")]
        System.Threading.Tasks.Task<string> addBookServiceAsync(Test.DGSService.BookModel bookModel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDGSWCFServiceChannel : Test.DGSService.IDGSWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DGSWCFServiceClient : System.ServiceModel.ClientBase<Test.DGSService.IDGSWCFService>, Test.DGSService.IDGSWCFService {
        
        public DGSWCFServiceClient() {
        }
        
        public DGSWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DGSWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGSWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DGSWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string agentGetInfoService(string agent, string idUser) {
            return base.Channel.agentGetInfoService(agent, idUser);
        }
        
        public System.Threading.Tasks.Task<string> agentGetInfoServiceAsync(string agent, string idUser) {
            return base.Channel.agentGetInfoServiceAsync(agent, idUser);
        }
        
        public string agentFindListService(string agent, string name, string idUser) {
            return base.Channel.agentFindListService(agent, name, idUser);
        }
        
        public System.Threading.Tasks.Task<string> agentFindListServiceAsync(string agent, string name, string idUser) {
            return base.Channel.agentFindListServiceAsync(agent, name, idUser);
        }
        
        public string agentGetAgentsListService(string idAgent, string decimasl, string trunc) {
            return base.Channel.agentGetAgentsListService(idAgent, decimasl, trunc);
        }
        
        public System.Threading.Tasks.Task<string> agentGetAgentsListServiceAsync(string idAgent, string decimasl, string trunc) {
            return base.Channel.agentGetAgentsListServiceAsync(idAgent, decimasl, trunc);
        }
        
        public string agentGetDistributorService(string idAgent) {
            return base.Channel.agentGetDistributorService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentGetDistributorServiceAsync(string idAgent) {
            return base.Channel.agentGetDistributorServiceAsync(idAgent);
        }
        
        public string agentGetInfoDistributorService(string idAgent) {
            return base.Channel.agentGetInfoDistributorService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentGetInfoDistributorServiceAsync(string idAgent) {
            return base.Channel.agentGetInfoDistributorServiceAsync(idAgent);
        }
        
        public string agentGetListService(string pridUser) {
            return base.Channel.agentGetListService(pridUser);
        }
        
        public System.Threading.Tasks.Task<string> agentGetListServiceAsync(string pridUser) {
            return base.Channel.agentGetListServiceAsync(pridUser);
        }
        
        public string agentGetListByBookService(string idBook) {
            return base.Channel.agentGetListByBookService(idBook);
        }
        
        public System.Threading.Tasks.Task<string> agentGetListByBookServiceAsync(string idBook) {
            return base.Channel.agentGetListByBookServiceAsync(idBook);
        }
        
        public string agentGetNotesService(string idAgent) {
            return base.Channel.agentGetNotesService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentGetNotesServiceAsync(string idAgent) {
            return base.Channel.agentGetNotesServiceAsync(idAgent);
        }
        
        public string agentGetPlayersListService(string Idagent, string decimals, string trunc, string idCurrency) {
            return base.Channel.agentGetPlayersListService(Idagent, decimals, trunc, idCurrency);
        }
        
        public System.Threading.Tasks.Task<string> agentGetPlayersListServiceAsync(string Idagent, string decimals, string trunc, string idCurrency) {
            return base.Channel.agentGetPlayersListServiceAsync(Idagent, decimals, trunc, idCurrency);
        }
        
        public string agentGetPlayersIDService(string idAgent) {
            return base.Channel.agentGetPlayersIDService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentGetPlayersIDServiceAsync(string idAgent) {
            return base.Channel.agentGetPlayersIDServiceAsync(idAgent);
        }
        
        public string agentGetStatisticsService(string idAgent) {
            return base.Channel.agentGetStatisticsService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentGetStatisticsServiceAsync(string idAgent) {
            return base.Channel.agentGetStatisticsServiceAsync(idAgent);
        }
        
        public string agentLineTypesGetListService(string idAgent) {
            return base.Channel.agentLineTypesGetListService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentLineTypesGetListServiceAsync(string idAgent) {
            return base.Channel.agentLineTypesGetListServiceAsync(idAgent);
        }
        
        public string agentLineTypesGetListAddedService(string idAgent) {
            return base.Channel.agentLineTypesGetListAddedService(idAgent);
        }
        
        public System.Threading.Tasks.Task<string> agentLineTypesGetListAddedServiceAsync(string idAgent) {
            return base.Channel.agentLineTypesGetListAddedServiceAsync(idAgent);
        }
        
        public string agentRightsGetListService() {
            return base.Channel.agentRightsGetListService();
        }
        
        public System.Threading.Tasks.Task<string> agentRightsGetListServiceAsync() {
            return base.Channel.agentRightsGetListServiceAsync();
        }
        
        public string addAgentService(Test.DGSService.AgentModel agentModel) {
            return base.Channel.addAgentService(agentModel);
        }
        
        public System.Threading.Tasks.Task<string> addAgentServiceAsync(Test.DGSService.AgentModel agentModel) {
            return base.Channel.addAgentServiceAsync(agentModel);
        }
        
        public string updateAgentService(Test.DGSService.AgentModel agentModel) {
            return base.Channel.updateAgentService(agentModel);
        }
        
        public System.Threading.Tasks.Task<string> updateAgentServiceAsync(Test.DGSService.AgentModel agentModel) {
            return base.Channel.updateAgentServiceAsync(agentModel);
        }
        
        public string deleteAgentService(string idAgent, string idUser) {
            return base.Channel.deleteAgentService(idAgent, idUser);
        }
        
        public System.Threading.Tasks.Task<string> deleteAgentServiceAsync(string idAgent, string idUser) {
            return base.Channel.deleteAgentServiceAsync(idAgent, idUser);
        }
        
        public string addBookService(Test.DGSService.BookModel bookModel) {
            return base.Channel.addBookService(bookModel);
        }
        
        public System.Threading.Tasks.Task<string> addBookServiceAsync(Test.DGSService.BookModel bookModel) {
            return base.Channel.addBookServiceAsync(bookModel);
        }
    }
}
